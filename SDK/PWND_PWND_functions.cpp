// PWND (4.17.2.0) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function PWND.BaseWidgetInterface.OnArrivedToOptionsScreen
// (Event, Public, BlueprintEvent)

void UBaseWidgetInterface::OnArrivedToOptionsScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.BaseWidgetInterface.OnArrivedToOptionsScreen");

	UBaseWidgetInterface_OnArrivedToOptionsScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.BaseWidgetInterface.LeaveOptionsScreen
// (Native, Public)

void UBaseWidgetInterface::LeaveOptionsScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.BaseWidgetInterface.LeaveOptionsScreen");

	UBaseWidgetInterface_LeaveOptionsScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.BaseWidgetInterface.GoToTrainingScreen
// (Native, Public, BlueprintCallable)

void UBaseWidgetInterface::GoToTrainingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.BaseWidgetInterface.GoToTrainingScreen");

	UBaseWidgetInterface_GoToTrainingScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.BaseWidgetInterface.GoToOptionsScreen
// (Final, Native, Public, BlueprintCallable)

void UBaseWidgetInterface::GoToOptionsScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.BaseWidgetInterface.GoToOptionsScreen");

	UBaseWidgetInterface_GoToOptionsScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.BaseWidgetInterface.GoToChallengeScreen
// (Native, Public, BlueprintCallable)

void UBaseWidgetInterface::GoToChallengeScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.BaseWidgetInterface.GoToChallengeScreen");

	UBaseWidgetInterface_GoToChallengeScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.BaseWidgetInterface.GetCurrentScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UBaseWidgetInterface::GetCurrentScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.BaseWidgetInterface.GetCurrentScreen");

	UBaseWidgetInterface_GetCurrentScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_BaseScreen.RequestExitScreen
// (Native, Public, BlueprintCallable)

void UFrontEnd_BaseScreen::RequestExitScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.RequestExitScreen");

	UFrontEnd_BaseScreen_RequestExitScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.RegisterWidgetAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_BaseScreen::RegisterWidgetAnimation(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.RegisterWidgetAnimation");

	UFrontEnd_BaseScreen_RegisterWidgetAnimation_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.RegisterNavigableElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_MenuNavigable*       pNewNavigable                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_BaseScreen::RegisterNavigableElement(class UUI_MenuNavigable* pNewNavigable)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.RegisterNavigableElement");

	UFrontEnd_BaseScreen_RegisterNavigableElement_Params params;
	params.pNewNavigable = pNewNavigable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.OnSafeInitialization
// (Native, Event, Public, BlueprintEvent)

void UFrontEnd_BaseScreen::OnSafeInitialization()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.OnSafeInitialization");

	UFrontEnd_BaseScreen_OnSafeInitialization_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.OnNewWidgetReceiveAttention
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUI_MenuNavigable*       WidgetWithAttention            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_BaseScreen::OnNewWidgetReceiveAttention(class UUI_MenuNavigable* WidgetWithAttention)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.OnNewWidgetReceiveAttention");

	UFrontEnd_BaseScreen_OnNewWidgetReceiveAttention_Params params;
	params.WidgetWithAttention = WidgetWithAttention;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.OnExitScreen
// (Event, Public, BlueprintEvent)

void UFrontEnd_BaseScreen::OnExitScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.OnExitScreen");

	UFrontEnd_BaseScreen_OnExitScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.OnEnterScreen
// (Event, Public, BlueprintEvent)

void UFrontEnd_BaseScreen::OnEnterScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.OnEnterScreen");

	UFrontEnd_BaseScreen_OnEnterScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.OnBumperRight
// (Native, Event, Public, BlueprintEvent)

void UFrontEnd_BaseScreen::OnBumperRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.OnBumperRight");

	UFrontEnd_BaseScreen_OnBumperRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.OnBumperLeft
// (Native, Event, Public, BlueprintEvent)

void UFrontEnd_BaseScreen::OnBumperLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.OnBumperLeft");

	UFrontEnd_BaseScreen_OnBumperLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.OnBack
// (Native, Event, Public, BlueprintEvent)

void UFrontEnd_BaseScreen::OnBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.OnBack");

	UFrontEnd_BaseScreen_OnBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.GetCurrentNavigableThatHasAttention
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_MenuNavigable*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUI_MenuNavigable* UFrontEnd_BaseScreen::GetCurrentNavigableThatHasAttention()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.GetCurrentNavigableThatHasAttention");

	UFrontEnd_BaseScreen_GetCurrentNavigableThatHasAttention_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_BaseScreen.ForceNavigableObjectSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavigableObject               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_BaseScreen::ForceNavigableObjectSelection(class UUserWidget* pNavigableObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.ForceNavigableObjectSelection");

	UFrontEnd_BaseScreen_ForceNavigableObjectSelection_Params params;
	params.pNavigableObject = pNavigableObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_BaseScreen.ClearNavigationAttention
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_BaseScreen::ClearNavigationAttention()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_BaseScreen.ClearNavigationAttention");

	UFrontEnd_BaseScreen_ClearNavigationAttention_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.ShiftAttentionToRightSideOfScreen
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::ShiftAttentionToRightSideOfScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.ShiftAttentionToRightSideOfScreen");

	UFrontEnd_CharacterSelectScreen_ShiftAttentionToRightSideOfScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SetEncapsulatingCanvasPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCanvasPanel*            CanvasPanel                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_CharacterSelectScreen::SetEncapsulatingCanvasPanel(class UCanvasPanel* CanvasPanel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SetEncapsulatingCanvasPanel");

	UFrontEnd_CharacterSelectScreen_SetEncapsulatingCanvasPanel_Params params;
	params.CanvasPanel = CanvasPanel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SetActiveLoadout
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SetActiveLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SetActiveLoadout");

	UFrontEnd_CharacterSelectScreen_SetActiveLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextWeaponSkin
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextWeaponSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextWeaponSkin");

	UFrontEnd_CharacterSelectScreen_SelectNextWeaponSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextSecondaryAbility
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextSecondaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextSecondaryAbility");

	UFrontEnd_CharacterSelectScreen_SelectNextSecondaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextRevive
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextRevive");

	UFrontEnd_CharacterSelectScreen_SelectNextRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPwnStamp
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextPwnStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPwnStamp");

	UFrontEnd_CharacterSelectScreen_SelectNextPwnStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPwn
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPwn");

	UFrontEnd_CharacterSelectScreen_SelectNextPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPrimaryWeapon
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextPrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPrimaryWeapon");

	UFrontEnd_CharacterSelectScreen_SelectNextPrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPrimaryAbility
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextPrimaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPrimaryAbility");

	UFrontEnd_CharacterSelectScreen_SelectNextPrimaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPerk3
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextPerk3()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPerk3");

	UFrontEnd_CharacterSelectScreen_SelectNextPerk3_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPerk2
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextPerk2()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPerk2");

	UFrontEnd_CharacterSelectScreen_SelectNextPerk2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPerk1
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextPerk1()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextPerk1");

	UFrontEnd_CharacterSelectScreen_SelectNextPerk1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.SelectNextCharacterSkin
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::SelectNextCharacterSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.SelectNextCharacterSkin");

	UFrontEnd_CharacterSelectScreen_SelectNextCharacterSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.OnGoBackToMainMenu
// (Native, Event, Public, BlueprintEvent)

void UFrontEnd_CharacterSelectScreen::OnGoBackToMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.OnGoBackToMainMenu");

	UFrontEnd_CharacterSelectScreen_OnGoBackToMainMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.OnCustomReset
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_CharacterSelectScreen::OnCustomReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.OnCustomReset");

	UFrontEnd_CharacterSelectScreen_OnCustomReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CharacterSelectScreen.OnBack_Implementation
// (Final, Native, Public)

void UFrontEnd_CharacterSelectScreen::OnBack_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CharacterSelectScreen.OnBack_Implementation");

	UFrontEnd_CharacterSelectScreen_OnBack_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateAccountScreen.OnGoBackPressed
// (Final, Native, Public)

void UFrontEnd_CreateAccountScreen::OnGoBackPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateAccountScreen.OnGoBackPressed");

	UFrontEnd_CreateAccountScreen_OnGoBackPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateAccountScreen.OnCreateAccountPressed
// (Final, Native, Public)

void UFrontEnd_CreateAccountScreen::OnCreateAccountPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateAccountScreen.OnCreateAccountPressed");

	UFrontEnd_CreateAccountScreen_OnCreateAccountPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateAccountScreen.CloseErrorScreen
// (Final, Native, Private)

void UFrontEnd_CreateAccountScreen::CloseErrorScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateAccountScreen.CloseErrorScreen");

	UFrontEnd_CreateAccountScreen_CloseErrorScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateCustomMatchScreen.PressCreateButton
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_CreateCustomMatchScreen::PressCreateButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateCustomMatchScreen.PressCreateButton");

	UFrontEnd_CreateCustomMatchScreen_PressCreateButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateCustomMatchScreen.OnMapHighlighted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFrontEnd_CreateCustomMatchScreen::OnMapHighlighted(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateCustomMatchScreen.OnMapHighlighted");

	UFrontEnd_CreateCustomMatchScreen_OnMapHighlighted_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CreateCustomMatchScreen.AllPointOptionsAcquired
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FText>           displayTextArray               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_CreateCustomMatchScreen::AllPointOptionsAcquired(TArray<struct FText> displayTextArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateCustomMatchScreen.AllPointOptionsAcquired");

	UFrontEnd_CreateCustomMatchScreen_AllPointOptionsAcquired_Params params;
	params.displayTextArray = displayTextArray;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateCustomMatchScreen.AllMatchTeamSizeOptionsAcquired
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FText>           displayTextArray               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_CreateCustomMatchScreen::AllMatchTeamSizeOptionsAcquired(TArray<struct FText> displayTextArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateCustomMatchScreen.AllMatchTeamSizeOptionsAcquired");

	UFrontEnd_CreateCustomMatchScreen_AllMatchTeamSizeOptionsAcquired_Params params;
	params.displayTextArray = displayTextArray;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateCustomMatchScreen.AllMatchDurationOptionsAcquired
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FText>           displayTextArray               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_CreateCustomMatchScreen::AllMatchDurationOptionsAcquired(TArray<struct FText> displayTextArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateCustomMatchScreen.AllMatchDurationOptionsAcquired");

	UFrontEnd_CreateCustomMatchScreen_AllMatchDurationOptionsAcquired_Params params;
	params.displayTextArray = displayTextArray;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CreateCustomMatchScreen.AllLevelNamesAcquired
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FText>           LevelNames                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_CreateCustomMatchScreen::AllLevelNamesAcquired(TArray<struct FText> LevelNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CreateCustomMatchScreen.AllLevelNamesAcquired");

	UFrontEnd_CreateCustomMatchScreen_AllLevelNamesAcquired_Params params;
	params.LevelNames = LevelNames;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CustomizeScreen.PurchaseItemCallBack
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           bSucceeded                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ErrorMessage                   (ConstParm, Parm, OutParm, ReferenceParm)

void UFrontEnd_CustomizeScreen::PurchaseItemCallBack(bool bSucceeded, const struct FText& ErrorMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.PurchaseItemCallBack");

	UFrontEnd_CustomizeScreen_PurchaseItemCallBack_Params params;
	params.bSucceeded = bSucceeded;
	params.ErrorMessage = ErrorMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CustomizeScreen.PurchaseItem
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   ItemGUID                       (Parm, IsPlainOldData)
// struct FGuid                   CostItemGUID                   (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_CustomizeScreen::PurchaseItem(const struct FGuid& ItemGUID, const struct FGuid& CostItemGUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.PurchaseItem");

	UFrontEnd_CustomizeScreen_PurchaseItem_Params params;
	params.ItemGUID = ItemGUID;
	params.CostItemGUID = CostItemGUID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.OnUpdatedInventoryReceived
// (Event, Public, BlueprintEvent)

void UFrontEnd_CustomizeScreen::OnUpdatedInventoryReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.OnUpdatedInventoryReceived");

	UFrontEnd_CustomizeScreen_OnUpdatedInventoryReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CustomizeScreen.OnLeftFaceButton
// (Event, Public, BlueprintEvent)

void UFrontEnd_CustomizeScreen::OnLeftFaceButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.OnLeftFaceButton");

	UFrontEnd_CustomizeScreen_OnLeftFaceButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CustomizeScreen.OnAccept
// (Event, Public, BlueprintEvent)

void UFrontEnd_CustomizeScreen::OnAccept()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.OnAccept");

	UFrontEnd_CustomizeScreen_OnAccept_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedWeaponSkin
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   weaponSkinGuid                 (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfViewedWeaponSkin(const struct FGuid& weaponSkinGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedWeaponSkin");

	UFrontEnd_CustomizeScreen_NotifyOfViewedWeaponSkin_Params params;
	params.weaponSkinGuid = weaponSkinGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedWeapon
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   weaponGuid                     (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfViewedWeapon(const struct FGuid& weaponGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedWeapon");

	UFrontEnd_CustomizeScreen_NotifyOfViewedWeapon_Params params;
	params.weaponGuid = weaponGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedVoiceLine
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   voiceLineGuid                  (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfViewedVoiceLine(const struct FGuid& voiceLineGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedVoiceLine");

	UFrontEnd_CustomizeScreen_NotifyOfViewedVoiceLine_Params params;
	params.voiceLineGuid = voiceLineGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedReviveAnim
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   reviveAnimGuid                 (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfViewedReviveAnim(const struct FGuid& reviveAnimGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedReviveAnim");

	UFrontEnd_CustomizeScreen_NotifyOfViewedReviveAnim_Params params;
	params.reviveAnimGuid = reviveAnimGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedPwnStamp
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   pwnStampGuid                   (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfViewedPwnStamp(const struct FGuid& pwnStampGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedPwnStamp");

	UFrontEnd_CustomizeScreen_NotifyOfViewedPwnStamp_Params params;
	params.pwnStampGuid = pwnStampGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedPwnAnim
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   pwnAnimGuid                    (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfViewedPwnAnim(const struct FGuid& pwnAnimGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedPwnAnim");

	UFrontEnd_CustomizeScreen_NotifyOfViewedPwnAnim_Params params;
	params.pwnAnimGuid = pwnAnimGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedCharacterSkin
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   skinGuid                       (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfViewedCharacterSkin(const struct FGuid& skinGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfViewedCharacterSkin");

	UFrontEnd_CustomizeScreen_NotifyOfViewedCharacterSkin_Params params;
	params.skinGuid = skinGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.NotifyOfCharacterToView
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_CustomizeScreen::NotifyOfCharacterToView(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.NotifyOfCharacterToView");

	UFrontEnd_CustomizeScreen_NotifyOfCharacterToView_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfWeaponSkins
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   weaponGuid                     (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfWeaponSkins(const struct FGuid& weaponGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfWeaponSkins");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfWeaponSkins_Params params;
	params.weaponGuid = weaponGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfWeapons
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfWeapons(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfWeapons");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfWeapons_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfPwnVoiceLines
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfPwnVoiceLines(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfPwnVoiceLines");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfPwnVoiceLines_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfPwnStamps
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfPwnStamps(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfPwnStamps");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfPwnStamps_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfPwnAnimations
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfPwnAnimations(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfPwnAnimations");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfPwnAnimations_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedWeaponSkins
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   weaponGuid                     (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfOwnedWeaponSkins(const struct FGuid& weaponGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedWeaponSkins");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfOwnedWeaponSkins_Params params;
	params.weaponGuid = weaponGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedWeapons
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfOwnedWeapons(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedWeapons");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfOwnedWeapons_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedPwnVoiceLines
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfOwnedPwnVoiceLines(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedPwnVoiceLines");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfOwnedPwnVoiceLines_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedPwnStamps
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfOwnedPwnStamps(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedPwnStamps");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfOwnedPwnStamps_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedPwnAnimations
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfOwnedPwnAnimations(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedPwnAnimations");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfOwnedPwnAnimations_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedCharacterSkins
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfOwnedCharacterSkins(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfOwnedCharacterSkins");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfOwnedCharacterSkins_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfCharacterSkins
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_CustomizeScreen::GetTotalAmountOfCharacterSkins(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetTotalAmountOfCharacterSkins");

	UFrontEnd_CustomizeScreen_GetTotalAmountOfCharacterSkins_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetEquippedWeaponSkin
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   weaponGuid                     (Parm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UFrontEnd_CustomizeScreen::GetEquippedWeaponSkin(const struct FGuid& weaponGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetEquippedWeaponSkin");

	UFrontEnd_CustomizeScreen_GetEquippedWeaponSkin_Params params;
	params.weaponGuid = weaponGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetEquippedWeapon
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UFrontEnd_CustomizeScreen::GetEquippedWeapon(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetEquippedWeapon");

	UFrontEnd_CustomizeScreen_GetEquippedWeapon_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetEquippedVoiceLine
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UFrontEnd_CustomizeScreen::GetEquippedVoiceLine(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetEquippedVoiceLine");

	UFrontEnd_CustomizeScreen_GetEquippedVoiceLine_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetEquippedSkin
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UFrontEnd_CustomizeScreen::GetEquippedSkin(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetEquippedSkin");

	UFrontEnd_CustomizeScreen_GetEquippedSkin_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetEquippedPwnStamp
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UFrontEnd_CustomizeScreen::GetEquippedPwnStamp(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetEquippedPwnStamp");

	UFrontEnd_CustomizeScreen_GetEquippedPwnStamp_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetEquippedPwnAnimation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UFrontEnd_CustomizeScreen::GetEquippedPwnAnimation(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetEquippedPwnAnimation");

	UFrontEnd_CustomizeScreen_GetEquippedPwnAnimation_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetAvailableCharacters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FGuid>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FGuid> UFrontEnd_CustomizeScreen::GetAvailableCharacters()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetAvailableCharacters");

	UFrontEnd_CustomizeScreen_GetAvailableCharacters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetAllWeaponSkinEquips
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   weaponGuid                     (Parm, IsPlainOldData)
// TArray<struct FPurchasableEquipItem> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPurchasableEquipItem> UFrontEnd_CustomizeScreen::GetAllWeaponSkinEquips(const struct FGuid& weaponGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetAllWeaponSkinEquips");

	UFrontEnd_CustomizeScreen_GetAllWeaponSkinEquips_Params params;
	params.weaponGuid = weaponGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetAllWeaponsEquips
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// TArray<struct FPurchasableEquipItem> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPurchasableEquipItem> UFrontEnd_CustomizeScreen::GetAllWeaponsEquips(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetAllWeaponsEquips");

	UFrontEnd_CustomizeScreen_GetAllWeaponsEquips_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetAllPwnVoiceLineEquips
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// TArray<struct FPurchasableEquipItem> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPurchasableEquipItem> UFrontEnd_CustomizeScreen::GetAllPwnVoiceLineEquips(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetAllPwnVoiceLineEquips");

	UFrontEnd_CustomizeScreen_GetAllPwnVoiceLineEquips_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetAllPwnStampEquips
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// TArray<struct FPurchasableEquipItem> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPurchasableEquipItem> UFrontEnd_CustomizeScreen::GetAllPwnStampEquips(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetAllPwnStampEquips");

	UFrontEnd_CustomizeScreen_GetAllPwnStampEquips_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetAllPwnAnimationEquips
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// TArray<struct FPurchasableEquipItem> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPurchasableEquipItem> UFrontEnd_CustomizeScreen::GetAllPwnAnimationEquips(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetAllPwnAnimationEquips");

	UFrontEnd_CustomizeScreen_GetAllPwnAnimationEquips_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.GetAllCharacterSkinEquips
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// TArray<struct FPurchasableEquipItem> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPurchasableEquipItem> UFrontEnd_CustomizeScreen::GetAllCharacterSkinEquips(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.GetAllCharacterSkinEquips");

	UFrontEnd_CustomizeScreen_GetAllCharacterSkinEquips_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_CustomizeScreen.Equip
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   equipObjectID                  (Parm, IsPlainOldData)

void UFrontEnd_CustomizeScreen::Equip(const struct FGuid& equipObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_CustomizeScreen.Equip");

	UFrontEnd_CustomizeScreen_Equip_Params params;
	params.equipObjectID = equipObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_ErrorScreen.HideErrorScreen
// (Final, Native, Public)

void UFrontEnd_ErrorScreen::HideErrorScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_ErrorScreen.HideErrorScreen");

	UFrontEnd_ErrorScreen_HideErrorScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_EulaNdaScreen.OnCancelPressed
// (Final, Native, Public)

void UFrontEnd_EulaNdaScreen::OnCancelPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_EulaNdaScreen.OnCancelPressed");

	UFrontEnd_EulaNdaScreen_OnCancelPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_EulaNdaScreen.OnAcceptPressed
// (Final, Native, Public)

void UFrontEnd_EulaNdaScreen::OnAcceptPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_EulaNdaScreen.OnAcceptPressed");

	UFrontEnd_EulaNdaScreen_OnAcceptPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.UnevenNumberOfPlayersAlert
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::UnevenNumberOfPlayersAlert()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.UnevenNumberOfPlayersAlert");

	UFrontEnd_LobbyScreen_UnevenNumberOfPlayersAlert_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.SwitchTeams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendBPData     lobbyMember                    (Parm)

void UFrontEnd_LobbyScreen::SwitchTeams(const struct FOnlineFriendBPData& lobbyMember)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.SwitchTeams");

	UFrontEnd_LobbyScreen_SwitchTeams_Params params;
	params.lobbyMember = lobbyMember;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.SwapSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendBPData     lobbyMemberA                   (Parm)
// struct FOnlineFriendBPData     lobbyMemberB                   (Parm)

void UFrontEnd_LobbyScreen::SwapSlots(const struct FOnlineFriendBPData& lobbyMemberA, const struct FOnlineFriendBPData& lobbyMemberB)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.SwapSlots");

	UFrontEnd_LobbyScreen_SwapSlots_Params params;
	params.lobbyMemberA = lobbyMemberA;
	params.lobbyMemberB = lobbyMemberB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.ShowTeamsButtonPressed
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::ShowTeamsButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.ShowTeamsButtonPressed");

	UFrontEnd_LobbyScreen_ShowTeamsButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.ShowTeamLoadoutButtonPressed
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::ShowTeamLoadoutButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.ShowTeamLoadoutButtonPressed");

	UFrontEnd_LobbyScreen_ShowTeamLoadoutButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.SetReadyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsReady                       (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::SetReadyState(bool bIsReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.SetReadyState");

	UFrontEnd_LobbyScreen_SetReadyState_Params params;
	params.bIsReady = bIsReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.SetCurrentGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            selectedGameModeIndex          (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::SetCurrentGameMode(int selectedGameModeIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.SetCurrentGameMode");

	UFrontEnd_LobbyScreen_SetCurrentGameMode_Params params;
	params.selectedGameModeIndex = selectedGameModeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.SelectRandomLoaodut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEvenOutCharacterSelection     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeEnemyTeam              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyReady                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_LobbyScreen::SelectRandomLoaodut(bool bEvenOutCharacterSelection, bool bIncludeEnemyTeam, bool bOnlyReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.SelectRandomLoaodut");

	UFrontEnd_LobbyScreen_SelectRandomLoaodut_Params params;
	params.bEvenOutCharacterSelection = bEvenOutCharacterSelection;
	params.bIncludeEnemyTeam = bIncludeEnemyTeam;
	params.bOnlyReady = bOnlyReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.SelectLoadoutFromList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            indexOfSelected                (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::SelectLoadoutFromList(int indexOfSelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.SelectLoadoutFromList");

	UFrontEnd_LobbyScreen_SelectLoadoutFromList_Params params;
	params.indexOfSelected = indexOfSelected;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.ScoreboardVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::ScoreboardVisible(bool IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.ScoreboardVisible");

	UFrontEnd_LobbyScreen_ScoreboardVisible_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.SaveMatchSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            selectedLevelIndex             (Parm, ZeroConstructor, IsPlainOldData)
// int                            selectedPointsIndex            (Parm, ZeroConstructor, IsPlainOldData)
// int                            selectedDurationIndex          (Parm, ZeroConstructor, IsPlainOldData)
// int                            selectedGameModeIndex          (Parm, ZeroConstructor, IsPlainOldData)
// int                            autoFillBotDifficultyIndex     (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::SaveMatchSettings(int selectedLevelIndex, int selectedPointsIndex, int selectedDurationIndex, int selectedGameModeIndex, int autoFillBotDifficultyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.SaveMatchSettings");

	UFrontEnd_LobbyScreen_SaveMatchSettings_Params params;
	params.selectedLevelIndex = selectedLevelIndex;
	params.selectedPointsIndex = selectedPointsIndex;
	params.selectedDurationIndex = selectedDurationIndex;
	params.selectedGameModeIndex = selectedGameModeIndex;
	params.autoFillBotDifficultyIndex = autoFillBotDifficultyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.RequestLeaveLobby
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::RequestLeaveLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.RequestLeaveLobby");

	UFrontEnd_LobbyScreen_RequestLeaveLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.RequestFriendsList
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::RequestFriendsList()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.RequestFriendsList");

	UFrontEnd_LobbyScreen_RequestFriendsList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.ProvideAvailableCharacterNames
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FText>           characterNames                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_LobbyScreen::ProvideAvailableCharacterNames(TArray<struct FText> characterNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.ProvideAvailableCharacterNames");

	UFrontEnd_LobbyScreen_ProvideAvailableCharacterNames_Params params;
	params.characterNames = characterNames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.ProvideAvailableCharacterGuids
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FGuid>           allCharacterGuids              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_LobbyScreen::ProvideAvailableCharacterGuids(TArray<struct FGuid> allCharacterGuids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.ProvideAvailableCharacterGuids");

	UFrontEnd_LobbyScreen_ProvideAvailableCharacterGuids_Params params;
	params.allCharacterGuids = allCharacterGuids;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.PressReadyButton
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::PressReadyButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.PressReadyButton");

	UFrontEnd_LobbyScreen_PressReadyButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.PressChangeCharacterButton
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::PressChangeCharacterButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.PressChangeCharacterButton");

	UFrontEnd_LobbyScreen_PressChangeCharacterButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.PlayerAbandonedLobby
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::PlayerAbandonedLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.PlayerAbandonedLobby");

	UFrontEnd_LobbyScreen_PlayerAbandonedLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.PenalizePlayerForLeaving
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::PenalizePlayerForLeaving()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.PenalizePlayerForLeaving");

	UFrontEnd_LobbyScreen_PenalizePlayerForLeaving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.PassCharacterSelectionGroupReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_SelectableGroup*     pSelectionGroup                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_LobbyScreen::PassCharacterSelectionGroupReference(class UUI_SelectableGroup* pSelectionGroup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.PassCharacterSelectionGroupReference");

	UFrontEnd_LobbyScreen_PassCharacterSelectionGroupReference_Params params;
	params.pSelectionGroup = pSelectionGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.PassCharacterDropDownScalable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_DropDownScalable*    pCharacterDropDown             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_LobbyScreen::PassCharacterDropDownScalable(class UUI_DropDownScalable* pCharacterDropDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.PassCharacterDropDownScalable");

	UFrontEnd_LobbyScreen_PassCharacterDropDownScalable_Params params;
	params.pCharacterDropDown = pCharacterDropDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OpenLoadoutPage
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::OpenLoadoutPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OpenLoadoutPage");

	UFrontEnd_LobbyScreen_OpenLoadoutPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnSpecialEscapeButtonPressed
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::OnSpecialEscapeButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnSpecialEscapeButtonPressed");

	UFrontEnd_LobbyScreen_OnSpecialEscapeButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnSlotUpdated
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FOnlineFriendBPData     playerData                     (Parm)
// TEnumAsByte<EHostRelevantTeamButtonState> buttonState                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndLoadout            Loadout                        (ConstParm, Parm, OutParm, ReferenceParm)
// int                            teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::OnSlotUpdated(const struct FOnlineFriendBPData& playerData, TEnumAsByte<EHostRelevantTeamButtonState> buttonState, const struct FPwndLoadout& Loadout, int teamIndex, int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnSlotUpdated");

	UFrontEnd_LobbyScreen_OnSlotUpdated_Params params;
	params.playerData = playerData;
	params.buttonState = buttonState;
	params.Loadout = Loadout;
	params.teamIndex = teamIndex;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnServerReadyToJoin
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::OnServerReadyToJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnServerReadyToJoin");

	UFrontEnd_LobbyScreen_OnServerReadyToJoin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnServerReadyToBeSpunUp
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::OnServerReadyToBeSpunUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnServerReadyToBeSpunUp");

	UFrontEnd_LobbyScreen_OnServerReadyToBeSpunUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnReceivedFriendsList
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineFriendBPData> friendList                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_LobbyScreen::OnReceivedFriendsList(TArray<struct FOnlineFriendBPData> friendList)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnReceivedFriendsList");

	UFrontEnd_LobbyScreen_OnReceivedFriendsList_Params params;
	params.friendList = friendList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnFriendRejectedInvite
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FOnlineFriendBPData     FriendData                     (Parm)

void UFrontEnd_LobbyScreen::OnFriendRejectedInvite(const struct FOnlineFriendBPData& FriendData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnFriendRejectedInvite");

	UFrontEnd_LobbyScreen_OnFriendRejectedInvite_Params params;
	params.FriendData = FriendData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnFriendAcceptedInvite
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FOnlineFriendBPData     FriendData                     (Parm)
// int                            teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::OnFriendAcceptedInvite(const struct FOnlineFriendBPData& FriendData, int teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnFriendAcceptedInvite");

	UFrontEnd_LobbyScreen_OnFriendAcceptedInvite_Params params;
	params.FriendData = FriendData;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnEnteredBackfillingState
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::OnEnteredBackfillingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnEnteredBackfillingState");

	UFrontEnd_LobbyScreen_OnEnteredBackfillingState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnCustomLobbyUpdated
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::OnCustomLobbyUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnCustomLobbyUpdated");

	UFrontEnd_LobbyScreen_OnCustomLobbyUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnCustomLobbyInitialized
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::OnCustomLobbyInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnCustomLobbyInitialized");

	UFrontEnd_LobbyScreen_OnCustomLobbyInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnCurrentGameModeSet
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            numberOfTeams                  (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::OnCurrentGameModeSet(int numberOfTeams)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnCurrentGameModeSet");

	UFrontEnd_LobbyScreen_OnCurrentGameModeSet_Params params;
	params.numberOfTeams = numberOfTeams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.OnAcceptButtonPressed
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::OnAcceptButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.OnAcceptButtonPressed");

	UFrontEnd_LobbyScreen_OnAcceptButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.NotifyCountDownValue
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsValid                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            countdownTimer                 (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::NotifyCountDownValue(bool bIsValid, int countdownTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.NotifyCountDownValue");

	UFrontEnd_LobbyScreen_NotifyCountDownValue_Params params;
	params.bIsValid = bIsValid;
	params.countdownTimer = countdownTimer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.JumpToMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::JumpToMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.JumpToMatch");

	UFrontEnd_LobbyScreen_JumpToMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsTournamentMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsTournamentMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsTournamentMatch");

	UFrontEnd_LobbyScreen_IsTournamentMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsReadyToJoinMatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsReadyToJoinMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsReadyToJoinMatch");

	UFrontEnd_LobbyScreen_IsReadyToJoinMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsReadyForMatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsReadyForMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsReadyForMatch");

	UFrontEnd_LobbyScreen_IsReadyForMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsPrivateLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsPrivateLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsPrivateLobby");

	UFrontEnd_LobbyScreen_IsPrivateLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsHostAPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsHostAPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsHostAPlayer");

	UFrontEnd_LobbyScreen_IsHostAPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsCustomMatchLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsCustomMatchLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsCustomMatchLobby");

	UFrontEnd_LobbyScreen_IsCustomMatchLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsClientHost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsClientHost()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsClientHost");

	UFrontEnd_LobbyScreen_IsClientHost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.IsCharacterInfoDisplayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::IsCharacterInfoDisplayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IsCharacterInfoDisplayed");

	UFrontEnd_LobbyScreen_IsCharacterInfoDisplayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.InviteFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendBPData     FriendData                     (Parm)
// int                            teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::InviteFriend(const struct FOnlineFriendBPData& FriendData, int teamIndex, int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.InviteFriend");

	UFrontEnd_LobbyScreen_InviteFriend_Params params;
	params.FriendData = FriendData;
	params.teamIndex = teamIndex;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.IgnoreInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IgnoreInput                    (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::IgnoreInput(bool IgnoreInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.IgnoreInput");

	UFrontEnd_LobbyScreen_IgnoreInput_Params params;
	params.IgnoreInput = IgnoreInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.HostStartMatch
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::HostStartMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.HostStartMatch");

	UFrontEnd_LobbyScreen_HostStartMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.HostLeaveMatch
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::HostLeaveMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.HostLeaveMatch");

	UFrontEnd_LobbyScreen_HostLeaveMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.HostJoinMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LobbyScreen::HostJoinMatch(int teamIndex, int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.HostJoinMatch");

	UFrontEnd_LobbyScreen_HostJoinMatch_Params params;
	params.teamIndex = teamIndex;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.HasBackendLobbyBeenCreated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::HasBackendLobbyBeenCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.HasBackendLobbyBeenCreated");

	UFrontEnd_LobbyScreen_HasBackendLobbyBeenCreated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetTimesLeftLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_LobbyScreen::GetTimesLeftLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetTimesLeftLobby");

	UFrontEnd_LobbyScreen_GetTimesLeftLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetSelectedCharacters
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// TArray<struct FGuid>           Allies                         (Parm, OutParm, ZeroConstructor)
// TArray<struct FGuid>           Enemies                        (Parm, OutParm, ZeroConstructor)
// bool                           bIncludeSelf                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyReady                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UFrontEnd_LobbyScreen::GetSelectedCharacters(bool bIncludeSelf, bool bOnlyReady, TArray<struct FGuid>* Allies, TArray<struct FGuid>* Enemies)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetSelectedCharacters");

	UFrontEnd_LobbyScreen_GetSelectedCharacters_Params params;
	params.bIncludeSelf = bIncludeSelf;
	params.bOnlyReady = bOnlyReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Allies != nullptr)
		*Allies = params.Allies;
	if (Enemies != nullptr)
		*Enemies = params.Enemies;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetPointsTextArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FText>           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FText> UFrontEnd_LobbyScreen::GetPointsTextArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetPointsTextArray");

	UFrontEnd_LobbyScreen_GetPointsTextArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetPlayableLevelNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FText>           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FText> UFrontEnd_LobbyScreen::GetPlayableLevelNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetPlayableLevelNames");

	UFrontEnd_LobbyScreen_GetPlayableLevelNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetPlayableGameModeNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FText>           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FText> UFrontEnd_LobbyScreen::GetPlayableGameModeNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetPlayableGameModeNames");

	UFrontEnd_LobbyScreen_GetPlayableGameModeNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetNumCharacterSelectedDuplicates
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bIncludeEnemyTeam              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyReady                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_LobbyScreen::GetNumCharacterSelectedDuplicates(bool bIncludeEnemyTeam, bool bOnlyReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetNumCharacterSelectedDuplicates");

	UFrontEnd_LobbyScreen_GetNumCharacterSelectedDuplicates_Params params;
	params.bIncludeEnemyTeam = bIncludeEnemyTeam;
	params.bOnlyReady = bOnlyReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetNextMatchMakingPenaltyTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_LobbyScreen::GetNextMatchMakingPenaltyTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetNextMatchMakingPenaltyTime");

	UFrontEnd_LobbyScreen_GetNextMatchMakingPenaltyTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetMatchDurationTextArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FText>           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FText> UFrontEnd_LobbyScreen::GetMatchDurationTextArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetMatchDurationTextArray");

	UFrontEnd_LobbyScreen_GetMatchDurationTextArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetLobbyDisplayId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFrontEnd_LobbyScreen::GetLobbyDisplayId()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetLobbyDisplayId");

	UFrontEnd_LobbyScreen_GetLobbyDisplayId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.GetCurrentSelectedLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UFrontEnd_LobbyScreen::GetCurrentSelectedLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.GetCurrentSelectedLoadout");

	UFrontEnd_LobbyScreen_GetCurrentSelectedLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LobbyScreen.ClearLobbyPlayerDataForUpdate
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::ClearLobbyPlayerDataForUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.ClearLobbyPlayerDataForUpdate");

	UFrontEnd_LobbyScreen_ClearLobbyPlayerDataForUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.CharacterInfoScreenToggled
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_LobbyScreen::CharacterInfoScreenToggled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.CharacterInfoScreenToggled");

	UFrontEnd_LobbyScreen_CharacterInfoScreenToggled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.CharacterInfoButtonPressed
// (Event, Public, BlueprintEvent)

void UFrontEnd_LobbyScreen::CharacterInfoButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.CharacterInfoButtonPressed");

	UFrontEnd_LobbyScreen_CharacterInfoButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.BootPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendBPData     lobbyMember                    (Parm)

void UFrontEnd_LobbyScreen::BootPlayer(const struct FOnlineFriendBPData& lobbyMember)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.BootPlayer");

	UFrontEnd_LobbyScreen_BootPlayer_Params params;
	params.lobbyMember = lobbyMember;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LobbyScreen.AreThereAnEvenAmountOfPlayersOnClientsTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LobbyScreen::AreThereAnEvenAmountOfPlayersOnClientsTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LobbyScreen.AreThereAnEvenAmountOfPlayersOnClientsTeam");

	UFrontEnd_LobbyScreen_AreThereAnEvenAmountOfPlayersOnClientsTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LoginScreen.OnSkipSignIn
// (Final, Native, Public)

void UFrontEnd_LoginScreen::OnSkipSignIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LoginScreen.OnSkipSignIn");

	UFrontEnd_LoginScreen_OnSkipSignIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LoginScreen.OnSignInButtonPressed
// (Final, Native, Public)

void UFrontEnd_LoginScreen::OnSignInButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LoginScreen.OnSignInButtonPressed");

	UFrontEnd_LoginScreen_OnSignInButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LoginScreen.OnCreateAccountPressed
// (Final, Native, Public)

void UFrontEnd_LoginScreen::OnCreateAccountPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LoginScreen.OnCreateAccountPressed");

	UFrontEnd_LoginScreen_OnCreateAccountPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LootCrateScreen.RequestToOpenCrate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_LootCrateScreen::RequestToOpenCrate(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.RequestToOpenCrate");

	UFrontEnd_LootCrateScreen_RequestToOpenCrate_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LootCrateScreen.Public_OnLeftFaceButtonPressed
// (Event, Public, BlueprintEvent)

void UFrontEnd_LootCrateScreen::Public_OnLeftFaceButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.Public_OnLeftFaceButtonPressed");

	UFrontEnd_LootCrateScreen_Public_OnLeftFaceButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LootCrateScreen.Public_OnAcceptPressed
// (Event, Public, BlueprintEvent)

void UFrontEnd_LootCrateScreen::Public_OnAcceptPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.Public_OnAcceptPressed");

	UFrontEnd_LootCrateScreen_Public_OnAcceptPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LootCrateScreen.OnReceiveLootCrateData
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FGuidInventoryItem> lootCrates                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_LootCrateScreen::OnReceiveLootCrateData(TArray<struct FGuidInventoryItem> lootCrates)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.OnReceiveLootCrateData");

	UFrontEnd_LootCrateScreen_OnReceiveLootCrateData_Params params;
	params.lootCrates = lootCrates;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LootCrateScreen.OnCrateSuccessfullyOpened
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FGuidInventoryItem> itemsOpened                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FGuidInventoryItem> itemsAwarded                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_LootCrateScreen::OnCrateSuccessfullyOpened(TArray<struct FGuidInventoryItem> itemsOpened, TArray<struct FGuidInventoryItem> itemsAwarded)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.OnCrateSuccessfullyOpened");

	UFrontEnd_LootCrateScreen_OnCrateSuccessfullyOpened_Params params;
	params.itemsOpened = itemsOpened;
	params.itemsAwarded = itemsAwarded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LootCrateScreen.OnCrateFailedToOpen
// (Event, Public, BlueprintEvent)

void UFrontEnd_LootCrateScreen::OnCrateFailedToOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.OnCrateFailedToOpen");

	UFrontEnd_LootCrateScreen_OnCrateFailedToOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_LootCrateScreen.IsItemEquipped
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FGuid                   ItemGUID                       (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_LootCrateScreen::IsItemEquipped(const struct FGuid& characterGuid, const struct FGuid& ItemGUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.IsItemEquipped");

	UFrontEnd_LootCrateScreen_IsItemEquipped_Params params;
	params.characterGuid = characterGuid;
	params.ItemGUID = ItemGUID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_LootCrateScreen.EquipItem
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FGuid                   ItemGUID                       (Parm, IsPlainOldData)

void UFrontEnd_LootCrateScreen::EquipItem(const struct FGuid& characterGuid, const struct FGuid& ItemGUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_LootCrateScreen.EquipItem");

	UFrontEnd_LootCrateScreen_EquipItem_Params params;
	params.characterGuid = characterGuid;
	params.ItemGUID = ItemGUID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.QuitGame
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::QuitGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.QuitGame");

	UFrontEnd_MainMenu_QuitGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.QuickplayJoinGame
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::QuickplayJoinGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.QuickplayJoinGame");

	UFrontEnd_MainMenu_QuickplayJoinGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.OnUpdatedInventoryReceived
// (Event, Public, BlueprintEvent)

void UFrontEnd_MainMenu::OnUpdatedInventoryReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.OnUpdatedInventoryReceived");

	UFrontEnd_MainMenu_OnUpdatedInventoryReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.OnReturnFromMatch
// (Event, Public, BlueprintEvent)

void UFrontEnd_MainMenu::OnReturnFromMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.OnReturnFromMatch");

	UFrontEnd_MainMenu_OnReturnFromMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.OnPlayerMissionsRecieved
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FMissionInfo>    Missions                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_MainMenu::OnPlayerMissionsRecieved(TArray<struct FMissionInfo> Missions)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.OnPlayerMissionsRecieved");

	UFrontEnd_MainMenu_OnPlayerMissionsRecieved_Params params;
	params.Missions = Missions;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.OnEnterFromInitialLogin
// (Event, Public, BlueprintEvent)

void UFrontEnd_MainMenu::OnEnterFromInitialLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.OnEnterFromInitialLogin");

	UFrontEnd_MainMenu_OnEnterFromInitialLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.HandleJoinPenalty
// (Final, Native, Private)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_MainMenu::HandleJoinPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.HandleJoinPenalty");

	UFrontEnd_MainMenu_HandleJoinPenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_MainMenu.GoToTrainingScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::GoToTrainingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.GoToTrainingScreen");

	UFrontEnd_MainMenu_GoToTrainingScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.GoToSocialScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::GoToSocialScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.GoToSocialScreen");

	UFrontEnd_MainMenu_GoToSocialScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.GoToOptionsScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::GoToOptionsScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.GoToOptionsScreen");

	UFrontEnd_MainMenu_GoToOptionsScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.GoToLootCrateScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::GoToLootCrateScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.GoToLootCrateScreen");

	UFrontEnd_MainMenu_GoToLootCrateScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.GoToCustomizeScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::GoToCustomizeScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.GoToCustomizeScreen");

	UFrontEnd_MainMenu_GoToCustomizeScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.GoToCharactersScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MainMenu::GoToCharactersScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.GoToCharactersScreen");

	UFrontEnd_MainMenu_GoToCharactersScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.GetNumberOfOwnedLootCrates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_MainMenu::GetNumberOfOwnedLootCrates()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.GetNumberOfOwnedLootCrates");

	UFrontEnd_MainMenu_GetNumberOfOwnedLootCrates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_MainMenu.EnableTrainingButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_MainMenu::EnableTrainingButton(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.EnableTrainingButton");

	UFrontEnd_MainMenu_EnableTrainingButton_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.EnableSocialButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_MainMenu::EnableSocialButton(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.EnableSocialButton");

	UFrontEnd_MainMenu_EnableSocialButton_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.EnablePlayButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_MainMenu::EnablePlayButton(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.EnablePlayButton");

	UFrontEnd_MainMenu_EnablePlayButton_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MainMenu.DisplayPenaltyPopup
// (Final, Native, Private)
// Parameters:
// int                            secondsLeft                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_MainMenu::DisplayPenaltyPopup(int secondsLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MainMenu.DisplayPenaltyPopup");

	UFrontEnd_MainMenu_DisplayPenaltyPopup_Params params;
	params.secondsLeft = secondsLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.SetLobbyVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            visibilityOption               (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_MatchTypeScreen::SetLobbyVisibility(int visibilityOption)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.SetLobbyVisibility");

	UFrontEnd_MatchTypeScreen_SetLobbyVisibility_Params params;
	params.visibilityOption = visibilityOption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.SelectSpectateMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 matchCode                      (Parm, ZeroConstructor)

void UFrontEnd_MatchTypeScreen::SelectSpectateMatch(const struct FString& matchCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.SelectSpectateMatch");

	UFrontEnd_MatchTypeScreen_SelectSpectateMatch_Params params;
	params.matchCode = matchCode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.SelectRankedMatch
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MatchTypeScreen::SelectRankedMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.SelectRankedMatch");

	UFrontEnd_MatchTypeScreen_SelectRankedMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.SelectQuickMatch
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MatchTypeScreen::SelectQuickMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.SelectQuickMatch");

	UFrontEnd_MatchTypeScreen_SelectQuickMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.SelectJoinMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 matchCode                      (Parm, ZeroConstructor)

void UFrontEnd_MatchTypeScreen::SelectJoinMatch(const struct FString& matchCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.SelectJoinMatch");

	UFrontEnd_MatchTypeScreen_SelectJoinMatch_Params params;
	params.matchCode = matchCode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.SelectCustomMatch
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MatchTypeScreen::SelectCustomMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.SelectCustomMatch");

	UFrontEnd_MatchTypeScreen_SelectCustomMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.SelectChallenges
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_MatchTypeScreen::SelectChallenges()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.SelectChallenges");

	UFrontEnd_MatchTypeScreen_SelectChallenges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_MatchTypeScreen.OnBack_Implementation
// (Final, Native, Public)

void UFrontEnd_MatchTypeScreen::OnBack_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_MatchTypeScreen.OnBack_Implementation");

	UFrontEnd_MatchTypeScreen_OnBack_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.WidgetOverrided
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)

void UFrontEnd_OptionsScreen::WidgetOverrided(const struct FString& WidgetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.WidgetOverrided");

	UFrontEnd_OptionsScreen_WidgetOverrided_Params params;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateVSync
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateVSync(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateVSync");

	UFrontEnd_OptionsScreen_UpdateVSync_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateVoiceActivationThreshold
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateVoiceActivationThreshold(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateVoiceActivationThreshold");

	UFrontEnd_OptionsScreen_UpdateVoiceActivationThreshold_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateVoiceActivationMode
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateVoiceActivationMode(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateVoiceActivationMode");

	UFrontEnd_OptionsScreen_UpdateVoiceActivationMode_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateViewDistance
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateViewDistance(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateViewDistance");

	UFrontEnd_OptionsScreen_UpdateViewDistance_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateTextureQuality
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateTextureQuality(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateTextureQuality");

	UFrontEnd_OptionsScreen_UpdateTextureQuality_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateShadows
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateShadows(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateShadows");

	UFrontEnd_OptionsScreen_UpdateShadows_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateSFXVolume
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateSFXVolume(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateSFXVolume");

	UFrontEnd_OptionsScreen_UpdateSFXVolume_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateResolution
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateResolution(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateResolution");

	UFrontEnd_OptionsScreen_UpdateResolution_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdatePostProcessFX
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdatePostProcessFX(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdatePostProcessFX");

	UFrontEnd_OptionsScreen_UpdatePostProcessFX_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateMusicVolume
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateMusicVolume(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateMusicVolume");

	UFrontEnd_OptionsScreen_UpdateMusicVolume_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateMouseSensitivity
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateMouseSensitivity(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateMouseSensitivity");

	UFrontEnd_OptionsScreen_UpdateMouseSensitivity_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateMouseInverted
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateMouseInverted(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateMouseInverted");

	UFrontEnd_OptionsScreen_UpdateMouseInverted_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateMotionBlur
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateMotionBlur(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateMotionBlur");

	UFrontEnd_OptionsScreen_UpdateMotionBlur_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateMasterVolume
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateMasterVolume(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateMasterVolume");

	UFrontEnd_OptionsScreen_UpdateMasterVolume_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateLobbyCharacterQuality
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateLobbyCharacterQuality(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateLobbyCharacterQuality");

	UFrontEnd_OptionsScreen_UpdateLobbyCharacterQuality_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateInGameVoiceVolume
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateInGameVoiceVolume(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateInGameVoiceVolume");

	UFrontEnd_OptionsScreen_UpdateInGameVoiceVolume_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateGraphicsQuality
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateGraphicsQuality(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateGraphicsQuality");

	UFrontEnd_OptionsScreen_UpdateGraphicsQuality_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateGamma
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateGamma(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateGamma");

	UFrontEnd_OptionsScreen_UpdateGamma_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateFrameRate
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateFrameRate(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateFrameRate");

	UFrontEnd_OptionsScreen_UpdateFrameRate_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateFOV
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateFOV(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateFOV");

	UFrontEnd_OptionsScreen_UpdateFOV_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateEffectsQuality
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateEffectsQuality(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateEffectsQuality");

	UFrontEnd_OptionsScreen_UpdateEffectsQuality_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateDisplayMode
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateDisplayMode(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateDisplayMode");

	UFrontEnd_OptionsScreen_UpdateDisplayMode_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateDepthOfField
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateDepthOfField(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateDepthOfField");

	UFrontEnd_OptionsScreen_UpdateDepthOfField_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateControllerVerticalSensitivity
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateControllerVerticalSensitivity(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateControllerVerticalSensitivity");

	UFrontEnd_OptionsScreen_UpdateControllerVerticalSensitivity_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateControllerVerticalInverted
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateControllerVerticalInverted(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateControllerVerticalInverted");

	UFrontEnd_OptionsScreen_UpdateControllerVerticalInverted_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateControllerHorizontalSensitivity
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateControllerHorizontalSensitivity(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateControllerHorizontalSensitivity");

	UFrontEnd_OptionsScreen_UpdateControllerHorizontalSensitivity_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateControllerHorizontalInverted
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateControllerHorizontalInverted(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateControllerHorizontalInverted");

	UFrontEnd_OptionsScreen_UpdateControllerHorizontalInverted_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateContrast
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateContrast(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateContrast");

	UFrontEnd_OptionsScreen_UpdateContrast_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateChatFilter
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateChatFilter(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateChatFilter");

	UFrontEnd_OptionsScreen_UpdateChatFilter_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateCharacterControls
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateCharacterControls(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateCharacterControls");

	UFrontEnd_OptionsScreen_UpdateCharacterControls_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateBloom
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateBloom(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateBloom");

	UFrontEnd_OptionsScreen_UpdateBloom_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateAutoVoiceActivation
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateAutoVoiceActivation(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateAutoVoiceActivation");

	UFrontEnd_OptionsScreen_UpdateAutoVoiceActivation_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateAntiAliasing
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateAntiAliasing(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateAntiAliasing");

	UFrontEnd_OptionsScreen_UpdateAntiAliasing_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.UpdateAmbientOcclusion
// (Final, Native, Private)
// Parameters:
// int                            val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::UpdateAmbientOcclusion(int val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.UpdateAmbientOcclusion");

	UFrontEnd_OptionsScreen_UpdateAmbientOcclusion_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.RevertResolution
// (Final, Native, Private)

void UFrontEnd_OptionsScreen::RevertResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.RevertResolution");

	UFrontEnd_OptionsScreen_RevertResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.ResetDeleteOverridesButton
// (Event, Public, BlueprintEvent)

void UFrontEnd_OptionsScreen::ResetDeleteOverridesButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.ResetDeleteOverridesButton");

	UFrontEnd_OptionsScreen_ResetDeleteOverridesButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.PassTopTabsSelectionScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_SelectableGroup*     pGroup                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_OptionsScreen::PassTopTabsSelectionScreen(class UUI_SelectableGroup* pGroup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.PassTopTabsSelectionScreen");

	UFrontEnd_OptionsScreen_PassTopTabsSelectionScreen_Params params;
	params.pGroup = pGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.OptionsWidgetUpdated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// int                            Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::OptionsWidgetUpdated(const struct FString& WidgetName, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.OptionsWidgetUpdated");

	UFrontEnd_OptionsScreen_OptionsWidgetUpdated_Params params;
	params.WidgetName = WidgetName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.OnSave_Implementation
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_OptionsScreen::OnSave_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.OnSave_Implementation");

	UFrontEnd_OptionsScreen_OnSave_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.OnLeaveScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_OptionsScreen::OnLeaveScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.OnLeaveScreen");

	UFrontEnd_OptionsScreen_OnLeaveScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.OnDefault_Implementation
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_OptionsScreen::OnDefault_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.OnDefault_Implementation");

	UFrontEnd_OptionsScreen_OnDefault_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.OnBumperRight_Implementation
// (Final, Native, Public)

void UFrontEnd_OptionsScreen::OnBumperRight_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.OnBumperRight_Implementation");

	UFrontEnd_OptionsScreen_OnBumperRight_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.OnBumperLeft_Implementation
// (Final, Native, Public)

void UFrontEnd_OptionsScreen::OnBumperLeft_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.OnBumperLeft_Implementation");

	UFrontEnd_OptionsScreen_OnBumperLeft_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.OnBack_Implementation
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_OptionsScreen::OnBack_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.OnBack_Implementation");

	UFrontEnd_OptionsScreen_OnBack_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.InternalSettingsUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// int                            Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsCutomValue                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_OptionsScreen::InternalSettingsUpdated(const struct FString& WidgetName, int Value, bool bIsCutomValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.InternalSettingsUpdated");

	UFrontEnd_OptionsScreen_InternalSettingsUpdated_Params params;
	params.WidgetName = WidgetName;
	params.Value = Value;
	params.bIsCutomValue = bIsCutomValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.HasUnsavedChanges
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_OptionsScreen::HasUnsavedChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.HasUnsavedChanges");

	UFrontEnd_OptionsScreen_HasUnsavedChanges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_OptionsScreen.DeleteCharacterOverrides
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_OptionsScreen::DeleteCharacterOverrides()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.DeleteCharacterOverrides");

	UFrontEnd_OptionsScreen_DeleteCharacterOverrides_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.ConfirmResolution
// (Final, Native, Private)

void UFrontEnd_OptionsScreen::ConfirmResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.ConfirmResolution");

	UFrontEnd_OptionsScreen_ConfirmResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_OptionsScreen.BeginExitFlow
// (Event, Public, BlueprintEvent)

void UFrontEnd_OptionsScreen::BeginExitFlow()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_OptionsScreen.BeginExitFlow");

	UFrontEnd_OptionsScreen_BeginExitFlow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SearchingForMatchScreen.OnMinimizeRequested
// (Event, Public, BlueprintEvent)

void UFrontEnd_SearchingForMatchScreen::OnMinimizeRequested()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SearchingForMatchScreen.OnMinimizeRequested");

	UFrontEnd_SearchingForMatchScreen_OnMinimizeRequested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SearchingForMatchScreen.MinimizeScreen
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_SearchingForMatchScreen::MinimizeScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SearchingForMatchScreen.MinimizeScreen");

	UFrontEnd_SearchingForMatchScreen_MinimizeScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SearchingForMatchScreen.GetEstimatedQueueTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFrontEnd_SearchingForMatchScreen::GetEstimatedQueueTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SearchingForMatchScreen.GetEstimatedQueueTime");

	UFrontEnd_SearchingForMatchScreen_GetEstimatedQueueTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_SearchingForMatchScreen.DoesTicketStillExist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_SearchingForMatchScreen::DoesTicketStillExist()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SearchingForMatchScreen.DoesTicketStillExist");

	UFrontEnd_SearchingForMatchScreen_DoesTicketStillExist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_SearchingForMatchScreen.CancelSearchingForMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEnd_SearchingForMatchScreen::CancelSearchingForMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SearchingForMatchScreen.CancelSearchingForMatch");

	UFrontEnd_SearchingForMatchScreen_CancelSearchingForMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEnd_SocialScreen.RemovePendingPartyInvite
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FOnlineFriendSocialBPData FriendData                     (ConstParm, Parm, OutParm, ReferenceParm)

void UFrontEnd_SocialScreen::RemovePendingPartyInvite(const struct FOnlineFriendSocialBPData& FriendData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.RemovePendingPartyInvite");

	UFrontEnd_SocialScreen_RemovePendingPartyInvite_Params params;
	params.FriendData = FriendData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnWarningOfAboutToInviteTooManyPlayers
// (Event, Public, BlueprintEvent)

void UFrontEnd_SocialScreen::OnWarningOfAboutToInviteTooManyPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnWarningOfAboutToInviteTooManyPlayers");

	UFrontEnd_SocialScreen_OnWarningOfAboutToInviteTooManyPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnReceivedPartyList
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineFriendSocialBPData> friendList                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_SocialScreen::OnReceivedPartyList(TArray<struct FOnlineFriendSocialBPData> friendList)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnReceivedPartyList");

	UFrontEnd_SocialScreen_OnReceivedPartyList_Params params;
	params.friendList = friendList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnReceivedFriendsList
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineFriendSocialBPData> friendList                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_SocialScreen::OnReceivedFriendsList(TArray<struct FOnlineFriendSocialBPData> friendList)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnReceivedFriendsList");

	UFrontEnd_SocialScreen_OnReceivedFriendsList_Params params;
	params.friendList = friendList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnPartyMembersUpdated
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineFriendSocialBPData> members                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FOnlineFriendSocialBPData> invitedMembers                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEnd_SocialScreen::OnPartyMembersUpdated(TArray<struct FOnlineFriendSocialBPData> members, TArray<struct FOnlineFriendSocialBPData> invitedMembers)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnPartyMembersUpdated");

	UFrontEnd_SocialScreen_OnPartyMembersUpdated_Params params;
	params.members = members;
	params.invitedMembers = invitedMembers;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnInviteSuccessfullySent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FOnlineFriendSocialBPData FriendData                     (Parm)

void UFrontEnd_SocialScreen::OnInviteSuccessfullySent(const struct FOnlineFriendSocialBPData& FriendData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnInviteSuccessfullySent");

	UFrontEnd_SocialScreen_OnInviteSuccessfullySent_Params params;
	params.FriendData = FriendData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnInviteFailedToSend
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FOnlineFriendSocialBPData FriendData                     (Parm)

void UFrontEnd_SocialScreen::OnInviteFailedToSend(const struct FOnlineFriendSocialBPData& FriendData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnInviteFailedToSend");

	UFrontEnd_SocialScreen_OnInviteFailedToSend_Params params;
	params.FriendData = FriendData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnFriendRejectedInvite
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FOnlineFriendSocialBPData FriendData                     (Parm)
// bool                           Error                          (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEnd_SocialScreen::OnFriendRejectedInvite(const struct FOnlineFriendSocialBPData& FriendData, bool Error)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnFriendRejectedInvite");

	UFrontEnd_SocialScreen_OnFriendRejectedInvite_Params params;
	params.FriendData = FriendData;
	params.Error = Error;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.OnFriendAcceptedInvite
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FOnlineFriendSocialBPData FriendData                     (Parm)

void UFrontEnd_SocialScreen::OnFriendAcceptedInvite(const struct FOnlineFriendSocialBPData& FriendData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.OnFriendAcceptedInvite");

	UFrontEnd_SocialScreen_OnFriendAcceptedInvite_Params params;
	params.FriendData = FriendData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.KickFriendFromParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendSocialBPData FriendData                     (Parm)

void UFrontEnd_SocialScreen::KickFriendFromParty(const struct FOnlineFriendSocialBPData& FriendData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.KickFriendFromParty");

	UFrontEnd_SocialScreen_KickFriendFromParty_Params params;
	params.FriendData = FriendData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_SocialScreen.InviteFriendToParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendSocialBPData FriendData                     (Parm)

void UFrontEnd_SocialScreen::InviteFriendToParty(const struct FOnlineFriendSocialBPData& FriendData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_SocialScreen.InviteFriendToParty");

	UFrontEnd_SocialScreen_InviteFriendToParty_Params params;
	params.FriendData = FriendData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_TrainingScreen.OnTransitionToTraining
// (Final, Native, Public, BlueprintCallable)

void UFrontEnd_TrainingScreen::OnTransitionToTraining()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_TrainingScreen.OnTransitionToTraining");

	UFrontEnd_TrainingScreen_OnTransitionToTraining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.RegisterWidgetAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::RegisterWidgetAnimation(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.RegisterWidgetAnimation");

	UUI_MenuNavigable_RegisterWidgetAnimation_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.OnRemoveSelection
// (Native, Event, Public, BlueprintEvent)

void UUI_MenuNavigable::OnRemoveSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.OnRemoveSelection");

	UUI_MenuNavigable_OnRemoveSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.OnRemoveAttention
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           bWasMouse                      (Parm, ZeroConstructor, IsPlainOldData)

void UUI_MenuNavigable::OnRemoveAttention(bool bWasMouse)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.OnRemoveAttention");

	UUI_MenuNavigable_OnRemoveAttention_Params params;
	params.bWasMouse = bWasMouse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.OnReceiveSelection
// (Native, Event, Public, BlueprintEvent)

void UUI_MenuNavigable::OnReceiveSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.OnReceiveSelection");

	UUI_MenuNavigable_OnReceiveSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.OnReceiveAttention
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           bWasMouse                      (Parm, ZeroConstructor, IsPlainOldData)

void UUI_MenuNavigable::OnReceiveAttention(bool bWasMouse)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.OnReceiveAttention");

	UUI_MenuNavigable_OnReceiveAttention_Params params;
	params.bWasMouse = bWasMouse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.OnClickedByMouse
// (Final, Native, Public)

void UUI_MenuNavigable::OnClickedByMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.OnClickedByMouse");

	UUI_MenuNavigable_OnClickedByMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateUpConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavUp                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateUpConnection(class UUserWidget* pNavUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateUpConnection");

	UUI_MenuNavigable_CreateUpConnection_Params params;
	params.pNavUp = pNavUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateTwoWayUpConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavUp                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateTwoWayUpConnection(class UUserWidget* pNavUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateTwoWayUpConnection");

	UUI_MenuNavigable_CreateTwoWayUpConnection_Params params;
	params.pNavUp = pNavUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateTwoWayRightConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavRight                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateTwoWayRightConnection(class UUserWidget* pNavRight)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateTwoWayRightConnection");

	UUI_MenuNavigable_CreateTwoWayRightConnection_Params params;
	params.pNavRight = pNavRight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateTwoWayRightBumperConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavBumperRight                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateTwoWayRightBumperConnection(class UUserWidget* pNavBumperRight)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateTwoWayRightBumperConnection");

	UUI_MenuNavigable_CreateTwoWayRightBumperConnection_Params params;
	params.pNavBumperRight = pNavBumperRight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateTwoWayLeftConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavLeft                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateTwoWayLeftConnection(class UUserWidget* pNavLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateTwoWayLeftConnection");

	UUI_MenuNavigable_CreateTwoWayLeftConnection_Params params;
	params.pNavLeft = pNavLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateTwoWayLeftBumperConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavBumperLeft                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateTwoWayLeftBumperConnection(class UUserWidget* pNavBumperLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateTwoWayLeftBumperConnection");

	UUI_MenuNavigable_CreateTwoWayLeftBumperConnection_Params params;
	params.pNavBumperLeft = pNavBumperLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateTwoWayDownConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavDown                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateTwoWayDownConnection(class UUserWidget* pNavDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateTwoWayDownConnection");

	UUI_MenuNavigable_CreateTwoWayDownConnection_Params params;
	params.pNavDown = pNavDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateRightConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavRight                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateRightConnection(class UUserWidget* pNavRight)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateRightConnection");

	UUI_MenuNavigable_CreateRightConnection_Params params;
	params.pNavRight = pNavRight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateLeftConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavLeft                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateLeftConnection(class UUserWidget* pNavLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateLeftConnection");

	UUI_MenuNavigable_CreateLeftConnection_Params params;
	params.pNavLeft = pNavLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MenuNavigable.CreateDownConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNavDown                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_MenuNavigable::CreateDownConnection(class UUserWidget* pNavDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MenuNavigable.CreateDownConnection");

	UUI_MenuNavigable_CreateDownConnection_Params params;
	params.pNavDown = pNavDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButton.RegisterUnSelectedAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_UIButton::RegisterUnSelectedAnimation(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButton.RegisterUnSelectedAnimation");

	UFrontEnd_UIButton_RegisterUnSelectedAnimation_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButton.RegisterHoveredOverAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_UIButton::RegisterHoveredOverAnimation(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButton.RegisterHoveredOverAnimation");

	UFrontEnd_UIButton_RegisterHoveredOverAnimation_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButton.RegisterAnimateToUnSelectedAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_UIButton::RegisterAnimateToUnSelectedAnimation(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButton.RegisterAnimateToUnSelectedAnimation");

	UFrontEnd_UIButton_RegisterAnimateToUnSelectedAnimation_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButton.RegisterAnimateToHoverAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEnd_UIButton::RegisterAnimateToHoverAnimation(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButton.RegisterAnimateToHoverAnimation");

	UFrontEnd_UIButton_RegisterAnimateToHoverAnimation_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButton.OnMouseUnHovered
// (Final, Native, Private)

void UFrontEnd_UIButton::OnMouseUnHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButton.OnMouseUnHovered");

	UFrontEnd_UIButton_OnMouseUnHovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButton.OnHoveredByMouse
// (Final, Native, Private)

void UFrontEnd_UIButton::OnHoveredByMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButton.OnHoveredByMouse");

	UFrontEnd_UIButton_OnHoveredByMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButton.OnClickedButton
// (Final, Native, Private)

void UFrontEnd_UIButton::OnClickedButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButton.OnClickedButton");

	UFrontEnd_UIButton_OnClickedButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButtonLoadoutItem.OnMouseUnHovered
// (Final, Native, Public)

void UFrontEnd_UIButtonLoadoutItem::OnMouseUnHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButtonLoadoutItem.OnMouseUnHovered");

	UFrontEnd_UIButtonLoadoutItem_OnMouseUnHovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButtonLoadoutItem.OnHoveredByMouse
// (Final, Native, Public)

void UFrontEnd_UIButtonLoadoutItem::OnHoveredByMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButtonLoadoutItem.OnHoveredByMouse");

	UFrontEnd_UIButtonLoadoutItem_OnHoveredByMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEnd_UIButtonLoadoutItem.OnClickedButton
// (Final, Native, Public)

void UFrontEnd_UIButtonLoadoutItem::OnClickedButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEnd_UIButtonLoadoutItem.OnClickedButton");

	UFrontEnd_UIButtonLoadoutItem_OnClickedButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.ShouldDrawMonkeyModeHUD
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndBasePlayerController::ShouldDrawMonkeyModeHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.ShouldDrawMonkeyModeHUD");

	APwndBasePlayerController_ShouldDrawMonkeyModeHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.OnMonkeyReadyToQeueue
// (Event, Public, BlueprintEvent)

void APwndBasePlayerController::OnMonkeyReadyToQeueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnMonkeyReadyToQeueue");

	APwndBasePlayerController_OnMonkeyReadyToQeueue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToPostMatchScreen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToPostMatchScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToPostMatchScreen");

	APwndBasePlayerController_OnArrivedToPostMatchScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToOptionsScreen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToOptionsScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToOptionsScreen");

	APwndBasePlayerController_OnArrivedToOptionsScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToMatchTypeScreen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToMatchTypeScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToMatchTypeScreen");

	APwndBasePlayerController_OnArrivedToMatchTypeScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToMainMenu
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToMainMenu");

	APwndBasePlayerController_OnArrivedToMainMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToLootScreen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToLootScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToLootScreen");

	APwndBasePlayerController_OnArrivedToLootScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToLoginScreen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToLoginScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToLoginScreen");

	APwndBasePlayerController_OnArrivedToLoginScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToLobby
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToLobby");

	APwndBasePlayerController_OnArrivedToLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToLoadoutScreen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToLoadoutScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToLoadoutScreen");

	APwndBasePlayerController_OnArrivedToLoadoutScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.OnArrivedToCreateAccountScreen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndBasePlayerController::OnArrivedToCreateAccountScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.OnArrivedToCreateAccountScreen");

	APwndBasePlayerController_OnArrivedToCreateAccountScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.MonkeyPlayerTick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndBasePlayerController::MonkeyPlayerTick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.MonkeyPlayerTick");

	APwndBasePlayerController_MonkeyPlayerTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.IsUsingGamePad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndBasePlayerController::IsUsingGamePad()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.IsUsingGamePad");

	APwndBasePlayerController_IsUsingGamePad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.IsSmartMonkeyMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndBasePlayerController::IsSmartMonkeyMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.IsSmartMonkeyMode");

	APwndBasePlayerController_IsSmartMonkeyMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.IsMonkeyMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndBasePlayerController::IsMonkeyMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.IsMonkeyMode");

	APwndBasePlayerController_IsMonkeyMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.IsMonkeyAllowedToQueue
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndBasePlayerController::IsMonkeyAllowedToQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.IsMonkeyAllowedToQueue");

	APwndBasePlayerController_IsMonkeyAllowedToQueue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.InputDeviceChanged
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           IsGamePadInput                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void APwndBasePlayerController::InputDeviceChanged(bool IsGamePadInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.InputDeviceChanged");

	APwndBasePlayerController_InputDeviceChanged_Params params;
	params.IsGamePadInput = IsGamePadInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBasePlayerController.GetWidgetInterface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* APwndBasePlayerController::GetWidgetInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.GetWidgetInterface");

	APwndBasePlayerController_GetWidgetInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.GetOptionsMenuReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* APwndBasePlayerController::GetOptionsMenuReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.GetOptionsMenuReference");

	APwndBasePlayerController_GetOptionsMenuReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.GetMonkeyBrain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndAIMonkeyBrain*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndAIMonkeyBrain* APwndBasePlayerController::GetMonkeyBrain()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.GetMonkeyBrain");

	APwndBasePlayerController_GetMonkeyBrain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBasePlayerController.ForceGarbageCollection
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bFullPurge                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndBasePlayerController::ForceGarbageCollection(bool bFullPurge)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBasePlayerController.ForceGarbageCollection");

	APwndBasePlayerController_ForceGarbageCollection_Params params;
	params.bFullPurge = bFullPurge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.SetMissionProgressVisibility
// (Final, Exec, Native, Public)
// Parameters:
// bool                           VisibilityValue                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AFrontEndPlayerController::SetMissionProgressVisibility(bool VisibilityValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.SetMissionProgressVisibility");

	AFrontEndPlayerController_SetMissionProgressVisibility_Params params;
	params.VisibilityValue = VisibilityValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.RejectFriendInvite
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 FriendDisplayName              (Parm, ZeroConstructor)

void AFrontEndPlayerController::RejectFriendInvite(const struct FString& FriendDisplayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.RejectFriendInvite");

	AFrontEndPlayerController_RejectFriendInvite_Params params;
	params.FriendDisplayName = FriendDisplayName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIUp
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIUp");

	AFrontEndPlayerController_PressedUIUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIStart
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIStart");

	AFrontEndPlayerController_PressedUIStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIRight
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIRight");

	AFrontEndPlayerController_PressedUIRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUILeft
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUILeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUILeft");

	AFrontEndPlayerController_PressedUILeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIDown
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIDown");

	AFrontEndPlayerController_PressedUIDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIBumperRight
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIBumperRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIBumperRight");

	AFrontEndPlayerController_PressedUIBumperRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIBumperLeft
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIBumperLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIBumperLeft");

	AFrontEndPlayerController_PressedUIBumperLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIBack
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIBack");

	AFrontEndPlayerController_PressedUIBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedUIAccept
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedUIAccept()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedUIAccept");

	AFrontEndPlayerController_PressedUIAccept_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedTopFaceButton
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedTopFaceButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedTopFaceButton");

	AFrontEndPlayerController_PressedTopFaceButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedTeamLoadoutButton
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedTeamLoadoutButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedTeamLoadoutButton");

	AFrontEndPlayerController_PressedTeamLoadoutButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedSpecialEscape
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedSpecialEscape()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedSpecialEscape");

	AFrontEndPlayerController_PressedSpecialEscape_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedSpecialBack
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedSpecialBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedSpecialBack");

	AFrontEndPlayerController_PressedSpecialBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedShowTeamsButton
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedShowTeamsButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedShowTeamsButton");

	AFrontEndPlayerController_PressedShowTeamsButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedLeftFaceButton
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedLeftFaceButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedLeftFaceButton");

	AFrontEndPlayerController_PressedLeftFaceButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.PressedInfo
// (Final, Native, Public, BlueprintCallable)

void AFrontEndPlayerController::PressedInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.PressedInfo");

	AFrontEndPlayerController_PressedInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.ListFriends
// (Final, Exec, Native, Public)

void AFrontEndPlayerController::ListFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.ListFriends");

	AFrontEndPlayerController_ListFriends_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.LeaveParty
// (Final, Exec, Native, Public)

void AFrontEndPlayerController::LeaveParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.LeaveParty");

	AFrontEndPlayerController_LeaveParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.InviteFriend
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 FriendDisplayName              (Parm, ZeroConstructor)

void AFrontEndPlayerController::InviteFriend(const struct FString& FriendDisplayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.InviteFriend");

	AFrontEndPlayerController_InviteFriend_Params params;
	params.FriendDisplayName = FriendDisplayName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.GetMatchTypeMenuReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* AFrontEndPlayerController::GetMatchTypeMenuReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.GetMatchTypeMenuReference");

	AFrontEndPlayerController_GetMatchTypeMenuReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndPlayerController.GetMainMenuReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* AFrontEndPlayerController::GetMainMenuReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.GetMainMenuReference");

	AFrontEndPlayerController_GetMainMenuReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndPlayerController.GetLootCrateMenuReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* AFrontEndPlayerController::GetLootCrateMenuReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.GetLootCrateMenuReference");

	AFrontEndPlayerController_GetLootCrateMenuReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndPlayerController.GetCustomizationScreenReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* AFrontEndPlayerController::GetCustomizationScreenReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.GetCustomizationScreenReference");

	AFrontEndPlayerController_GetCustomizationScreenReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndPlayerController.GetCharacterMenuReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* AFrontEndPlayerController::GetCharacterMenuReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.GetCharacterMenuReference");

	AFrontEndPlayerController_GetCharacterMenuReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndPlayerController.GenerateTournamentCodes
// (Final, Exec, Native, Public)

void AFrontEndPlayerController::GenerateTournamentCodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.GenerateTournamentCodes");

	AFrontEndPlayerController_GenerateTournamentCodes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.DisplayClientBackendLogging
// (Final, Exec, Native, Public)
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void AFrontEndPlayerController::DisplayClientBackendLogging(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.DisplayClientBackendLogging");

	AFrontEndPlayerController_DisplayClientBackendLogging_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.DeleteParty
// (Final, Exec, Native, Public)

void AFrontEndPlayerController::DeleteParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.DeleteParty");

	AFrontEndPlayerController_DeleteParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.CheckParties
// (Final, Exec, Native, Public)

void AFrontEndPlayerController::CheckParties()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.CheckParties");

	AFrontEndPlayerController_CheckParties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.ChangeLocalization
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Target                         (Parm, ZeroConstructor)

void AFrontEndPlayerController::ChangeLocalization(const struct FString& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.ChangeLocalization");

	AFrontEndPlayerController_ChangeLocalization_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndPlayerController.AcceptFriendInvite
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 FriendDisplayName              (Parm, ZeroConstructor)

void AFrontEndPlayerController::AcceptFriendInvite(const struct FString& FriendDisplayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndPlayerController.AcceptFriendInvite");

	AFrontEndPlayerController_AcceptFriendInvite_Params params;
	params.FriendDisplayName = FriendDisplayName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.UpdatePlayerNamePlateData
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   PlayerName                     (ConstParm, Parm, OutParm, ReferenceParm)
// int                            numberOfCredits                (Parm, ZeroConstructor, IsPlainOldData)
// int                            rankLevel                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          experiencePercentage           (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              pAvatarImage                   (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEndWidgetInterface::UpdatePlayerNamePlateData(const struct FText& PlayerName, int numberOfCredits, int rankLevel, float experiencePercentage, class UTexture2D* pAvatarImage)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.UpdatePlayerNamePlateData");

	UFrontEndWidgetInterface_UpdatePlayerNamePlateData_Params params;
	params.PlayerName = PlayerName;
	params.numberOfCredits = numberOfCredits;
	params.rankLevel = rankLevel;
	params.experiencePercentage = experiencePercentage;
	params.pAvatarImage = pAvatarImage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.RespondToPartyInvite
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FString                 friendName                     (Parm, ZeroConstructor)
// struct FGuid                   PlayerId                       (Parm, IsPlainOldData)
// bool                           bAccept                        (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEndWidgetInterface::RespondToPartyInvite(const struct FString& friendName, const struct FGuid& PlayerId, bool bAccept)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.RespondToPartyInvite");

	UFrontEndWidgetInterface_RespondToPartyInvite_Params params;
	params.friendName = friendName;
	params.PlayerId = PlayerId;
	params.bAccept = bAccept;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.RespondToCustomMatchInvite
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FString                 friendName                     (Parm, ZeroConstructor)
// struct FGuid                   PlayerId                       (Parm, IsPlainOldData)
// bool                           bAccept                        (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEndWidgetInterface::RespondToCustomMatchInvite(const struct FString& friendName, const struct FGuid& PlayerId, bool bAccept)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.RespondToCustomMatchInvite");

	UFrontEndWidgetInterface_RespondToCustomMatchInvite_Params params;
	params.friendName = friendName;
	params.PlayerId = PlayerId;
	params.bAccept = bAccept;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.RemovePlayerFromParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendSocialBPData FriendInQuestion               (Parm)

void UFrontEndWidgetInterface::RemovePlayerFromParty(const struct FOnlineFriendSocialBPData& FriendInQuestion)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.RemovePlayerFromParty");

	UFrontEndWidgetInterface_RemovePlayerFromParty_Params params;
	params.FriendInQuestion = FriendInQuestion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.ProvideNamePlateReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pNamePlateWidget               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFrontEndWidgetInterface::ProvideNamePlateReference(class UUserWidget* pNamePlateWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.ProvideNamePlateReference");

	UFrontEndWidgetInterface_ProvideNamePlateReference_Params params;
	params.pNamePlateWidget = pNamePlateWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnReturnedFromMatch
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnReturnedFromMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnReturnedFromMatch");

	UFrontEndWidgetInterface_OnReturnedFromMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnReceiveNewPartyVersion
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineFriendSocialBPData> CurrentParty                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEndWidgetInterface::OnReceiveNewPartyVersion(TArray<struct FOnlineFriendSocialBPData> CurrentParty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnReceiveNewPartyVersion");

	UFrontEndWidgetInterface_OnReceiveNewPartyVersion_Params params;
	params.CurrentParty = CurrentParty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnReceivedPartyInvite
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FString                 friendName                     (Parm, ZeroConstructor)
// struct FGuid                   PlayerId                       (Parm, IsPlainOldData)

void UFrontEndWidgetInterface::OnReceivedPartyInvite(const struct FString& friendName, const struct FGuid& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnReceivedPartyInvite");

	UFrontEndWidgetInterface_OnReceivedPartyInvite_Params params;
	params.friendName = friendName;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnReceivedNoticeOfNotInParty
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnReceivedNoticeOfNotInParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnReceivedNoticeOfNotInParty");

	UFrontEndWidgetInterface_OnReceivedNoticeOfNotInParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnReceivedNoticeOfInParty
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnReceivedNoticeOfInParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnReceivedNoticeOfInParty");

	UFrontEndWidgetInterface_OnReceivedNoticeOfInParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnReceivedCustomMatchInvite
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FString                 friendName                     (Parm, ZeroConstructor)
// struct FGuid                   PlayerId                       (Parm, IsPlainOldData)

void UFrontEndWidgetInterface::OnReceivedCustomMatchInvite(const struct FString& friendName, const struct FGuid& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnReceivedCustomMatchInvite");

	UFrontEndWidgetInterface_OnReceivedCustomMatchInvite_Params params;
	params.friendName = friendName;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnPartyDisbanded
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           intentionalReasons             (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEndWidgetInterface::OnPartyDisbanded(bool intentionalReasons)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnPartyDisbanded");

	UFrontEndWidgetInterface_OnPartyDisbanded_Params params;
	params.intentionalReasons = intentionalReasons;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnMatchFound
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnMatchFound()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnMatchFound");

	UFrontEndWidgetInterface_OnMatchFound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnLoggedInSuccessfully
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnLoggedInSuccessfully()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnLoggedInSuccessfully");

	UFrontEndWidgetInterface_OnLoggedInSuccessfully_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnLeftSocialScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnLeftSocialScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnLeftSocialScreen");

	UFrontEndWidgetInterface_OnLeftSocialScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnLeaveMainMenuScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnLeaveMainMenuScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnLeaveMainMenuScreen");

	UFrontEndWidgetInterface_OnLeaveMainMenuScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnKickedFromParty
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnKickedFromParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnKickedFromParty");

	UFrontEndWidgetInterface_OnKickedFromParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToTrainingScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToTrainingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToTrainingScreen");

	UFrontEndWidgetInterface_OnArrivedToTrainingScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToSocialScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToSocialScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToSocialScreen");

	UFrontEndWidgetInterface_OnArrivedToSocialScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToPreLoginScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToPreLoginScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToPreLoginScreen");

	UFrontEndWidgetInterface_OnArrivedToPreLoginScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToPostMatchScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToPostMatchScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToPostMatchScreen");

	UFrontEndWidgetInterface_OnArrivedToPostMatchScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToOptionsScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToOptionsScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToOptionsScreen");

	UFrontEndWidgetInterface_OnArrivedToOptionsScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToMatchTypeScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToMatchTypeScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToMatchTypeScreen");

	UFrontEndWidgetInterface_OnArrivedToMatchTypeScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToMainMenu
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToMainMenu");

	UFrontEndWidgetInterface_OnArrivedToMainMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToLootScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToLootScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToLootScreen");

	UFrontEndWidgetInterface_OnArrivedToLootScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToLoginScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToLoginScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToLoginScreen");

	UFrontEndWidgetInterface_OnArrivedToLoginScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToLobby
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToLobby");

	UFrontEndWidgetInterface_OnArrivedToLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToLoadoutScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToLoadoutScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToLoadoutScreen");

	UFrontEndWidgetInterface_OnArrivedToLoadoutScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToEulaNdaScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToEulaNdaScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToEulaNdaScreen");

	UFrontEndWidgetInterface_OnArrivedToEulaNdaScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToCustomMatchScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToCustomMatchScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToCustomMatchScreen");

	UFrontEndWidgetInterface_OnArrivedToCustomMatchScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToCustomizationScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToCustomizationScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToCustomizationScreen");

	UFrontEndWidgetInterface_OnArrivedToCustomizationScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToCreateAccountScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToCreateAccountScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToCreateAccountScreen");

	UFrontEndWidgetInterface_OnArrivedToCreateAccountScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.OnArrivedToChallengesScreen
// (Event, Public, BlueprintEvent)

void UFrontEndWidgetInterface::OnArrivedToChallengesScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.OnArrivedToChallengesScreen");

	UFrontEndWidgetInterface_OnArrivedToChallengesScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.IsTournamentMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEndWidgetInterface::IsTournamentMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.IsTournamentMatch");

	UFrontEndWidgetInterface_IsTournamentMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndWidgetInterface.IsPrivateMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEndWidgetInterface::IsPrivateMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.IsPrivateMatch");

	UFrontEndWidgetInterface_IsPrivateMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndWidgetInterface.IsLocalPlayerInAParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEndWidgetInterface::IsLocalPlayerInAParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.IsLocalPlayerInAParty");

	UFrontEndWidgetInterface_IsLocalPlayerInAParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndWidgetInterface.IsLocalPlayerAPartyLeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEndWidgetInterface::IsLocalPlayerAPartyLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.IsLocalPlayerAPartyLeader");

	UFrontEndWidgetInterface_IsLocalPlayerAPartyLeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndWidgetInterface.GoToSocialScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToSocialScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToSocialScreen");

	UFrontEndWidgetInterface_GoToSocialScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToPreviousScreen
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEndWidgetInterface::GoToPreviousScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToPreviousScreen");

	UFrontEndWidgetInterface_GoToPreviousScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndWidgetInterface.GoToPreLoginScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToPreLoginScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToPreLoginScreen");

	UFrontEndWidgetInterface_GoToPreLoginScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToPostMatchScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToPostMatchScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToPostMatchScreen");

	UFrontEndWidgetInterface_GoToPostMatchScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToMatchTypeScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToMatchTypeScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToMatchTypeScreen");

	UFrontEndWidgetInterface_GoToMatchTypeScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToMainMenuScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToMainMenuScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToMainMenuScreen");

	UFrontEndWidgetInterface_GoToMainMenuScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToLootCrateScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToLootCrateScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToLootCrateScreen");

	UFrontEndWidgetInterface_GoToLootCrateScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToLoginScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToLoginScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToLoginScreen");

	UFrontEndWidgetInterface_GoToLoginScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToLobbyScreen
// (Final, Native, Public)
// Parameters:
// bool                           bFromDebugLoadoutScreen        (Parm, ZeroConstructor, IsPlainOldData)

void UFrontEndWidgetInterface::GoToLobbyScreen(bool bFromDebugLoadoutScreen)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToLobbyScreen");

	UFrontEndWidgetInterface_GoToLobbyScreen_Params params;
	params.bFromDebugLoadoutScreen = bFromDebugLoadoutScreen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToFoundLobby
// (Final, Native, Public, BlueprintCallable)

void UFrontEndWidgetInterface::GoToFoundLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToFoundLobby");

	UFrontEndWidgetInterface_GoToFoundLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToEulaNdaScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToEulaNdaScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToEulaNdaScreen");

	UFrontEndWidgetInterface_GoToEulaNdaScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToCustomMatchScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToCustomMatchScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToCustomMatchScreen");

	UFrontEndWidgetInterface_GoToCustomMatchScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToCustomMatchLobbyScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToCustomMatchLobbyScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToCustomMatchLobbyScreen");

	UFrontEndWidgetInterface_GoToCustomMatchLobbyScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToCustomizationScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToCustomizationScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToCustomizationScreen");

	UFrontEndWidgetInterface_GoToCustomizationScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GotoCreateAccountScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GotoCreateAccountScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GotoCreateAccountScreen");

	UFrontEndWidgetInterface_GotoCreateAccountScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToCharactersScreenFromLobby
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToCharactersScreenFromLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToCharactersScreenFromLobby");

	UFrontEndWidgetInterface_GoToCharactersScreenFromLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.GoToCharactersScreen
// (Final, Native, Public)

void UFrontEndWidgetInterface::GoToCharactersScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.GoToCharactersScreen");

	UFrontEndWidgetInterface_GoToCharactersScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.DisplayBackendRelatedError
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   Body                           (ConstParm, Parm, OutParm, ReferenceParm)

void UFrontEndWidgetInterface::DisplayBackendRelatedError(const struct FText& Title, const struct FText& Body)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.DisplayBackendRelatedError");

	UFrontEndWidgetInterface_DisplayBackendRelatedError_Params params;
	params.Title = Title;
	params.Body = Body;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.CloseAllInvitations
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   ignorePlayerID                 (Parm, IsPlainOldData)

void UFrontEndWidgetInterface::CloseAllInvitations(const struct FGuid& ignorePlayerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.CloseAllInvitations");

	UFrontEndWidgetInterface_CloseAllInvitations_Params params;
	params.ignorePlayerID = ignorePlayerID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.ChangeLeadership
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOnlineFriendSocialBPData NewLeader                      (Parm)

void UFrontEndWidgetInterface::ChangeLeadership(const struct FOnlineFriendSocialBPData& NewLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.ChangeLeadership");

	UFrontEndWidgetInterface_ChangeLeadership_Params params;
	params.NewLeader = NewLeader;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.CancelSubmitToMatchmaking
// (Final, Native, Public)

void UFrontEndWidgetInterface::CancelSubmitToMatchmaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.CancelSubmitToMatchmaking");

	UFrontEndWidgetInterface_CancelSubmitToMatchmaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.FrontEndWidgetInterface.AttemptToLeaveParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEndWidgetInterface::AttemptToLeaveParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.AttemptToLeaveParty");

	UFrontEndWidgetInterface_AttemptToLeaveParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndWidgetInterface.AreTherePendingInvitesForCurrentParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFrontEndWidgetInterface::AreTherePendingInvitesForCurrentParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.AreTherePendingInvitesForCurrentParty");

	UFrontEndWidgetInterface_AreTherePendingInvitesForCurrentParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.FrontEndWidgetInterface.AddPopUpToInternalQueue
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UUI_GenericPopUp*        pPopUp                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FText                   titleText                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   bodyText                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   buttonOkayText                 (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   buttonCancelText               (ConstParm, Parm, OutParm, ReferenceParm)

void UFrontEndWidgetInterface::AddPopUpToInternalQueue(class UUI_GenericPopUp* pPopUp, const struct FText& titleText, const struct FText& bodyText, const struct FText& buttonOkayText, const struct FText& buttonCancelText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.FrontEndWidgetInterface.AddPopUpToInternalQueue");

	UFrontEndWidgetInterface_AddPopUpToInternalQueue_Params params;
	params.pPopUp = pPopUp;
	params.titleText = titleText;
	params.bodyText = bodyText;
	params.buttonOkayText = buttonOkayText;
	params.buttonCancelText = buttonCancelText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.InputBindingUserWidget.WidgetUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Action                         (Parm, ZeroConstructor)
// struct FString                 NewKeyBind                     (Parm, ZeroConstructor)
// bool                           bIsCutomValue                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UInputBindingUserWidget::WidgetUpdated(const struct FString& Action, const struct FString& NewKeyBind, bool bIsCutomValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.InputBindingUserWidget.WidgetUpdated");

	UInputBindingUserWidget_WidgetUpdated_Params params;
	params.Action = Action;
	params.NewKeyBind = NewKeyBind;
	params.bIsCutomValue = bIsCutomValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.InputBindingUserWidget.SetupWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Action                         (Parm, ZeroConstructor)
// int                            SlotNumber                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UInputBindingUserWidget::SetupWidget(const struct FString& Action, int SlotNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.InputBindingUserWidget.SetupWidget");

	UInputBindingUserWidget_SetupWidget_Params params;
	params.Action = Action;
	params.SlotNumber = SlotNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.InputBindingUserWidget.ReceivedClicked
// (Final, Native, Public, BlueprintCallable)

void UInputBindingUserWidget::ReceivedClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.InputBindingUserWidget.ReceivedClicked");

	UInputBindingUserWidget_ReceivedClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.InputBindingUserWidget.InputBindingNeedsConfirmation
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Action                         (Parm, ZeroConstructor)

void UInputBindingUserWidget::InputBindingNeedsConfirmation(const struct FString& Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.InputBindingUserWidget.InputBindingNeedsConfirmation");

	UInputBindingUserWidget_InputBindingNeedsConfirmation_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.InputBindingUserWidget.InputBindingConfirmed
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Action                         (Parm, ZeroConstructor)
// struct FString                 NewKeyBind                     (Parm, ZeroConstructor)

void UInputBindingUserWidget::InputBindingConfirmed(const struct FString& Action, const struct FString& NewKeyBind)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.InputBindingUserWidget.InputBindingConfirmed");

	UInputBindingUserWidget_InputBindingConfirmed_Params params;
	params.Action = Action;
	params.NewKeyBind = NewKeyBind;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_ProgressPage.OnMissionComplete
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   missionName                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   missionDesc                    (ConstParm, Parm, OutParm, ReferenceParm)
// int                            XP                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            coin                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UPostMatch_Results_ProgressPage::OnMissionComplete(const struct FText& missionName, const struct FText& missionDesc, int XP, int coin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_ProgressPage.OnMissionComplete");

	UPostMatch_Results_ProgressPage_OnMissionComplete_Params params;
	params.missionName = missionName;
	params.missionDesc = missionDesc;
	params.XP = XP;
	params.coin = coin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_ProgressPage.OnMatchVictory
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// int                            XP                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UPostMatch_Results_ProgressPage::OnMatchVictory(int XP)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_ProgressPage.OnMatchVictory");

	UPostMatch_Results_ProgressPage_OnMatchVictory_Params params;
	params.XP = XP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_ProgressPage.OnMatchReward
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// ERewardId                      Type                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            Score                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            reward                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UPostMatch_Results_ProgressPage::OnMatchReward(ERewardId Type, int Score, int reward)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_ProgressPage.OnMatchReward");

	UPostMatch_Results_ProgressPage_OnMatchReward_Params params;
	params.Type = Type;
	params.Score = Score;
	params.reward = reward;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_ProgressPage.OnInitializeProgress
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// int                            CurrentLevel                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            prestigeLevel                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            borderLevel                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            currentXP                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          nextLevelXP                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UPostMatch_Results_ProgressPage::OnInitializeProgress(int CurrentLevel, int prestigeLevel, int borderLevel, int currentXP, float nextLevelXP)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_ProgressPage.OnInitializeProgress");

	UPostMatch_Results_ProgressPage_OnInitializeProgress_Params params;
	params.CurrentLevel = CurrentLevel;
	params.prestigeLevel = prestigeLevel;
	params.borderLevel = borderLevel;
	params.currentXP = currentXP;
	params.nextLevelXP = nextLevelXP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_ProgressPage.OnExperienceUpdate
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// int                            newXP                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UPostMatch_Results_ProgressPage::OnExperienceUpdate(int newXP)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_ProgressPage.OnExperienceUpdate");

	UPostMatch_Results_ProgressPage_OnExperienceUpdate_Params params;
	params.newXP = newXP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_ProgressPage.OnAccoladeDataReady
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FPostMatchAccoladeData> accolades                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UPostMatch_Results_ProgressPage::OnAccoladeDataReady(TArray<struct FPostMatchAccoladeData> accolades)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_ProgressPage.OnAccoladeDataReady");

	UPostMatch_Results_ProgressPage_OnAccoladeDataReady_Params params;
	params.accolades = accolades;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_ProgressPage.GetExperienceForLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPostMatch_Results_ProgressPage::GetExperienceForLevel(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_ProgressPage.GetExperienceForLevel");

	UPostMatch_Results_ProgressPage_GetExperienceForLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PostMatch_Results_SummaryPage.OnSetLeastDamageTakenData
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            teamAffiliationIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UPostMatch_Results_SummaryPage::OnSetLeastDamageTakenData(int teamAffiliationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnSetLeastDamageTakenData");

	UPostMatch_Results_SummaryPage_OnSetLeastDamageTakenData_Params params;
	params.teamAffiliationIndex = teamAffiliationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_SummaryPage.OnSetHighestSaveScoreData
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            teamAffiliationIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UPostMatch_Results_SummaryPage::OnSetHighestSaveScoreData(int teamAffiliationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnSetHighestSaveScoreData");

	UPostMatch_Results_SummaryPage_OnSetHighestSaveScoreData_Params params;
	params.teamAffiliationIndex = teamAffiliationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_SummaryPage.OnSetHighestRatingData
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            teamAffiliationIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UPostMatch_Results_SummaryPage::OnSetHighestRatingData(int teamAffiliationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnSetHighestRatingData");

	UPostMatch_Results_SummaryPage_OnSetHighestRatingData_Params params;
	params.teamAffiliationIndex = teamAffiliationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_SummaryPage.OnSetHighestPWNScoreData
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            teamAffiliationIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UPostMatch_Results_SummaryPage::OnSetHighestPWNScoreData(int teamAffiliationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnSetHighestPWNScoreData");

	UPostMatch_Results_SummaryPage_OnSetHighestPWNScoreData_Params params;
	params.teamAffiliationIndex = teamAffiliationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_SummaryPage.OnSetHighestKDRData
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            teamAffiliationIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UPostMatch_Results_SummaryPage::OnSetHighestKDRData(int teamAffiliationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnSetHighestKDRData");

	UPostMatch_Results_SummaryPage_OnSetHighestKDRData_Params params;
	params.teamAffiliationIndex = teamAffiliationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_SummaryPage.OnSetHighestDamageDealtData
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            teamAffiliationIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UPostMatch_Results_SummaryPage::OnSetHighestDamageDealtData(int teamAffiliationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnSetHighestDamageDealtData");

	UPostMatch_Results_SummaryPage_OnSetHighestDamageDealtData_Params params;
	params.teamAffiliationIndex = teamAffiliationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_SummaryPage.OnReceiveTeamScores
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            team0                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            team1                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UPostMatch_Results_SummaryPage::OnReceiveTeamScores(int team0, int team1)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnReceiveTeamScores");

	UPostMatch_Results_SummaryPage_OnReceiveTeamScores_Params params;
	params.team0 = team0;
	params.team1 = team1;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_Results_SummaryPage.OnReceiveMatchTime
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   minutesText                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   secondsText                    (ConstParm, Parm, OutParm, ReferenceParm)

void UPostMatch_Results_SummaryPage::OnReceiveMatchTime(const struct FText& minutesText, const struct FText& secondsText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_Results_SummaryPage.OnReceiveMatchTime");

	UPostMatch_Results_SummaryPage_OnReceiveMatchTime_Params params;
	params.minutesText = minutesText;
	params.secondsText = secondsText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.ViewSummaryPage
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::ViewSummaryPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.ViewSummaryPage");

	UPostMatch_ResultsScreen_ViewSummaryPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.ViewSavesPage
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::ViewSavesPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.ViewSavesPage");

	UPostMatch_ResultsScreen_ViewSavesPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.ViewPwnsPage
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::ViewPwnsPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.ViewPwnsPage");

	UPostMatch_ResultsScreen_ViewPwnsPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.ViewProgressPage
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::ViewProgressPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.ViewProgressPage");

	UPostMatch_ResultsScreen_ViewProgressPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.ViewLevelPage
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::ViewLevelPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.ViewLevelPage");

	UPostMatch_ResultsScreen_ViewLevelPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.ViewKillsPage
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::ViewKillsPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.ViewKillsPage");

	UPostMatch_ResultsScreen_ViewKillsPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.ViewDamagePage
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::ViewDamagePage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.ViewDamagePage");

	UPostMatch_ResultsScreen_ViewDamagePage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.OnPostMatchDataReady
// (Event, Public, BlueprintEvent)

void UPostMatch_ResultsScreen::OnPostMatchDataReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.OnPostMatchDataReady");

	UPostMatch_ResultsScreen_OnPostMatchDataReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.OnBumperRight_Implementation
// (Final, Native, Public)

void UPostMatch_ResultsScreen::OnBumperRight_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.OnBumperRight_Implementation");

	UPostMatch_ResultsScreen_OnBumperRight_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.OnBumperLeft_Implementation
// (Final, Native, Public)

void UPostMatch_ResultsScreen::OnBumperLeft_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.OnBumperLeft_Implementation");

	UPostMatch_ResultsScreen_OnBumperLeft_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.OnBack_Implementation
// (Final, Native, Public)

void UPostMatch_ResultsScreen::OnBack_Implementation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.OnBack_Implementation");

	UPostMatch_ResultsScreen_OnBack_Implementation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PostMatch_ResultsScreen.GoToMainMenu
// (Final, Native, Public, BlueprintCallable)

void UPostMatch_ResultsScreen::GoToMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PostMatch_ResultsScreen.GoToMainMenu");

	UPostMatch_ResultsScreen_GoToMainMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.SetInstigatorInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::SetInstigatorInfo(class AController* Controller, class AActor* Actor, class APwndWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.SetInstigatorInfo");

	APwndInventory_SetInstigatorInfo_Params params;
	params.Controller = Controller;
	params.Actor = Actor;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.Retune
// (BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void APwndInventory::Retune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.Retune");

	APwndInventory_Retune_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.RemoveFromOwner
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndInventory::RemoveFromOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.RemoveFromOwner");

	APwndInventory_RemoveFromOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.ReleaseCarry
// (Native, Event, Public, BlueprintEvent)

void APwndInventory::ReleaseCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.ReleaseCarry");

	APwndInventory_ReleaseCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.PressCarry
// (Native, Event, Public, BlueprintEvent)

void APwndInventory::PressCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.PressCarry");

	APwndInventory_PressCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.PostEventTrigger
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bGoUpClassTree                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndInventory::PostEventTrigger(const struct FPostedEventTrigger& Trig, bool bGoUpClassTree)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.PostEventTrigger");

	APwndInventory_PostEventTrigger_Params params;
	params.Trig = Trig;
	params.bGoUpClassTree = bGoUpClassTree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventory.OtherInventoryUsed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OtherInventoryUsed(class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OtherInventoryUsed");

	APwndInventory_OtherInventoryUsed_Params params;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnTuneShield
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndShield*             Shield                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnTuneShield(class APwndShield* Shield)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnTuneShield");

	APwndInventory_OnTuneShield_Params params;
	params.Shield = Shield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnTuneProjectile
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnTuneProjectile(class APwndProjectile* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnTuneProjectile");

	APwndInventory_OnTuneProjectile_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnTuneInventory
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnTuneInventory(class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnTuneInventory");

	APwndInventory_OnTuneInventory_Params params;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnTuneDOT
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPwndDOTComponent*       DOT                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APwndInventory::OnTuneDOT(class UPwndDOTComponent* DOT)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnTuneDOT");

	APwndInventory_OnTuneDOT_Params params;
	params.DOT = DOT;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnTuneCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnTuneCharacter(class APwndCharacter* Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnTuneCharacter");

	APwndInventory_OnTuneCharacter_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnTuneAOE
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndAOE*                AOE                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnTuneAOE(class APwndAOE* AOE)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnTuneAOE");

	APwndInventory_OnTuneAOE_Params params;
	params.AOE = AOE;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnRetune
// (Event, Protected, BlueprintEvent)

void APwndInventory::OnRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnRetune");

	APwndInventory_OnRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnResetTuning
// (Event, Protected, BlueprintEvent)

void APwndInventory::OnResetTuning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnResetTuning");

	APwndInventory_OnResetTuning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnPostRetune
// (Event, Protected, BlueprintEvent)

void APwndInventory::OnPostRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnPostRetune");

	APwndInventory_OnPostRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnPostEventTrigger
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Trigger                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Count                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndInventory::OnPostEventTrigger(TEnumAsByte<EeEventTrigger> Trigger, float Count, TArray<class UObject*> Others)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnPostEventTrigger");

	APwndInventory_OnPostEventTrigger_Params params;
	params.Trigger = Trigger;
	params.Count = Count;
	params.Others = Others;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnOwnerUnPossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*             OldController                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnOwnerUnPossessed(class AController* OldController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnOwnerUnPossessed");

	APwndInventory_OnOwnerUnPossessed_Params params;
	params.OldController = OldController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnOwnerPossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*             NewController                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnOwnerPossessed(class AController* NewController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnOwnerPossessed");

	APwndInventory_OnOwnerPossessed_Params params;
	params.NewController = NewController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnOwnerFirstPersonChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMeshVisible                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnOwnerFirstPersonChanged(bool bFirstPerson, bool bMeshVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnOwnerFirstPersonChanged");

	APwndInventory_OnOwnerFirstPersonChanged_Params params;
	params.bFirstPerson = bFirstPerson;
	params.bMeshVisible = bMeshVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnGiven
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          OldOwner                       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          NewOwner                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::OnGiven(class APwndCharacter* OldOwner, class APwndCharacter* NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnGiven");

	APwndInventory_OnGiven_Params params;
	params.OldOwner = OldOwner;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.OnDrawHUD
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ViewLocation                   (Parm, IsPlainOldData)
// struct FRotator                ViewRotation                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasOrigin                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasSize                     (Parm, IsPlainOldData)

void APwndInventory::OnDrawHUD(class APwndHUD* HUD, class UCanvas* Canvas, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, const struct FVector2D& CanvasOrigin, const struct FVector2D& CanvasSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.OnDrawHUD");

	APwndInventory_OnDrawHUD_Params params;
	params.HUD = HUD;
	params.Canvas = Canvas;
	params.ViewLocation = ViewLocation;
	params.ViewRotation = ViewRotation;
	params.CanvasOrigin = CanvasOrigin;
	params.CanvasSize = CanvasSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.GiveTo
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          NewOwner                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndInventory::GiveTo(class APwndCharacter* NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.GiveTo");

	APwndInventory_GiveTo_Params params;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndInventory::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.GetServerTimeStamp");

	APwndInventory_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventory.GetLoadoutViewAccessories
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> APwndInventory::GetLoadoutViewAccessories()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.GetLoadoutViewAccessories");

	APwndInventory_GetLoadoutViewAccessories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventory.DropFromOwner
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 TossVelocity                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndInventory::DropFromOwner(const struct FVector& Loc, const struct FVector& TossVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.DropFromOwner");

	APwndInventory_DropFromOwner_Params params;
	params.Loc = Loc;
	params.TossVelocity = TossVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventory.AllowDashing
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndInventory::AllowDashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.AllowDashing");

	APwndInventory_AllowDashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventory.AllowCarry
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndInventory::AllowCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.AllowCarry");

	APwndInventory_AllowCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventory.AdjustRotationInput
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                RotationInput                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 StartTrace                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                ControlRot                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          AimingDilation                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator APwndInventory::AdjustRotationInput(const struct FRotator& RotationInput, const struct FVector& StartTrace, const struct FRotator& ControlRot, float DeltaTime, float AimingDilation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventory.AdjustRotationInput");

	APwndInventory_AdjustRotationInput_Params params;
	params.RotationInput = RotationInput;
	params.StartTrace = StartTrace;
	params.ControlRot = ControlRot;
	params.DeltaTime = DeltaTime;
	params.AimingDilation = AimingDilation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnSpread
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnSpreadAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnSpread(const struct FPwndWeaponRepOwnSpreadAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnSpread");

	APwndWeaponGUTS_ModifyRepOwnSpread_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnReload
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnReloadAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnReload(const struct FPwndWeaponRepOwnReloadAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnReload");

	APwndWeaponGUTS_ModifyRepOwnReload_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnProjectile
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnProjectileAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnProjectile(const struct FPwndWeaponRepOwnProjectileAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnProjectile");

	APwndWeaponGUTS_ModifyRepOwnProjectile_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnMultiShot
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnMultiShotAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnMultiShot(const struct FPwndWeaponRepOwnMultiShotAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnMultiShot");

	APwndWeaponGUTS_ModifyRepOwnMultiShot_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnLockon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnLockonAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnLockon(const struct FPwndWeaponRepOwnLockonAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnLockon");

	APwndWeaponGUTS_ModifyRepOwnLockon_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnInstantHit
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnInstantHitAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnInstantHit(const struct FPwndWeaponRepOwnInstantHitAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnInstantHit");

	APwndWeaponGUTS_ModifyRepOwnInstantHit_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnFiring
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnFiringAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnFiring(const struct FPwndWeaponRepOwnFiringAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnFiring");

	APwndWeaponGUTS_ModifyRepOwnFiring_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnChargeAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnCharge(const struct FPwndWeaponRepOwnChargeAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnCharge");

	APwndWeaponGUTS_ModifyRepOwnCharge_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnBurst
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnBurstAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnBurst(const struct FPwndWeaponRepOwnBurstAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnBurst");

	APwndWeaponGUTS_ModifyRepOwnBurst_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnBeam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnBeamAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnBeam(const struct FPwndWeaponRepOwnBeamAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnBeam");

	APwndWeaponGUTS_ModifyRepOwnBeam_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepOwnArc
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepOwnArcAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepOwnArc(const struct FPwndWeaponRepOwnArcAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepOwnArc");

	APwndWeaponGUTS_ModifyRepOwnArc_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepNonReload
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepNonReloadAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepNonReload(const struct FPwndWeaponRepNonReloadAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepNonReload");

	APwndWeaponGUTS_ModifyRepNonReload_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepNonLockon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepNonLockonAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepNonLockon(const struct FPwndWeaponRepNonLockonAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepNonLockon");

	APwndWeaponGUTS_ModifyRepNonLockon_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepNonInstantHit
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepNonInstantHitAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepNonInstantHit(const struct FPwndWeaponRepNonInstantHitAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepNonInstantHit");

	APwndWeaponGUTS_ModifyRepNonInstantHit_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepNonFiring
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepNonFiringAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepNonFiring(const struct FPwndWeaponRepNonFiringAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepNonFiring");

	APwndWeaponGUTS_ModifyRepNonFiring_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepNonBeam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepNonBeamAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepNonBeam(const struct FPwndWeaponRepNonBeamAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepNonBeam");

	APwndWeaponGUTS_ModifyRepNonBeam_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepNonArc
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepNonArcAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepNonArc(const struct FPwndWeaponRepNonArcAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepNonArc");

	APwndWeaponGUTS_ModifyRepNonArc_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.ModifyRepAllReload
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndWeaponRepAllReloadAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeaponGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeaponGUTS* APwndWeaponGUTS::ModifyRepAllReload(const struct FPwndWeaponRepAllReloadAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.ModifyRepAllReload");

	APwndWeaponGUTS_ModifyRepAllReload_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponSpread
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnSpread ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnSpread APwndWeaponGUTS::K2ReadRepOwnerWeaponSpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponSpread");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponSpread_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnReload ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnReload APwndWeaponGUTS::K2ReadRepOwnerWeaponReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponReload");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponProjectile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnProjectile ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnProjectile APwndWeaponGUTS::K2ReadRepOwnerWeaponProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponProjectile");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponMultiShot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnMultiShot ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnMultiShot APwndWeaponGUTS::K2ReadRepOwnerWeaponMultiShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponMultiShot");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponMultiShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponLockon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnLockon ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnLockon APwndWeaponGUTS::K2ReadRepOwnerWeaponLockon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponLockon");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponLockon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponInstantHit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnInstantHit ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnInstantHit APwndWeaponGUTS::K2ReadRepOwnerWeaponInstantHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponInstantHit");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponInstantHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnFiring ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnFiring APwndWeaponGUTS::K2ReadRepOwnerWeaponFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponFiring");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnCharge ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnCharge APwndWeaponGUTS::K2ReadRepOwnerWeaponCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponCharge");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponBurst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnBurst  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnBurst APwndWeaponGUTS::K2ReadRepOwnerWeaponBurst()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponBurst");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponBurst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponBeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnBeam   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnBeam APwndWeaponGUTS::K2ReadRepOwnerWeaponBeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponBeam");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponBeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponArc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepOwnArc    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepOwnArc APwndWeaponGUTS::K2ReadRepOwnerWeaponArc()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepOwnerWeaponArc");

	APwndWeaponGUTS_K2ReadRepOwnerWeaponArc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponReload
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepNonReload ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepNonReload APwndWeaponGUTS::K2ReadRepNoneWeaponReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponReload");

	APwndWeaponGUTS_K2ReadRepNoneWeaponReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponLockon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepNonLockon ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepNonLockon APwndWeaponGUTS::K2ReadRepNoneWeaponLockon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponLockon");

	APwndWeaponGUTS_K2ReadRepNoneWeaponLockon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponInstantHit
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepNonInstantHit ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepNonInstantHit APwndWeaponGUTS::K2ReadRepNoneWeaponInstantHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponInstantHit");

	APwndWeaponGUTS_K2ReadRepNoneWeaponInstantHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponFiring
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepNonFiring ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepNonFiring APwndWeaponGUTS::K2ReadRepNoneWeaponFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponFiring");

	APwndWeaponGUTS_K2ReadRepNoneWeaponFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponBeam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepNonBeam   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepNonBeam APwndWeaponGUTS::K2ReadRepNoneWeaponBeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponBeam");

	APwndWeaponGUTS_K2ReadRepNoneWeaponBeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponArc
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepNonArc    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepNonArc APwndWeaponGUTS::K2ReadRepNoneWeaponArc()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepNoneWeaponArc");

	APwndWeaponGUTS_K2ReadRepNoneWeaponArc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeaponGUTS.K2ReadRepAllWeaponReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndWeaponRepAllReload ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndWeaponRepAllReload APwndWeaponGUTS::K2ReadRepAllWeaponReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeaponGUTS.K2ReadRepAllWeaponReload");

	APwndWeaponGUTS_K2ReadRepAllWeaponReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.WeaponDebugPrint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FString                 Str                            (Parm, ZeroConstructor)
// struct FLinearColor            Color                          (Parm, IsPlainOldData)

void APwndWeapon::WeaponDebugPrint(const struct FString& Str, const struct FLinearColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.WeaponDebugPrint");

	APwndWeapon_WeaponDebugPrint_Params params;
	params.Str = Str;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.UnEquip
// (Native, Public, BlueprintCallable)

void APwndWeapon::UnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.UnEquip");

	APwndWeapon_UnEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.StopFire
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromServerCallback            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicate                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::StopFire(float Timestamp, bool bFromServerCallback, bool bReplicate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.StopFire");

	APwndWeapon_StopFire_Params params;
	params.Timestamp = Timestamp;
	params.bFromServerCallback = bFromServerCallback;
	params.bReplicate = bReplicate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.StillFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::StillFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.StillFiring");

	APwndWeapon_StillFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.StartReload
// (Final, Native, Public, BlueprintCallable)

void APwndWeapon::StartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.StartReload");

	APwndWeapon_StartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.StartFire
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromServerCallback            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicate                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::StartFire(float Timestamp, bool bFromServerCallback, bool bReplicate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.StartFire");

	APwndWeapon_StartFire_Params params;
	params.Timestamp = Timestamp;
	params.bFromServerCallback = bFromServerCallback;
	params.bReplicate = bReplicate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ShouldRefire
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::ShouldRefire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ShouldRefire");

	APwndWeapon_ShouldRefire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.SetWeaponSkin
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponSkinClass                (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::SetWeaponSkin(class UClass* WeaponSkinClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.SetWeaponSkin");

	APwndWeapon_SetWeaponSkin_Params params;
	params.WeaponSkinClass = WeaponSkinClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.SetAttachPoint
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeWeaponAttachPoint> Point                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::SetAttachPoint(TEnumAsByte<EeWeaponAttachPoint> Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.SetAttachPoint");

	APwndWeapon_SetAttachPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.SetAttachParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APwndWeapon*             ParentWeapon                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::SetAttachParent(class APwndWeapon* ParentWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.SetAttachParent");

	APwndWeapon_SetAttachParent_Params params;
	params.ParentWeapon = ParentWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.SetAmmoCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::SetAmmoCount(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.SetAmmoCount");

	APwndWeapon_SetAmmoCount_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.ServerUnEquip
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APwndWeapon::ServerUnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerUnEquip");

	APwndWeapon_ServerUnEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerStopFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ServerStopFire(float Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerStopFire");

	APwndWeapon_ServerStopFire_Params params;
	params.Timestamp = Timestamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerStartReload
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APwndWeapon::ServerStartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerStartReload");

	APwndWeapon_ServerStartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerStartFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ServerStartFire(float Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerStartFire");

	APwndWeapon_ServerStartFire_Params params;
	params.Timestamp = Timestamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerSetAttachPoint
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EeWeaponAttachPoint> Point                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ServerSetAttachPoint(TEnumAsByte<EeWeaponAttachPoint> Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerSetAttachPoint");

	APwndWeapon_ServerSetAttachPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerSetAttachParent
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class APwndWeapon*             ParentWeapon                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ServerSetAttachParent(class APwndWeapon* ParentWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerSetAttachParent");

	APwndWeapon_ServerSetAttachParent_Params params;
	params.ParentWeapon = ParentWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerHide
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APwndWeapon::ServerHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerHide");

	APwndWeapon_ServerHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerHandleInstantHit
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  OverrideDamageTypeClass        (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ServerHandleInstantHit(float Timestamp, const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot, float ChargePct, class UClass* OverrideDamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerHandleInstantHit");

	APwndWeapon_ServerHandleInstantHit_Params params;
	params.Timestamp = Timestamp;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;
	params.ChargePct = ChargePct;
	params.OverrideDamageTypeClass = OverrideDamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerHandleArcHit
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  OverrideDamageTypeClass        (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ServerHandleArcHit(float Timestamp, const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot, float ChargePct, class UClass* OverrideDamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerHandleArcHit");

	APwndWeapon_ServerHandleArcHit_Params params;
	params.Timestamp = Timestamp;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;
	params.ChargePct = ChargePct;
	params.OverrideDamageTypeClass = OverrideDamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerEquip
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APwndWeapon::ServerEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerEquip");

	APwndWeapon_ServerEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ServerAdjustReloadTimerByPercent
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                          Pct                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ServerAdjustReloadTimerByPercent(float Pct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ServerAdjustReloadTimerByPercent");

	APwndWeapon_ServerAdjustReloadTimerByPercent_Params params;
	params.Pct = Pct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ProjectileFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectile* APwndWeapon::ProjectileFire(float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ProjectileFire");

	APwndWeapon_ProjectileFire_Params params;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.PostEventTrigger
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bGoUpClassTree                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::PostEventTrigger(const struct FPostedEventTrigger& Trig, bool bGoUpClassTree)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.PostEventTrigger");

	APwndWeapon_PostEventTrigger_Params params;
	params.Trig = Trig;
	params.bGoUpClassTree = bGoUpClassTree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.OverrideWeaponMaterials
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      MatIfc                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bThirdPerson                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OverrideWeaponMaterials(class UMaterialInterface* MatIfc, bool bFirstPerson, bool bThirdPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OverrideWeaponMaterials");

	APwndWeapon_OverrideWeaponMaterials_Params params;
	params.MatIfc = MatIfc;
	params.bFirstPerson = bFirstPerson;
	params.bThirdPerson = bThirdPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OverrideWeaponDropOnReplace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::OverrideWeaponDropOnReplace()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OverrideWeaponDropOnReplace");

	APwndWeapon_OverrideWeaponDropOnReplace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.OverrideHealEvent
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FPwndHealEvent          OutHealEvent                   (Parm, OutParm)
// struct FVector                 OutMomentumDir                 (Parm, OutParm, IsPlainOldData)
// struct FPwndHealEvent          inHealEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 inMomentumDir                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndWeapon::OverrideHealEvent(const struct FPwndHealEvent& inHealEvent, const struct FVector& inMomentumDir, const struct FHitResult& Hit, struct FPwndHealEvent* OutHealEvent, struct FVector* OutMomentumDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OverrideHealEvent");

	APwndWeapon_OverrideHealEvent_Params params;
	params.inHealEvent = inHealEvent;
	params.inMomentumDir = inMomentumDir;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHealEvent != nullptr)
		*OutHealEvent = params.OutHealEvent;
	if (OutMomentumDir != nullptr)
		*OutMomentumDir = params.OutMomentumDir;
}


// Function PWND.PwndWeapon.OverrideDamageEvent
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FPwndDamageEvent        OutDamageEvent                 (Parm, OutParm)
// struct FVector                 OutMomentumDir                 (Parm, OutParm, IsPlainOldData)
// struct FPwndDamageEvent        inDamageEvent                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 inMomentumDir                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndWeapon::OverrideDamageEvent(const struct FPwndDamageEvent& inDamageEvent, const struct FVector& inMomentumDir, const struct FHitResult& Hit, struct FPwndDamageEvent* OutDamageEvent, struct FVector* OutMomentumDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OverrideDamageEvent");

	APwndWeapon_OverrideDamageEvent_Params params;
	params.inDamageEvent = inDamageEvent;
	params.inMomentumDir = inMomentumDir;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDamageEvent != nullptr)
		*OutDamageEvent = params.OutDamageEvent;
	if (OutMomentumDir != nullptr)
		*OutMomentumDir = params.OutMomentumDir;
}


// Function PWND.PwndWeapon.OnWeaponStopReload
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bAborted                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnWeaponStopReload(bool bAborted)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponStopReload");

	APwndWeapon_OnWeaponStopReload_Params params;
	params.bAborted = bAborted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponStopFiring
// (Event, Public, BlueprintEvent)

void APwndWeapon::OnWeaponStopFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponStopFiring");

	APwndWeapon_OnWeaponStopFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponStopCharging
// (Event, Public, BlueprintEvent)

void APwndWeapon::OnWeaponStopCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponStopCharging");

	APwndWeapon_OnWeaponStopCharging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponStartReload
// (Event, Public, BlueprintEvent)

void APwndWeapon::OnWeaponStartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponStartReload");

	APwndWeapon_OnWeaponStartReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponStartFiring
// (Event, Public, BlueprintEvent)

void APwndWeapon::OnWeaponStartFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponStartFiring");

	APwndWeapon_OnWeaponStartFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponStartCharging
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bInitialCharge                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnWeaponStartCharging(bool bInitialCharge)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponStartCharging");

	APwndWeapon_OnWeaponStartCharging_Params params;
	params.bInitialCharge = bInitialCharge;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponShotCountChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bCharging                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OldShotCount                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewShotCount                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnWeaponShotCountChanged(bool bCharging, int OldShotCount, int NewShotCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponShotCountChanged");

	APwndWeapon_OnWeaponShotCountChanged_Params params;
	params.bCharging = bCharging;
	params.OldShotCount = OldShotCount;
	params.NewShotCount = NewShotCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponFire
// (Event, Public, BlueprintEvent)

void APwndWeapon::OnWeaponFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponFire");

	APwndWeapon_OnWeaponFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponFailedFire
// (Event, Public, BlueprintEvent)

void APwndWeapon::OnWeaponFailedFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponFailedFire");

	APwndWeapon_OnWeaponFailedFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponDisable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDisabled                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnWeaponDisable(bool bDisabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponDisable");

	APwndWeapon_OnWeaponDisable_Params params;
	params.bDisabled = bDisabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponApplyAttachPoint
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeWeaponAttachPoint> Point                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnWeaponApplyAttachPoint(TEnumAsByte<EeWeaponAttachPoint> Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponApplyAttachPoint");

	APwndWeapon_OnWeaponApplyAttachPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnWeaponAmmoCountChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            OldAmmoCount                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewAmmoCount                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnWeaponAmmoCountChanged(int OldAmmoCount, int NewAmmoCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnWeaponAmmoCountChanged");

	APwndWeapon_OnWeaponAmmoCountChanged_Params params;
	params.OldAmmoCount = OldAmmoCount;
	params.NewAmmoCount = NewAmmoCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_WeaponStopFiringTimeStamp
// (Native, Protected)

void APwndWeapon::OnRep_WeaponStopFiringTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_WeaponStopFiringTimeStamp");

	APwndWeapon_OnRep_WeaponStopFiringTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_WeaponStartFiringTimeStamp
// (Native, Protected)

void APwndWeapon::OnRep_WeaponStartFiringTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_WeaponStartFiringTimeStamp");

	APwndWeapon_OnRep_WeaponStartFiringTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_WeaponSkin
// (Native, Protected)
// Parameters:
// class UClass*                  OldWeaponSkin                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnRep_WeaponSkin(class UClass* OldWeaponSkin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_WeaponSkin");

	APwndWeapon_OnRep_WeaponSkin_Params params;
	params.OldWeaponSkin = OldWeaponSkin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_WeaponFireTimeStamp
// (Native, Protected)

void APwndWeapon::OnRep_WeaponFireTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_WeaponFireTimeStamp");

	APwndWeapon_OnRep_WeaponFireTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_WeaponAttachPoint
// (Native, Protected, HasOutParms)
// Parameters:
// struct FPwndWeaponAttachPoint  OldAttachPoint                 (ConstParm, Parm, OutParm, ReferenceParm)

void APwndWeapon::OnRep_WeaponAttachPoint(const struct FPwndWeaponAttachPoint& OldAttachPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_WeaponAttachPoint");

	APwndWeapon_OnRep_WeaponAttachPoint_Params params;
	params.OldAttachPoint = OldAttachPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_RepLockonTargets
// (Native, Protected, HasOutParms)
// Parameters:
// TArray<struct FPwndWeaponReplicatedLockon> OldRepLockonTargets            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndWeapon::OnRep_RepLockonTargets(TArray<struct FPwndWeaponReplicatedLockon> OldRepLockonTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_RepLockonTargets");

	APwndWeapon_OnRep_RepLockonTargets_Params params;
	params.OldRepLockonTargets = OldRepLockonTargets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_OverrideWeaponMaterialIfc
// (Native, Protected)

void APwndWeapon::OnRep_OverrideWeaponMaterialIfc()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_OverrideWeaponMaterialIfc");

	APwndWeapon_OnRep_OverrideWeaponMaterialIfc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnRep_AmmoCount
// (Native, Protected)
// Parameters:
// int                            OldAmmoCount                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnRep_AmmoCount(int OldAmmoCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnRep_AmmoCount");

	APwndWeapon_OnRep_AmmoCount_Params params;
	params.OldAmmoCount = OldAmmoCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnProjectileSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnProjectileSpawned(class APwndProjectile* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnProjectileSpawned");

	APwndWeapon_OnProjectileSpawned_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnProjectileDetonated
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bDestroy                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnProjectileDetonated(class APwndProjectile* Projectile, const struct FHitResult& Hit, bool bDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnProjectileDetonated");

	APwndWeapon_OnProjectileDetonated_Params params;
	params.Projectile = Projectile;
	params.Hit = Hit;
	params.bDestroy = bDestroy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnProjectileDestroyed
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnProjectileDestroyed(class APwndProjectile* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnProjectileDestroyed");

	APwndWeapon_OnProjectileDestroyed_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnPlayRocketJump
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Impulse                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FReplicatedRocketJump   ReplicatedRocketJump           (ConstParm, Parm, OutParm, ReferenceParm)

void APwndWeapon::OnPlayRocketJump(const struct FVector& Impulse, const struct FReplicatedRocketJump& ReplicatedRocketJump)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnPlayRocketJump");

	APwndWeapon_OnPlayRocketJump_Params params;
	params.Impulse = Impulse;
	params.ReplicatedRocketJump = ReplicatedRocketJump;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnMulticastHandleInstantHit
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndWeapon::OnMulticastHandleInstantHit(const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnMulticastHandleInstantHit");

	APwndWeapon_OnMulticastHandleInstantHit_Params params;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnMulticastHandleArcHit
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndWeapon::OnMulticastHandleArcHit(const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnMulticastHandleArcHit");

	APwndWeapon_OnMulticastHandleArcHit_Params params;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnHealInflicted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndReplicatedHealEvent HealEvent                      (ConstParm, Parm, OutParm, ReferenceParm)

void APwndWeapon::OnHealInflicted(const struct FPwndReplicatedHealEvent& HealEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnHealInflicted");

	APwndWeapon_OnHealInflicted_Params params;
	params.HealEvent = HealEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnExecutedRocketJump
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Impulse                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EeEventTrigger>    RJType                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWasDoubleTap                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnExecutedRocketJump(const struct FVector& Impulse, TEnumAsByte<EeEventTrigger> RJType, bool bWasDoubleTap)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnExecutedRocketJump");

	APwndWeapon_OnExecutedRocketJump_Params params;
	params.Impulse = Impulse;
	params.RJType = RJType;
	params.bWasDoubleTap = bWasDoubleTap;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnDamageInflicted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)

void APwndWeapon::OnDamageInflicted(const struct FPwndReplicatedDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnDamageInflicted");

	APwndWeapon_OnDamageInflicted_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnClientHandleInstantHitResponse
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           bDidHit                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndWeapon::OnClientHandleInstantHitResponse(bool bDidHit, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnClientHandleInstantHitResponse");

	APwndWeapon_OnClientHandleInstantHitResponse_Params params;
	params.bDidHit = bDidHit;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnClientHandleArcHitResponse
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           bDidHit                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndWeapon::OnClientHandleArcHitResponse(bool bDidHit, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnClientHandleArcHitResponse");

	APwndWeapon_OnClientHandleArcHitResponse_Params params;
	params.bDidHit = bDidHit;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.OnCharacterSkinAppliedHACK
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPwndCharacterSkin*      Skin                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::OnCharacterSkinAppliedHACK(class UPwndCharacterSkin* Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.OnCharacterSkinAppliedHACK");

	APwndWeapon_OnCharacterSkinAppliedHACK_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.MulticastHandleInstantHit
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void APwndWeapon::MulticastHandleInstantHit(const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.MulticastHandleInstantHit");

	APwndWeapon_MulticastHandleInstantHit_Params params;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.MulticastHandleArcHit
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void APwndWeapon::MulticastHandleArcHit(const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.MulticastHandleArcHit");

	APwndWeapon_MulticastHandleArcHit_Params params;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.IsWaitingForReleaseToFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::IsWaitingForReleaseToFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.IsWaitingForReleaseToFire");

	APwndWeapon_IsWaitingForReleaseToFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.IsSpecialMovementTwoStage
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           bFirstStage                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::IsSpecialMovementTwoStage(bool bFirstStage)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.IsSpecialMovementTwoStage");

	APwndWeapon_IsSpecialMovementTwoStage_Params params;
	params.bFirstStage = bFirstStage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.IsReloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.IsReloading");

	APwndWeapon_IsReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.IsOverrideWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::IsOverrideWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.IsOverrideWeapon");

	APwndWeapon_IsOverrideWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.IsFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.IsFiring");

	APwndWeapon_IsFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.IsCharging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::IsCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.IsCharging");

	APwndWeapon_IsCharging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.InstantFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::InstantFire(float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.InstantFire");

	APwndWeapon_InstantFire_Params params;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.Hide
// (Native, Public, BlueprintCallable)

void APwndWeapon::Hide()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.Hide");

	APwndWeapon_Hide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.HasAnyAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::HasAnyAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.HasAnyAmmo");

	APwndWeapon_HasAnyAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.HasAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::HasAmmo(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.HasAmmo");

	APwndWeapon_HasAmmo_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.HandleInstantHit
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::HandleInstantHit(const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot, float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.HandleInstantHit");

	APwndWeapon_HandleInstantHit_Params params;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.HandleBeamHit
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::HandleBeamHit(const struct FHitResult& Hit, float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.HandleBeamHit");

	APwndWeapon_HandleBeamHit_Params params;
	params.Hit = Hit;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.HandleArcHit
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPwndWeaponArcFire      Arc                            (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::HandleArcHit(const struct FHitResult& Hit, const struct FPwndWeaponArcFire& Arc, const struct FVector& Origin, const struct FRotator& Rot, float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.HandleArcHit");

	APwndWeapon_HandleArcHit_Params params;
	params.Hit = Hit;
	params.Arc = Arc;
	params.Origin = Origin;
	params.Rot = Rot;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.GetWeaponFireType
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            Shot                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            TotalShots                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeWeaponFireType>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeWeaponFireType> APwndWeapon::GetWeaponFireType(float ChargePct, int Shot, int TotalShots)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetWeaponFireType");

	APwndWeapon_GetWeaponFireType_Params params;
	params.ChargePct = ChargePct;
	params.Shot = Shot;
	params.TotalShots = TotalShots;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetWeaponFireTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetWeaponFireTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetWeaponFireTimeStamp");

	APwndWeapon_GetWeaponFireTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetSpreadType
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            TotalShots                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeSpreadType>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeSpreadType> APwndWeapon::GetSpreadType(int TotalShots)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetSpreadType");

	APwndWeapon_GetSpreadType_Params params;
	params.TotalShots = TotalShots;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetSpecialMovementTarget
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 TargetVelocity                 (Parm, OutParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndWeapon::GetSpecialMovementTarget(struct FVector* TargetVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetSpecialMovementTarget");

	APwndWeapon_GetSpecialMovementTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TargetVelocity != nullptr)
		*TargetVelocity = params.TargetVelocity;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetReloadTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetReloadTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetReloadTimer");

	APwndWeapon_GetReloadTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetReloadTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetReloadTime");

	APwndWeapon_GetReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetReloadPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bIncludeAutoReloadDelay        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetReloadPercent(bool bIncludeAutoReloadDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetReloadPercent");

	APwndWeapon_GetReloadPercent_Params params;
	params.bIncludeAutoReloadDelay = bIncludeAutoReloadDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetProjectileSpawnLoc
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndWeapon::GetProjectileSpawnLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetProjectileSpawnLoc");

	APwndWeapon_GetProjectileSpawnLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetProjectileArchetype
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndWeapon::GetProjectileArchetype(float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetProjectileArchetype");

	APwndWeapon_GetProjectileArchetype_Params params;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetOverrideWeaponSecondaryAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndAbilityWeapon*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAbilityWeapon* APwndWeapon::GetOverrideWeaponSecondaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetOverrideWeaponSecondaryAbility");

	APwndWeapon_GetOverrideWeaponSecondaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetOverrideWeaponPrimaryAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndAbilityWeapon*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAbilityWeapon* APwndWeapon::GetOverrideWeaponPrimaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetOverrideWeaponPrimaryAbility");

	APwndWeapon_GetOverrideWeaponPrimaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetMuzzleLoc
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndWeapon::GetMuzzleLoc(bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetMuzzleLoc");

	APwndWeapon_GetMuzzleLoc_Params params;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetMovementSpeedModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetMovementSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetMovementSpeedModifier");

	APwndWeapon_GetMovementSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetMaxAimSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator APwndWeapon::GetMaxAimSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetMaxAimSpeed");

	APwndWeapon_GetMaxAimSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetLockonActors
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AActor*> APwndWeapon::GetLockonActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetLockonActors");

	APwndWeapon_GetLockonActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetInstantHitOverrideDamageTypeClass
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndWeapon::GetInstantHitOverrideDamageTypeClass(const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot, float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetInstantHitOverrideDamageTypeClass");

	APwndWeapon_GetInstantHitOverrideDamageTypeClass_Params params;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetFiringPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetFiringPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetFiringPercent");

	APwndWeapon_GetFiringPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetFireModeSpread
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetFireModeSpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetFireModeSpread");

	APwndWeapon_GetFireModeSpread_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetFireInterval
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetFireInterval()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetFireInterval");

	APwndWeapon_GetFireInterval_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetCrosshairMatInst
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* APwndWeapon::GetCrosshairMatInst()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetCrosshairMatInst");

	APwndWeapon_GetCrosshairMatInst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetClipSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetClipSize");

	APwndWeapon_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetChargeTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetChargeTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetChargeTime");

	APwndWeapon_GetChargeTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetChargePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetChargePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetChargePercent");

	APwndWeapon_GetChargePercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetChargeCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::GetChargeCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetChargeCount");

	APwndWeapon_GetChargeCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetAttachParent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* APwndWeapon::GetAttachParent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetAttachParent");

	APwndWeapon_GetAttachParent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetArrayIndex
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeWeaponArrayIndexMode> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ArrSize                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          OutSmoothLerp                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Input                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::GetArrayIndex(TEnumAsByte<EeWeaponArrayIndexMode> Type, int ArrSize, float Input, float* OutSmoothLerp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetArrayIndex");

	APwndWeapon_GetArrayIndex_Params params;
	params.Type = Type;
	params.ArrSize = ArrSize;
	params.Input = Input;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutSmoothLerp != nullptr)
		*OutSmoothLerp = params.OutSmoothLerp;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetArcHitOverrideDamageTypeClass
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rot                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndWeapon::GetArcHitOverrideDamageTypeClass(const struct FHitResult& Hit, const struct FVector& Origin, const struct FRotator& Rot, float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetArcHitOverrideDamageTypeClass");

	APwndWeapon_GetArcHitOverrideDamageTypeClass_Params params;
	params.Hit = Hit;
	params.Origin = Origin;
	params.Rot = Rot;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetAmmoWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* APwndWeapon::GetAmmoWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetAmmoWeapon");

	APwndWeapon_GetAmmoWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetAmmoPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::GetAmmoPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetAmmoPercent");

	APwndWeapon_GetAmmoPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetAmmoCountMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::GetAmmoCountMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetAmmoCountMax");

	APwndWeapon_GetAmmoCountMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetAmmoCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::GetAmmoCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetAmmoCount");

	APwndWeapon_GetAmmoCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.GetAmmoCost
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::GetAmmoCost(float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.GetAmmoCost");

	APwndWeapon_GetAmmoCost_Params params;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.ForceMinimumReloadTime
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ForceMinimumReloadTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ForceMinimumReloadTime");

	APwndWeapon_ForceMinimumReloadTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ForceCurrentReloadTime
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ForceCurrentReloadTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ForceCurrentReloadTime");

	APwndWeapon_ForceCurrentReloadTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.Equip
// (Native, Public, BlueprintCallable)

void APwndWeapon::Equip()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.Equip");

	APwndWeapon_Equip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.CustomFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::CustomFire(float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.CustomFire");

	APwndWeapon_CustomFire_Params params;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ConsumeAmmo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::ConsumeAmmo(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ConsumeAmmo");

	APwndWeapon_ConsumeAmmo_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.ComputeLockonTargetLoc
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Act                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartTrace                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 AimX                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bUseClosest                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndWeapon::ComputeLockonTargetLoc(class AActor* Act, const struct FVector& StartTrace, const struct FVector& AimX, bool bUseClosest)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ComputeLockonTargetLoc");

	APwndWeapon_ComputeLockonTargetLoc_Params params;
	params.Act = Act;
	params.StartTrace = StartTrace;
	params.AimX = AimX;
	params.bUseClosest = bUseClosest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.ComputeLockonStrength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Act                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLockonToEnemies               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLockonToAllies                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLockonToCrawling              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLockonToCloak                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireLOS                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseLockonMin                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndWeapon::ComputeLockonStrength(class AActor* Act, bool bLockonToEnemies, bool bLockonToAllies, bool bLockonToCrawling, bool bLockonToCloak, bool bRequireLOS, bool bUseLockonMin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ComputeLockonStrength");

	APwndWeapon_ComputeLockonStrength_Params params;
	params.Act = Act;
	params.bLockonToEnemies = bLockonToEnemies;
	params.bLockonToAllies = bLockonToAllies;
	params.bLockonToCrawling = bLockonToCrawling;
	params.bLockonToCloak = bLockonToCloak;
	params.bRequireLOS = bRequireLOS;
	params.bUseLockonMin = bUseLockonMin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.ComputeBestLockonTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bLockonToEnemies               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLockonToAllies                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLockonToCrawling              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLockonToCloak                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireLOS                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseLockonMin                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* APwndWeapon::ComputeBestLockonTarget(bool bLockonToEnemies, bool bLockonToAllies, bool bLockonToCrawling, bool bLockonToCloak, bool bRequireLOS, bool bUseLockonMin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ComputeBestLockonTarget");

	APwndWeapon_ComputeBestLockonTarget_Params params;
	params.bLockonToEnemies = bLockonToEnemies;
	params.bLockonToAllies = bLockonToAllies;
	params.bLockonToCrawling = bLockonToCrawling;
	params.bLockonToCloak = bLockonToCloak;
	params.bRequireLOS = bRequireLOS;
	params.bUseLockonMin = bUseLockonMin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.ComputeAimInfo
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                 StartTrace                     (Parm, OutParm, IsPlainOldData)
// struct FRotator                AimRot                         (Parm, OutParm, IsPlainOldData)
// struct FVector                 SpawnLoc                       (Parm, OutParm, IsPlainOldData)
// struct FHitResult              Impact                         (Parm, OutParm, IsPlainOldData)
// bool                           bForceTrace                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreSpread                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ComputeAimInfo(bool bForceTrace, bool bIgnoreSpread, struct FVector* StartTrace, struct FRotator* AimRot, struct FVector* SpawnLoc, struct FHitResult* Impact)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ComputeAimInfo");

	APwndWeapon_ComputeAimInfo_Params params;
	params.bForceTrace = bForceTrace;
	params.bIgnoreSpread = bIgnoreSpread;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (StartTrace != nullptr)
		*StartTrace = params.StartTrace;
	if (AimRot != nullptr)
		*AimRot = params.AimRot;
	if (SpawnLoc != nullptr)
		*SpawnLoc = params.SpawnLoc;
	if (Impact != nullptr)
		*Impact = params.Impact;
}


// Function PWND.PwndWeapon.ClientStartReload
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ClientStartReload(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientStartReload");

	APwndWeapon_ClientStartReload_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ClientHandleInstantHitResponse
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                           bDidHit                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FString                 Reason                         (Parm, ZeroConstructor)

void APwndWeapon::ClientHandleInstantHitResponse(bool bDidHit, const struct FHitResult& Hit, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientHandleInstantHitResponse");

	APwndWeapon_ClientHandleInstantHitResponse_Params params;
	params.bDidHit = bDidHit;
	params.Hit = Hit;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ClientHandleArcHitResponse
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                           bDidHit                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FString                 Reason                         (Parm, ZeroConstructor)

void APwndWeapon::ClientHandleArcHitResponse(bool bDidHit, const struct FHitResult& Hit, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientHandleArcHitResponse");

	APwndWeapon_ClientHandleArcHitResponse_Params params;
	params.bDidHit = bDidHit;
	params.Hit = Hit;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ClientEndReload
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                           bAborted                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ClientEndReload(bool bAborted)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientEndReload");

	APwndWeapon_ClientEndReload_Params params;
	params.bAborted = bAborted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ClientClearDebugWeaponFire
// (Net, NetReliable, Native, Event, Public, NetClient)

void APwndWeapon::ClientClearDebugWeaponFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientClearDebugWeaponFire");

	APwndWeapon_ClientClearDebugWeaponFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ClientAdjustReloadTimerByPercent
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// float                          Pct                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ClientAdjustReloadTimerByPercent(float Pct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientAdjustReloadTimerByPercent");

	APwndWeapon_ClientAdjustReloadTimerByPercent_Params params;
	params.Pct = Pct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ClientAddLiveProjectile
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ClientAddLiveProjectile(class APwndProjectile* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientAddLiveProjectile");

	APwndWeapon_ClientAddLiveProjectile_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ClientAddDebugWeaponFire
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                 StartTrace                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                AimRot                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Start                          (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Extent                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          Spread                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitResult                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ClientAddDebugWeaponFire(const struct FVector& StartTrace, const struct FRotator& AimRot, const struct FVector& Start, const struct FVector& End, const struct FVector& Extent, float Spread, const struct FHitResult& HitResult, int Index, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ClientAddDebugWeaponFire");

	APwndWeapon_ClientAddDebugWeaponFire_Params params;
	params.StartTrace = StartTrace;
	params.AimRot = AimRot;
	params.Start = Start;
	params.End = End;
	params.Extent = Extent;
	params.Spread = Spread;
	params.HitResult = HitResult;
	params.Index = Index;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.BeamFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::BeamFire(float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.BeamFire");

	APwndWeapon_BeamFire_Params params;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ArcFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          ChargePct                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ArcFire(float ChargePct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ArcFire");

	APwndWeapon_ArcFire_Params params;
	params.ChargePct = ChargePct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.ApplyWeaponSkin
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPwndWeaponSkin*         Skin                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void APwndWeapon::ApplyWeaponSkin(class UPwndWeaponSkin* Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.ApplyWeaponSkin");

	APwndWeapon_ApplyWeaponSkin_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWeapon.AllowRocketJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::AllowRocketJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.AllowRocketJump");

	APwndWeapon_AllowRocketJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.AllowReloadTimerAdvance
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::AllowReloadTimerAdvance()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.AllowReloadTimerAdvance");

	APwndWeapon_AllowReloadTimerAdvance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.AllowReloadStart
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::AllowReloadStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.AllowReloadStart");

	APwndWeapon_AllowReloadStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.AllowFire
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndWeapon::AllowFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.AllowFire");

	APwndWeapon_AllowFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.AdjustAmmoCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::AdjustAmmoCount(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.AdjustAmmoCount");

	APwndWeapon_AdjustAmmoCount_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.AddSpread
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                BaseAim                        (Parm, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator APwndWeapon::AddSpread(const struct FRotator& BaseAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.AddSpread");

	APwndWeapon_AddSpread_Params params;
	params.BaseAim = BaseAim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWeapon.AddAmmoCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndWeapon::AddAmmoCount(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWeapon.AddAmmoCount");

	APwndWeapon_AddAmmoCount_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAbilityWeapon.OnUpgraded
// (Event, Protected, BlueprintEvent)

void APwndAbilityWeapon::OnUpgraded()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAbilityWeapon.OnUpgraded");

	APwndAbilityWeapon_OnUpgraded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAbilityWeapon.IsAbilityActive
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAbilityWeapon::IsAbilityActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAbilityWeapon.IsAbilityActive");

	APwndAbilityWeapon_IsAbilityActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAbilityWeapon.ClientUpgraded
// (Net, NetReliable, Native, Event, Protected, NetClient)

void APwndAbilityWeapon::ClientUpgraded()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAbilityWeapon.ClientUpgraded");

	APwndAbilityWeapon_ClientUpgraded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.StopSpecialMovement
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndAIController::StopSpecialMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StopSpecialMovement");

	APwndAIController_StopSpecialMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.StopFire
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::StopFire(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StopFire");

	APwndAIController_StopFire_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.StopCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::StopCarry(float ThrowPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StopCarry");

	APwndAIController_StopCarry_Params params;
	params.ThrowPower = ThrowPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.StopAllFire
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndAIController::StopAllFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StopAllFire");

	APwndAIController_StopAllFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.StartSpecialMovement
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Dir                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::StartSpecialMovement(const struct FVector& Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StartSpecialMovement");

	APwndAIController_StartSpecialMovement_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.StartRevive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::StartRevive(class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StartRevive");

	APwndAIController_StartRevive_Params params;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.StartPwnage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::StartPwnage(class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StartPwnage");

	APwndAIController_StartPwnage_Params params;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.StartFire
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::StartFire(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StartFire");

	APwndAIController_StartFire_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.StartCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::StartCarry(class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.StartCarry");

	APwndAIController_StartCarry_Params params;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.SetTeam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndTeamInfo*           Team                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::SetTeam(class APwndTeamInfo* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.SetTeam");

	APwndAIController_SetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.SetOwnerController
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Ctrl                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::SetOwnerController(class AController* Ctrl)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.SetOwnerController");

	APwndAIController_SetOwnerController_Params params;
	params.Ctrl = Ctrl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.SetMonkeyBrainEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::SetMonkeyBrainEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.SetMonkeyBrainEnabled");

	APwndAIController_SetMonkeyBrainEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.SetInstigatorController
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Ctrl                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::SetInstigatorController(class AController* Ctrl)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.SetInstigatorController");

	APwndAIController_SetInstigatorController_Params params;
	params.Ctrl = Ctrl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.SetDifficulty
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::SetDifficulty(TEnumAsByte<EeBotDifficulty> NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.SetDifficulty");

	APwndAIController_SetDifficulty_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.SetAIName
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 AIName                         (Parm, ZeroConstructor)

void APwndAIController::SetAIName(const struct FString& AIName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.SetAIName");

	APwndAIController_SetAIName_Params params;
	params.AIName = AIName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnReviveStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnReviveStarted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnReviveStarted");

	APwndAIController_OnReviveStarted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnReviveCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnReviveCompleted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnReviveCompleted");

	APwndAIController_OnReviveCompleted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnReviveCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDenied                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          DenyerPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnReviveCancelled(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn, bool bDenied, class APwndCharacter* DenyerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnReviveCancelled");

	APwndAIController_OnReviveCancelled_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;
	params.bDenied = bDenied;
	params.DenyerPawn = DenyerPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnPwnageStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnPwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnPwnageStarted");

	APwndAIController_OnPwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnPwnageScored
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnPwnageScored(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnPwnageScored");

	APwndAIController_OnPwnageScored_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnPwnageCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnPwnageCancelled(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, bool bSaved, class APwndCharacter* SaverPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnPwnageCancelled");

	APwndAIController_OnPwnageCancelled_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.bSaved = bSaved;
	params.SaverPawn = SaverPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnPreReviveStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnPreReviveStarted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnPreReviveStarted");

	APwndAIController_OnPreReviveStarted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnPrePwnageStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnPrePwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnPrePwnageStarted");

	APwndAIController_OnPrePwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnPawnCompletedActionStateUpdated
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnActionState> State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndCharacterActionCompletion ActionCompleted                (ConstParm, Parm, OutParm, ReferenceParm)

void APwndAIController::OnPawnCompletedActionStateUpdated(class APwndCharacter* Char, TEnumAsByte<EePawnActionState> State, bool bSuccess, const struct FPwndCharacterActionCompletion& ActionCompleted)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnPawnCompletedActionStateUpdated");

	APwndAIController_OnPawnCompletedActionStateUpdated_Params params;
	params.Char = Char;
	params.State = State;
	params.bSuccess = bSuccess;
	params.ActionCompleted = ActionCompleted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnPawnActionStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnActionState> OldState                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnPawnActionStateUpdated(class APwndCharacter* Char, TEnumAsByte<EePawnActionState> NewState, TEnumAsByte<EePawnActionState> OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnPawnActionStateUpdated");

	APwndAIController_OnPawnActionStateUpdated_Params params;
	params.Char = Char;
	params.NewState = NewState;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnHumiliationStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnHumiliationStarted(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnHumiliationStarted");

	APwndAIController_OnHumiliationStarted_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnHumiliationCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnHumiliationCompleted(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnHumiliationCompleted");

	APwndAIController_OnHumiliationCompleted_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnHumiliationCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnHumiliationCancelled(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnHumiliationCancelled");

	APwndAIController_OnHumiliationCancelled_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnCarryStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnCarryStarted(class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnCarryStarted");

	APwndAIController_OnCarryStarted_Params params;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.OnCarryCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::OnCarryCancelled(class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn, bool bSaved, float ThrowPower, class APwndCharacter* SaverPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.OnCarryCancelled");

	APwndAIController_OnCarryCancelled_Params params;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;
	params.bSaved = bSaved;
	params.ThrowPower = ThrowPower;
	params.SaverPawn = SaverPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.MonkeyBrainEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::MonkeyBrainEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.MonkeyBrainEnabled");

	APwndAIController_MonkeyBrainEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.IsWeaponReadyForFiring
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::IsWeaponReadyForFiring(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.IsWeaponReadyForFiring");

	APwndAIController_IsWeaponReadyForFiring_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.IsUsingMonkeyBrain
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::IsUsingMonkeyBrain()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.IsUsingMonkeyBrain");

	APwndAIController_IsUsingMonkeyBrain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.GetWeapon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* APwndAIController::GetWeapon(TEnumAsByte<EePawnWeapon> WeaponType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.GetWeapon");

	APwndAIController_GetWeapon_Params params;
	params.WeaponType = WeaponType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndAIController::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.GetServerTimeStamp");

	APwndAIController_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.GetRocketJumpDistances
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                  OutDistances                   (Parm, OutParm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndAIController::GetRocketJumpDistances(TArray<float>* OutDistances)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.GetRocketJumpDistances");

	APwndAIController_GetRocketJumpDistances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDistances != nullptr)
		*OutDistances = params.OutDistances;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.GetOwnerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* APwndAIController::GetOwnerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.GetOwnerController");

	APwndAIController_GetOwnerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.GetInstigatorController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* APwndAIController::GetInstigatorController()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.GetInstigatorController");

	APwndAIController_GetInstigatorController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.GetChar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndAIController::GetChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.GetChar");

	APwndAIController_GetChar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.FireSingleShot
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::FireSingleShot(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.FireSingleShot");

	APwndAIController_FireSingleShot_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.FindBestReviveTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndAIController::FindBestReviveTarget(class APwndCharacter* Preferred, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.FindBestReviveTarget");

	APwndAIController_FindBestReviveTarget_Params params;
	params.Preferred = Preferred;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.FindBestPwnTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRemote                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndAIController::FindBestPwnTarget(class APwndCharacter* Preferred, bool bRemote, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.FindBestPwnTarget");

	APwndAIController_FindBestPwnTarget_Params params;
	params.Preferred = Preferred;
	params.bRemote = bRemote;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.FindBestHumiliationTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndAIController::FindBestHumiliationTarget(class APwndCharacter* Preferred, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.FindBestHumiliationTarget");

	APwndAIController_FindBestHumiliationTarget_Params params;
	params.Preferred = Preferred;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.FindBestCarryTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndAIController::FindBestCarryTarget(class APwndCharacter* Preferred, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.FindBestCarryTarget");

	APwndAIController_FindBestCarryTarget_Params params;
	params.Preferred = Preferred;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.FindBestAttackTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* APwndAIController::FindBestAttackTarget(class AActor* Preferred, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.FindBestAttackTarget");

	APwndAIController_FindBestAttackTarget_Params params;
	params.Preferred = Preferred;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.ExecuteRocketJump
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Dir                            (Parm, IsPlainOldData)
// bool                           bVertical                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::ExecuteRocketJump(const struct FVector& Dir, bool bVertical)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.ExecuteRocketJump");

	APwndAIController_ExecuteRocketJump_Params params;
	params.Dir = Dir;
	params.bVertical = bVertical;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.ComputeBestRocketJumpDir
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 OutDir                         (Parm, OutParm, IsPlainOldData)
// struct FVector                 DesiredDir                     (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::ComputeBestRocketJumpDir(const struct FVector& DesiredDir, struct FVector* OutDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.ComputeBestRocketJumpDir");

	APwndAIController_ComputeBestRocketJumpDir_Params params;
	params.DesiredDir = DesiredDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDir != nullptr)
		*OutDir = params.OutDir;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.CanRocketJump
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::CanRocketJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.CanRocketJump");

	APwndAIController_CanRocketJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.CanExecuteRocketJump
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Dir                            (Parm, IsPlainOldData)
// float                          UnitFireDist                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::CanExecuteRocketJump(const struct FVector& Dir, float* UnitFireDist)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.CanExecuteRocketJump");

	APwndAIController_CanExecuteRocketJump_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (UnitFireDist != nullptr)
		*UnitFireDist = params.UnitFireDist;

	return params.ReturnValue;
}


// Function PWND.PwndAIController.CancelActions
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bCancelTargetActions           (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIController::CancelActions(bool bCancelTargetActions)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.CancelActions");

	APwndAIController_CancelActions_Params params;
	params.bCancelTargetActions = bCancelTargetActions;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIController.AllowFiring
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAIController::AllowFiring(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIController.AllowFiring");

	APwndAIController_AllowFiring_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIControllerPlayer.ForceRespawn
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Timer                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStartupSpawn                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndAIControllerPlayer::ForceRespawn(float Delay, float Timer, bool bStartupSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIControllerPlayer.ForceRespawn");

	APwndAIControllerPlayer_ForceRespawn_Params params;
	params.Delay = Delay;
	params.Timer = Timer;
	params.bStartupSpawn = bStartupSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.TickBrain
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrain::TickBrain(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.TickBrain");

	UPwndAIMonkeyBrain_TickBrain_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.StopSpecialMovement
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndAIMonkeyBrain::StopSpecialMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StopSpecialMovement");

	UPwndAIMonkeyBrain_StopSpecialMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.StopMovement
// (Native, Public, BlueprintCallable)

void UPwndAIMonkeyBrain::StopMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StopMovement");

	UPwndAIMonkeyBrain_StopMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.StopFire
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrain::StopFire(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StopFire");

	UPwndAIMonkeyBrain_StopFire_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.StopCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::StopCarry(float ThrowPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StopCarry");

	UPwndAIMonkeyBrain_StopCarry_Params params;
	params.ThrowPower = ThrowPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.StopAllFire
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndAIMonkeyBrain::StopAllFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StopAllFire");

	UPwndAIMonkeyBrain_StopAllFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.StartSpecialMovement
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Dir                            (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::StartSpecialMovement(const struct FVector& Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StartSpecialMovement");

	UPwndAIMonkeyBrain_StartSpecialMovement_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.StartRevive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::StartRevive(class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StartRevive");

	UPwndAIMonkeyBrain_StartRevive_Params params;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.StartPwnage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::StartPwnage(class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StartPwnage");

	UPwndAIMonkeyBrain_StartPwnage_Params params;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.StartFire
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::StartFire(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StartFire");

	UPwndAIMonkeyBrain_StartFire_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.StartCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::StartCarry(class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.StartCarry");

	UPwndAIMonkeyBrain_StartCarry_Params params;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.SpecialMovementRequireHold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::SpecialMovementRequireHold()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.SpecialMovementRequireHold");

	UPwndAIMonkeyBrain_SpecialMovementRequireHold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.SetPawn
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   InPawn                         (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrain::SetPawn(class APawn* InPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.SetPawn");

	UPwndAIMonkeyBrain_SetPawn_Params params;
	params.InPawn = InPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.SetMovementAcceleration
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Input                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndAIMonkeyBrain::SetMovementAcceleration(const struct FVector& Input)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.SetMovementAcceleration");

	UPwndAIMonkeyBrain_SetMovementAcceleration_Params params;
	params.Input = Input;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.SetDifficulty
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrain::SetDifficulty(TEnumAsByte<EeBotDifficulty> NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.SetDifficulty");

	UPwndAIMonkeyBrain_SetDifficulty_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.RequestRepath
// (Final, Native, Public, BlueprintCallable)

void UPwndAIMonkeyBrain::RequestRepath()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.RequestRepath");

	UPwndAIMonkeyBrain_RequestRepath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.MoveToLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Dest                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          AcceptanceRadius               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnOverlap                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUsePathfinding                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bProjectDestinationToNavigation (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCanStrafe                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  FilterClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowPartialPath              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseDirectOnFailure            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPathFollowingRequestResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EPathFollowingRequestResult> UPwndAIMonkeyBrain::MoveToLocation(const struct FVector& Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, class UClass* FilterClass, bool bAllowPartialPath, bool bUseDirectOnFailure)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.MoveToLocation");

	UPwndAIMonkeyBrain_MoveToLocation_Params params;
	params.Dest = Dest;
	params.AcceptanceRadius = AcceptanceRadius;
	params.bStopOnOverlap = bStopOnOverlap;
	params.bUsePathfinding = bUsePathfinding;
	params.bProjectDestinationToNavigation = bProjectDestinationToNavigation;
	params.bCanStrafe = bCanStrafe;
	params.FilterClass = FilterClass;
	params.bAllowPartialPath = bAllowPartialPath;
	params.bUseDirectOnFailure = bUseDirectOnFailure;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.MoveToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Goal                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          AcceptanceRadius               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnOverlap                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUsePathfinding                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCanStrafe                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  FilterClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowPartialPath              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseDirectOnFailure            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPathFollowingRequestResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EPathFollowingRequestResult> UPwndAIMonkeyBrain::MoveToActor(class AActor* Goal, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bCanStrafe, class UClass* FilterClass, bool bAllowPartialPath, bool bUseDirectOnFailure)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.MoveToActor");

	UPwndAIMonkeyBrain_MoveToActor_Params params;
	params.Goal = Goal;
	params.AcceptanceRadius = AcceptanceRadius;
	params.bStopOnOverlap = bStopOnOverlap;
	params.bUsePathfinding = bUsePathfinding;
	params.bCanStrafe = bCanStrafe;
	params.FilterClass = FilterClass;
	params.bAllowPartialPath = bAllowPartialPath;
	params.bUseDirectOnFailure = bUseDirectOnFailure;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsWeaponReadyForFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsWeaponReadyForFiring(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsWeaponReadyForFiring");

	UPwndAIMonkeyBrain_IsWeaponReadyForFiring_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsSpecialMovementTwoStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bFirstStage                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsSpecialMovementTwoStage(bool bFirstStage)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsSpecialMovementTwoStage");

	UPwndAIMonkeyBrain_IsSpecialMovementTwoStage_Params params;
	params.bFirstStage = bFirstStage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsSpecialMovementReady
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            AvailableCount                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            MaxCount                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          AvailableCapacity              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          MaxCapacity                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsSpecialMovementReady(int* AvailableCount, int* MaxCount, float* AvailableCapacity, float* MaxCapacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsSpecialMovementReady");

	UPwndAIMonkeyBrain_IsSpecialMovementReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AvailableCount != nullptr)
		*AvailableCount = params.AvailableCount;
	if (MaxCount != nullptr)
		*MaxCount = params.MaxCount;
	if (AvailableCapacity != nullptr)
		*AvailableCapacity = params.AvailableCapacity;
	if (MaxCapacity != nullptr)
		*MaxCapacity = params.MaxCapacity;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsSpecialMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsSpecialMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsSpecialMovement");

	UPwndAIMonkeyBrain_IsSpecialMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsPlayer");

	UPwndAIMonkeyBrain_IsPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsMoving");

	UPwndAIMonkeyBrain_IsMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsAI()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsAI");

	UPwndAIMonkeyBrain_IsAI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.IsAbilityActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bPrimary                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::IsAbilityActive(bool bPrimary)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.IsAbilityActive");

	UPwndAIMonkeyBrain_IsAbilityActive_Params params;
	params.bPrimary = bPrimary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.InitBrain
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrain::InitBrain(TEnumAsByte<EeBotDifficulty> NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.InitBrain");

	UPwndAIMonkeyBrain_InitBrain_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.GetWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* UPwndAIMonkeyBrain::GetWeapon(TEnumAsByte<EePawnWeapon> WeaponType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetWeapon");

	UPwndAIMonkeyBrain_GetWeapon_Params params;
	params.WeaponType = WeaponType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetWanderDestinationFromLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          TestDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  RefActor                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndAIMonkeyBrain::STATIC_GetWanderDestinationFromLocation(const struct FVector& Location, float TestDistance, class AActor* RefActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetWanderDestinationFromLocation");

	UPwndAIMonkeyBrain_GetWanderDestinationFromLocation_Params params;
	params.Location = Location;
	params.TestDistance = TestDistance;
	params.RefActor = RefActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetWanderDestinationFromActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Act                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          TestDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndAIMonkeyBrain::STATIC_GetWanderDestinationFromActor(class AActor* Act, float TestDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetWanderDestinationFromActor");

	UPwndAIMonkeyBrain_GetWanderDestinationFromActor_Params params;
	params.Act = Act;
	params.TestDistance = TestDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetWanderDestination
// (Final, Native, Public, HasDefaults, BlueprintCallable, Const)
// Parameters:
// float                          TestDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndAIMonkeyBrain::GetWanderDestination(float TestDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetWanderDestination");

	UPwndAIMonkeyBrain_GetWanderDestination_Params params;
	params.TestDistance = TestDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetViewPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Loc                            (Parm, OutParm, IsPlainOldData)
// struct FRotator                Rot                            (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::GetViewPoint(struct FVector* Loc, struct FRotator* Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetViewPoint");

	UPwndAIMonkeyBrain_GetViewPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Loc != nullptr)
		*Loc = params.Loc;
	if (Rot != nullptr)
		*Rot = params.Rot;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetSpecialMovementTarget
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 TargetVelocity                 (Parm, OutParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndAIMonkeyBrain::GetSpecialMovementTarget(struct FVector* TargetVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetSpecialMovementTarget");

	UPwndAIMonkeyBrain_GetSpecialMovementTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TargetVelocity != nullptr)
		*TargetVelocity = params.TargetVelocity;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrain::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetServerTimeStamp");

	UPwndAIMonkeyBrain_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetRocketJumpDistances
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                  OutDistances                   (Parm, OutParm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrain::GetRocketJumpDistances(TArray<float>* OutDistances)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetRocketJumpDistances");

	UPwndAIMonkeyBrain_GetRocketJumpDistances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDistances != nullptr)
		*OutDistances = params.OutDistances;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetPathDistanceTo
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Distance                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  FilterClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::GetPathDistanceTo(const struct FVector& End, class UClass* FilterClass, float* Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetPathDistanceTo");

	UPwndAIMonkeyBrain_GetPathDistanceTo_Params params;
	params.End = End;
	params.FilterClass = FilterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Distance != nullptr)
		*Distance = params.Distance;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetPathDistance
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Distance                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  FilterClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::GetPathDistance(const struct FVector& Start, const struct FVector& End, class UClass* FilterClass, float* Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetPathDistance");

	UPwndAIMonkeyBrain_GetPathDistance_Params params;
	params.Start = Start;
	params.End = End;
	params.FilterClass = FilterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Distance != nullptr)
		*Distance = params.Distance;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetFireRJDirEnum
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Dir                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bTransform                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeRJDir>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeRJDir> UPwndAIMonkeyBrain::GetFireRJDirEnum(const struct FVector& Dir, bool bTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetFireRJDirEnum");

	UPwndAIMonkeyBrain_GetFireRJDirEnum_Params params;
	params.Dir = Dir;
	params.bTransform = bTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetFireRJDir
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeRJDir>           Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTransform                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndAIMonkeyBrain::GetFireRJDir(TEnumAsByte<EeRJDir> Dir, bool bTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetFireRJDir");

	UPwndAIMonkeyBrain_GetFireRJDir_Params params;
	params.Dir = Dir;
	params.bTransform = bTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeBotDifficulty> UPwndAIMonkeyBrain::GetDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetDifficulty");

	UPwndAIMonkeyBrain_GetDifficulty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* UPwndAIMonkeyBrain::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetController");

	UPwndAIMonkeyBrain_GetController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetChar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* UPwndAIMonkeyBrain::GetChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetChar");

	UPwndAIMonkeyBrain_GetChar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetAimOffsetRot
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndAIMonkeyBrain::GetAimOffsetRot()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetAimOffsetRot");

	UPwndAIMonkeyBrain_GetAimOffsetRot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.GetAimOffsetDeg
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrain::GetAimOffsetDeg()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.GetAimOffsetDeg");

	UPwndAIMonkeyBrain_GetAimOffsetDeg_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.FireSingleShot
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::FireSingleShot(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.FireSingleShot");

	UPwndAIMonkeyBrain_FireSingleShot_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.ExecuteRocketJump
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           bVertical                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Dir                            (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::ExecuteRocketJump(bool bVertical, const struct FVector& Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.ExecuteRocketJump");

	UPwndAIMonkeyBrain_ExecuteRocketJump_Params params;
	params.bVertical = bVertical;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.DrawHUD
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ViewLocation                   (Parm, IsPlainOldData)
// struct FRotator                ViewRotation                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasOrigin                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasSize                     (Parm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UPwndAIMonkeyBrain::DrawHUD(class APwndHUD* HUD, class UCanvas* Canvas, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, const struct FVector2D& CanvasOrigin, const struct FVector2D& CanvasSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.DrawHUD");

	UPwndAIMonkeyBrain_DrawHUD_Params params;
	params.HUD = HUD;
	params.Canvas = Canvas;
	params.ViewLocation = ViewLocation;
	params.ViewRotation = ViewRotation;
	params.CanvasOrigin = CanvasOrigin;
	params.CanvasSize = CanvasSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.DestroyBrain
// (Native, Event, Public, BlueprintEvent)

void UPwndAIMonkeyBrain::DestroyBrain()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.DestroyBrain");

	UPwndAIMonkeyBrain_DestroyBrain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.ComputeBestRocketJumpDirFromDistances
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                  UnitDistances                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 OutDir                         (Parm, OutParm, IsPlainOldData)
// struct FVector                 DesiredDir                     (Parm, IsPlainOldData)
// TEnumAsByte<EeRJDir>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeRJDir> UPwndAIMonkeyBrain::ComputeBestRocketJumpDirFromDistances(TArray<float> UnitDistances, const struct FVector& DesiredDir, struct FVector* OutDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.ComputeBestRocketJumpDirFromDistances");

	UPwndAIMonkeyBrain_ComputeBestRocketJumpDirFromDistances_Params params;
	params.UnitDistances = UnitDistances;
	params.DesiredDir = DesiredDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDir != nullptr)
		*OutDir = params.OutDir;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.ComputeBestRocketJumpDir
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 OutDir                         (Parm, OutParm, IsPlainOldData)
// struct FVector                 DesiredDir                     (Parm, IsPlainOldData)
// TEnumAsByte<EeRJDir>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeRJDir> UPwndAIMonkeyBrain::ComputeBestRocketJumpDir(const struct FVector& DesiredDir, struct FVector* OutDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.ComputeBestRocketJumpDir");

	UPwndAIMonkeyBrain_ComputeBestRocketJumpDir_Params params;
	params.DesiredDir = DesiredDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDir != nullptr)
		*OutDir = params.OutDir;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.CanRocketJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::CanRocketJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.CanRocketJump");

	UPwndAIMonkeyBrain_CanRocketJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.AllowFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrain::AllowFiring(TEnumAsByte<EePawnWeapon> WeaponType, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.AllowFiring");

	UPwndAIMonkeyBrain_AllowFiring_Params params;
	params.WeaponType = WeaponType;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrain.AimTowardsPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Point                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndAIMonkeyBrain::AimTowardsPoint(const struct FVector& Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.AimTowardsPoint");

	UPwndAIMonkeyBrain_AimTowardsPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrain.AimTowardsDir
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Dir                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndAIMonkeyBrain::AimTowardsDir(const struct FVector& Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrain.AimTowardsDir");

	UPwndAIMonkeyBrain_AimTowardsDir_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer.SetMovementTargetLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InLocation                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer::SetMovementTargetLocation(const struct FVector& InLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.SetMovementTargetLocation");

	UPwndAIMonkeyBrainPlayer_SetMovementTargetLocation_Params params;
	params.InLocation = InLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer.SetMovementTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  inTarget                       (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer::SetMovementTargetActor(class AActor* inTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.SetMovementTargetActor");

	UPwndAIMonkeyBrainPlayer_SetMovementTargetActor_Params params;
	params.inTarget = inTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer.MoveToTarget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndAIMonkeyBrain_MovementTarget Target                         (ConstParm, Parm, OutParm, ReferenceParm)
// float                          AcceptanceRadius               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnOverlap                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUsePathfinding                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bProjectDestinationToNavigation (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCanStrafe                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  FilterClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowPartialPath              (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPathFollowingRequestResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EPathFollowingRequestResult> UPwndAIMonkeyBrainPlayer::MoveToTarget(const struct FPwndAIMonkeyBrain_MovementTarget& Target, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, class UClass* FilterClass, bool bAllowPartialPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.MoveToTarget");

	UPwndAIMonkeyBrainPlayer_MoveToTarget_Params params;
	params.Target = Target;
	params.AcceptanceRadius = AcceptanceRadius;
	params.bStopOnOverlap = bStopOnOverlap;
	params.bUsePathfinding = bUsePathfinding;
	params.bProjectDestinationToNavigation = bProjectDestinationToNavigation;
	params.bCanStrafe = bCanStrafe;
	params.FilterClass = FilterClass;
	params.bAllowPartialPath = bAllowPartialPath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction PWND.PwndAIMonkeyBrainPlayer.MonkeyBrainTargetPriorityDynamic__DelegateSignature
// (Public, Delegate, HasOutParms)
// Parameters:
// struct FPwndAIMonkeyBrain_TargetEntry Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPwndAIMonkeyBrain_TargetList List                           (ConstParm, Parm, OutParm, ReferenceParm)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Priority                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer::MonkeyBrainTargetPriorityDynamic__DelegateSignature(const struct FPwndAIMonkeyBrain_TargetEntry& Entry, const struct FPwndAIMonkeyBrain_TargetList& List, int Index, float* Priority)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction PWND.PwndAIMonkeyBrainPlayer.MonkeyBrainTargetPriorityDynamic__DelegateSignature");

	UPwndAIMonkeyBrainPlayer_MonkeyBrainTargetPriorityDynamic__DelegateSignature_Params params;
	params.Entry = Entry;
	params.List = List;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Priority != nullptr)
		*Priority = params.Priority;
}


// Function PWND.PwndAIMonkeyBrainPlayer.IsStuck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          MinStuckTime                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::IsStuck(float MinStuckTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.IsStuck");

	UPwndAIMonkeyBrainPlayer_IsStuck_Params params;
	params.MinStuckTime = MinStuckTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.GetTargetsInStateByFlags
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FPwndAIMonkeyBrain_TargetEntry> OutTargets                     (Parm, OutParm, ZeroConstructor)
// int                            TargetStateFlags               (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeTeamDesc>        TargetTeam                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxTimeSinceLostLOS            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrainPlayer::GetTargetsInStateByFlags(int TargetStateFlags, TEnumAsByte<EeTeamDesc> TargetTeam, float MaxTimeSinceLostLOS, TArray<struct FPwndAIMonkeyBrain_TargetEntry>* OutTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.GetTargetsInStateByFlags");

	UPwndAIMonkeyBrainPlayer_GetTargetsInStateByFlags_Params params;
	params.TargetStateFlags = TargetStateFlags;
	params.TargetTeam = TargetTeam;
	params.MaxTimeSinceLostLOS = MaxTimeSinceLostLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTargets != nullptr)
		*OutTargets = params.OutTargets;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.GetTargetsInState
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FPwndAIMonkeyBrain_TargetEntry> OutTargets                     (Parm, OutParm, ZeroConstructor)
// TEnumAsByte<EePawnActionState> TargetState                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeTeamDesc>        TargetTeam                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxTimeSinceLostLOS            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrainPlayer::GetTargetsInState(TEnumAsByte<EePawnActionState> TargetState, TEnumAsByte<EeTeamDesc> TargetTeam, float MaxTimeSinceLostLOS, TArray<struct FPwndAIMonkeyBrain_TargetEntry>* OutTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.GetTargetsInState");

	UPwndAIMonkeyBrainPlayer_GetTargetsInState_Params params;
	params.TargetState = TargetState;
	params.TargetTeam = TargetTeam;
	params.MaxTimeSinceLostLOS = MaxTimeSinceLostLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTargets != nullptr)
		*OutTargets = params.OutTargets;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.GetTargetsByDelegate
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FPwndAIMonkeyBrain_TargetEntry> OutTargets                     (Parm, OutParm, ZeroConstructor)
// struct FScriptDelegate         PriorityDelegate               (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrainPlayer::GetTargetsByDelegate(const struct FScriptDelegate& PriorityDelegate, TArray<struct FPwndAIMonkeyBrain_TargetEntry>* OutTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.GetTargetsByDelegate");

	UPwndAIMonkeyBrainPlayer_GetTargetsByDelegate_Params params;
	params.PriorityDelegate = PriorityDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTargets != nullptr)
		*OutTargets = params.OutTargets;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.GetTargets
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FPwndAIMonkeyBrain_TargetEntry> OutTargets                     (Parm, OutParm, ZeroConstructor)
// TEnumAsByte<EeTeamDesc>        TargetTeam                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxTimeSinceLostLOS            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrainPlayer::GetTargets(TEnumAsByte<EeTeamDesc> TargetTeam, float MaxTimeSinceLostLOS, TArray<struct FPwndAIMonkeyBrain_TargetEntry>* OutTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.GetTargets");

	UPwndAIMonkeyBrainPlayer_GetTargets_Params params;
	params.TargetTeam = TargetTeam;
	params.MaxTimeSinceLostLOS = MaxTimeSinceLostLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTargets != nullptr)
		*OutTargets = params.OutTargets;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.GetNumTargetsInStateByFlags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            TargetStateFlags               (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeTeamDesc>        TargetTeam                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxTimeSinceLostLOS            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrainPlayer::GetNumTargetsInStateByFlags(int TargetStateFlags, TEnumAsByte<EeTeamDesc> TargetTeam, float MaxTimeSinceLostLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.GetNumTargetsInStateByFlags");

	UPwndAIMonkeyBrainPlayer_GetNumTargetsInStateByFlags_Params params;
	params.TargetStateFlags = TargetStateFlags;
	params.TargetTeam = TargetTeam;
	params.MaxTimeSinceLostLOS = MaxTimeSinceLostLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.GetNumTargetsInState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnActionState> TargetState                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeTeamDesc>        TargetTeam                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxTimeSinceLostLOS            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrainPlayer::GetNumTargetsInState(TEnumAsByte<EePawnActionState> TargetState, TEnumAsByte<EeTeamDesc> TargetTeam, float MaxTimeSinceLostLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.GetNumTargetsInState");

	UPwndAIMonkeyBrainPlayer_GetNumTargetsInState_Params params;
	params.TargetState = TargetState;
	params.TargetTeam = TargetTeam;
	params.MaxTimeSinceLostLOS = MaxTimeSinceLostLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.GetNumTargets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeTeamDesc>        Team                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxTimeSinceLostLOS            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAIMonkeyBrainPlayer::GetNumTargets(TEnumAsByte<EeTeamDesc> Team, float MaxTimeSinceLostLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.GetNumTargets");

	UPwndAIMonkeyBrainPlayer_GetNumTargets_Params params;
	params.Team = Team;
	params.MaxTimeSinceLostLOS = MaxTimeSinceLostLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.CheckForShieldInLOS
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// TEnumAsByte<EeTeamDesc>        Team                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::CheckForShieldInLOS(const struct FVector& End, TEnumAsByte<EeTeamDesc> Team, struct FHitResult* OutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.CheckForShieldInLOS");

	UPwndAIMonkeyBrainPlayer_CheckForShieldInLOS_Params params;
	params.End = End;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.CheckForShield
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// TEnumAsByte<EeTeamDesc>        Team                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::CheckForShield(const struct FVector& Start, const struct FVector& End, TEnumAsByte<EeTeamDesc> Team, struct FHitResult* OutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.CheckForShield");

	UPwndAIMonkeyBrainPlayer_CheckForShield_Params params;
	params.Start = Start;
	params.End = End;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.CheckForCeiling
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::CheckForCeiling(float Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.CheckForCeiling");

	UPwndAIMonkeyBrainPlayer_CheckForCeiling_Params params;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.AllowWander
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::AllowWander()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.AllowWander");

	UPwndAIMonkeyBrainPlayer_AllowWander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.AllowSpecialMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::AllowSpecialMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.AllowSpecialMovement");

	UPwndAIMonkeyBrainPlayer_AllowSpecialMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.AllowRocketJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::AllowRocketJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.AllowRocketJump");

	UPwndAIMonkeyBrainPlayer_AllowRocketJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.AllowRevive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::AllowRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.AllowRevive");

	UPwndAIMonkeyBrainPlayer_AllowRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.AllowPwn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::AllowPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.AllowPwn");

	UPwndAIMonkeyBrainPlayer_AllowPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.AllowCarry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::AllowCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.AllowCarry");

	UPwndAIMonkeyBrainPlayer_AllowCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer.AllowAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer::AllowAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer.AllowAttack");

	UPwndAIMonkeyBrainPlayer_AllowAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.UpdateWeapons
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_State::UpdateWeapons(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.UpdateWeapons");

	UPwndAIMonkeyBrainPlayer_State_UpdateWeapons_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.UpdateMovement
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_State::UpdateMovement(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.UpdateMovement");

	UPwndAIMonkeyBrainPlayer_State_UpdateMovement_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.UpdateAiming
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          inOutAimSpringK                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          inOutAimSpringDamp             (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          inOutAimSpringMaxVel           (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           inOutbAllowOvershoot           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_State::UpdateAiming(float DeltaSeconds, float* inOutAimSpringK, float* inOutAimSpringDamp, float* inOutAimSpringMaxVel, bool* inOutbAllowOvershoot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.UpdateAiming");

	UPwndAIMonkeyBrainPlayer_State_UpdateAiming_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (inOutAimSpringK != nullptr)
		*inOutAimSpringK = params.inOutAimSpringK;
	if (inOutAimSpringDamp != nullptr)
		*inOutAimSpringDamp = params.inOutAimSpringDamp;
	if (inOutAimSpringMaxVel != nullptr)
		*inOutAimSpringMaxVel = params.inOutAimSpringMaxVel;
	if (inOutbAllowOvershoot != nullptr)
		*inOutbAllowOvershoot = params.inOutbAllowOvershoot;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.TimeSinceDeactivation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::TimeSinceDeactivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.TimeSinceDeactivation");

	UPwndAIMonkeyBrainPlayer_State_TimeSinceDeactivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.TimeSinceActivation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::TimeSinceActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.TimeSinceActivation");

	UPwndAIMonkeyBrainPlayer_State_TimeSinceActivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.TickState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer_State::TickState(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.TickState");

	UPwndAIMonkeyBrainPlayer_State_TickState_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.IsActiveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_State::IsActiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.IsActiveState");

	UPwndAIMonkeyBrainPlayer_State_IsActiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.InitState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPwndAIMonkeyBrainPlayer* NewOwner                       (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer_State::InitState(class UPwndAIMonkeyBrainPlayer* NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.InitState");

	UPwndAIMonkeyBrainPlayer_State_InitState_Params params;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetTargetPriority
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndAIMonkeyBrain_TargetEntry inTarget                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPwndAIMonkeyBrain_TargetList inTargetList                   (ConstParm, Parm, OutParm, ReferenceParm)
// int                            inTargetIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::GetTargetPriority(const struct FPwndAIMonkeyBrain_TargetEntry& inTarget, const struct FPwndAIMonkeyBrain_TargetList& inTargetList, int inTargetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetTargetPriority");

	UPwndAIMonkeyBrainPlayer_State_GetTargetPriority_Params params;
	params.inTarget = inTarget;
	params.inTargetList = inTargetList;
	params.inTargetIndex = inTargetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetServerTimeStamp");

	UPwndAIMonkeyBrainPlayer_State_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetSecondaryTargetPriority
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndAIMonkeyBrain_TargetEntry inTarget                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPwndAIMonkeyBrain_TargetList inTargetList                   (ConstParm, Parm, OutParm, ReferenceParm)
// int                            inTargetIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::GetSecondaryTargetPriority(const struct FPwndAIMonkeyBrain_TargetEntry& inTarget, const struct FPwndAIMonkeyBrain_TargetList& inTargetList, int inTargetIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetSecondaryTargetPriority");

	UPwndAIMonkeyBrainPlayer_State_GetSecondaryTargetPriority_Params params;
	params.inTarget = inTarget;
	params.inTargetList = inTargetList;
	params.inTargetIndex = inTargetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::GetPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetPriority");

	UPwndAIMonkeyBrainPlayer_State_GetPriority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetMonkeyBrainAndChar
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndAIMonkeyBrainPlayer* MBrain                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Char                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_State::GetMonkeyBrainAndChar(class UPwndAIMonkeyBrainPlayer** MBrain, class APwndCharacter** Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetMonkeyBrainAndChar");

	UPwndAIMonkeyBrainPlayer_State_GetMonkeyBrainAndChar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MBrain != nullptr)
		*MBrain = params.MBrain;
	if (Char != nullptr)
		*Char = params.Char;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetMonkeyBrain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndAIMonkeyBrainPlayer* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndAIMonkeyBrainPlayer* UPwndAIMonkeyBrainPlayer_State::GetMonkeyBrain()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetMonkeyBrain");

	UPwndAIMonkeyBrainPlayer_State_GetMonkeyBrain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeBotDifficulty> UPwndAIMonkeyBrainPlayer_State::GetDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetDifficulty");

	UPwndAIMonkeyBrainPlayer_State_GetDifficulty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* UPwndAIMonkeyBrainPlayer_State::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetController");

	UPwndAIMonkeyBrainPlayer_State_GetController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetChar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* UPwndAIMonkeyBrainPlayer_State::GetChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetChar");

	UPwndAIMonkeyBrainPlayer_State_GetChar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.GetActiveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndAIMonkeyBrainPlayer_State* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndAIMonkeyBrainPlayer_State* UPwndAIMonkeyBrainPlayer_State::GetActiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.GetActiveState");

	UPwndAIMonkeyBrainPlayer_State_GetActiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.ExitState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPwndAIMonkeyBrainPlayer_State* NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer_State::ExitState(class UPwndAIMonkeyBrainPlayer_State* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.ExitState");

	UPwndAIMonkeyBrainPlayer_State_ExitState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.EnterState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPwndAIMonkeyBrainPlayer_State* PrevState                      (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer_State::EnterState(class UPwndAIMonkeyBrainPlayer_State* PrevState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.EnterState");

	UPwndAIMonkeyBrainPlayer_State_EnterState_Params params;
	params.PrevState = PrevState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.DrawHUD
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Pos                            (Parm, IsPlainOldData)
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ViewLocation                   (Parm, IsPlainOldData)
// struct FRotator                ViewRotation                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasOrigin                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasSize                     (Parm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::DrawHUD(const struct FVector2D& Pos, class APwndHUD* HUD, class UCanvas* Canvas, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, const struct FVector2D& CanvasOrigin, const struct FVector2D& CanvasSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.DrawHUD");

	UPwndAIMonkeyBrainPlayer_State_DrawHUD_Params params;
	params.Pos = Pos;
	params.HUD = HUD;
	params.Canvas = Canvas;
	params.ViewLocation = ViewLocation;
	params.ViewRotation = ViewRotation;
	params.CanvasOrigin = CanvasOrigin;
	params.CanvasSize = CanvasSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.DifficultyUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer_State::DifficultyUpdated(TEnumAsByte<EeBotDifficulty> NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.DifficultyUpdated");

	UPwndAIMonkeyBrainPlayer_State_DifficultyUpdated_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.DestroyState
// (Native, Event, Public, BlueprintEvent)

void UPwndAIMonkeyBrainPlayer_State::DestroyState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.DestroyState");

	UPwndAIMonkeyBrainPlayer_State_DestroyState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.ComputePriority
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer_State::ComputePriority(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.ComputePriority");

	UPwndAIMonkeyBrainPlayer_State_ComputePriority_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_State.ActiveTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_State::ActiveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_State.ActiveTime");

	UPwndAIMonkeyBrainPlayer_State_ActiveTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateWander.UpdateMovement_SpecialMovement
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StateWander::UpdateMovement_SpecialMovement(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateWander.UpdateMovement_SpecialMovement");

	UPwndAIMonkeyBrainPlayer_StateWander_UpdateMovement_SpecialMovement_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateWander.UpdateMovement_RocketJumpAndSpecialMovement
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAIMonkeyBrainPlayer_StateWander::UpdateMovement_RocketJumpAndSpecialMovement(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateWander.UpdateMovement_RocketJumpAndSpecialMovement");

	UPwndAIMonkeyBrainPlayer_StateWander_UpdateMovement_RocketJumpAndSpecialMovement_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateWander.UpdateMovement_RocketJump
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StateWander::UpdateMovement_RocketJump(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateWander.UpdateMovement_RocketJump");

	UPwndAIMonkeyBrainPlayer_StateWander_UpdateMovement_RocketJump_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateWander.GetSpecialMovementDirection
// (Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndAIMonkeyBrainPlayer_StateWander::GetSpecialMovementDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateWander.GetSpecialMovementDirection");

	UPwndAIMonkeyBrainPlayer_StateWander_GetSpecialMovementDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateWander.AllowSpecialMovement
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StateWander::AllowSpecialMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateWander.AllowSpecialMovement");

	UPwndAIMonkeyBrainPlayer_StateWander_AllowSpecialMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateWander.AllowRocketJump
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StateWander::AllowRocketJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateWander.AllowRocketJump");

	UPwndAIMonkeyBrainPlayer_StateWander_AllowRocketJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StatePatrol.GetPatrolLocation
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StatePatrol::GetPatrolLocation(struct FVector* Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StatePatrol.GetPatrolLocation");

	UPwndAIMonkeyBrainPlayer_StatePatrol_GetPatrolLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Loc != nullptr)
		*Loc = params.Loc;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.ShouldFireWeapon
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndAIMonkeyBrain_Target CombatTarget                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StateCombat::ShouldFireWeapon(float DeltaSeconds, const struct FPwndAIMonkeyBrain_Target& CombatTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.ShouldFireWeapon");

	UPwndAIMonkeyBrainPlayer_StateCombat_ShouldFireWeapon_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.CombatTarget = CombatTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.ShouldFireSecondaryAbility
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndAIMonkeyBrain_Target CombatTarget                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StateCombat::ShouldFireSecondaryAbility(float DeltaSeconds, const struct FPwndAIMonkeyBrain_Target& CombatTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.ShouldFireSecondaryAbility");

	UPwndAIMonkeyBrainPlayer_StateCombat_ShouldFireSecondaryAbility_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.CombatTarget = CombatTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.ShouldFirePrimaryAbility
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndAIMonkeyBrain_Target CombatTarget                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAIMonkeyBrainPlayer_StateCombat::ShouldFirePrimaryAbility(float DeltaSeconds, const struct FPwndAIMonkeyBrain_Target& CombatTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.ShouldFirePrimaryAbility");

	UPwndAIMonkeyBrainPlayer_StateCombat_ShouldFirePrimaryAbility_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.CombatTarget = CombatTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.GetWeaponForAiming
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* UPwndAIMonkeyBrainPlayer_StateCombat::GetWeaponForAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.GetWeaponForAiming");

	UPwndAIMonkeyBrainPlayer_StateCombat_GetWeaponForAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.GetFiringDelay
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_StateCombat::GetFiringDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.GetFiringDelay");

	UPwndAIMonkeyBrainPlayer_StateCombat_GetFiringDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.GetCombatTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAIMonkeyBrain_Target ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FPwndAIMonkeyBrain_Target UPwndAIMonkeyBrainPlayer_StateCombat::GetCombatTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateCombat.GetCombatTarget");

	UPwndAIMonkeyBrainPlayer_StateCombat_GetCombatTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAIMonkeyBrainPlayer_StateDefend.GetDefendChance
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAIMonkeyBrainPlayer_StateDefend::GetDefendChance()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAIMonkeyBrainPlayer_StateDefend.GetDefendChance");

	UPwndAIMonkeyBrainPlayer_StateDefend_GetDefendChance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAnimInstanceCharacter.IsPlayingAttackMontage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAnimInstanceCharacter::IsPlayingAttackMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAnimInstanceCharacter.IsPlayingAttackMontage");

	UPwndAnimInstanceCharacter_IsPlayingAttackMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAnimInstanceWeapon.GetNextAttackMontageIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAnimInstanceWeapon::GetNextAttackMontageIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAnimInstanceWeapon.GetNextAttackMontageIndex");

	UPwndAnimInstanceWeapon_GetNextAttackMontageIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAnnouncer.PlayVO
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ID                             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Context1                       (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Context2                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAnnouncer::PlayVO(const struct FName& ID, class UObject* Context1, class UObject* Context2)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAnnouncer.PlayVO");

	APwndAnnouncer_PlayVO_Params params;
	params.ID = ID;
	params.Context1 = Context1;
	params.Context2 = Context2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAnnouncer.MulticastPlayVO
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FName                   ID                             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Context1                       (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Context2                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAnnouncer::MulticastPlayVO(const struct FName& ID, class UObject* Context1, class UObject* Context2)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAnnouncer.MulticastPlayVO");

	APwndAnnouncer_MulticastPlayVO_Params params;
	params.ID = ID;
	params.Context1 = Context1;
	params.Context2 = Context2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAnnouncer.MulticastPlayAllyEnemyVO
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FName                   AllyID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EnemyID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Context1                       (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Context2                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndAnnouncer::MulticastPlayAllyEnemyVO(const struct FName& AllyID, const struct FName& EnemyID, class UObject* Context1, class UObject* Context2)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAnnouncer.MulticastPlayAllyEnemyVO");

	APwndAnnouncer_MulticastPlayAllyEnemyVO_Params params;
	params.AllyID = AllyID;
	params.EnemyID = EnemyID;
	params.Context1 = Context1;
	params.Context2 = Context2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.SetActive
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsActive                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndAOE::SetActive(bool bIsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.SetActive");

	APwndAOE_SetActive_Params params;
	params.bIsActive = bIsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.Retune
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndAOE::Retune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.Retune");

	APwndAOE_Retune_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnSetActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsActive                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndAOE::OnSetActive(bool bIsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnSetActive");

	APwndAOE_OnSetActive_Params params;
	params.bIsActive = bIsActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnRetune
// (Event, Protected, BlueprintEvent)

void APwndAOE::OnRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnRetune");

	APwndAOE_OnRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnResetTuning
// (Event, Protected, BlueprintEvent)

void APwndAOE::OnResetTuning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnResetTuning");

	APwndAOE_OnResetTuning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnRep_Health
// (Native, Protected)
// Parameters:
// int                            OldHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndAOE::OnRep_Health(int OldHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnRep_Health");

	APwndAOE_OnRep_Health_Params params;
	params.OldHealth = OldHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnRep_bActive
// (Native, Protected)
// Parameters:
// bool                           OldbActive                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndAOE::OnRep_bActive(bool OldbActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnRep_bActive");

	APwndAOE_OnRep_bActive_Params params;
	params.OldbActive = OldbActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnPostRetune
// (Event, Protected, BlueprintEvent)

void APwndAOE::OnPostRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnPostRetune");

	APwndAOE_OnPostRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnActorRemoved
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndAOE::OnActorRemoved(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnActorRemoved");

	APwndAOE_OnActorRemoved_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.OnActorAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndAOE::OnActorAdded(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.OnActorAdded");

	APwndAOE_OnActorAdded_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAOE.ModifyRepNonDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndAOERepNonDamageAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndAOE*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAOE* APwndAOE::ModifyRepNonDamage(const struct FPwndAOERepNonDamageAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.ModifyRepNonDamage");

	APwndAOE_ModifyRepNonDamage_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.ModifyRepAllDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndAOERepAllDamageAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndAOE*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAOE* APwndAOE::ModifyRepAllDamage(const struct FPwndAOERepAllDamageAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.ModifyRepAllDamage");

	APwndAOE_ModifyRepAllDamage_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.ModifyRepAllClassFilter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndActorClassFilterAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndAOE*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAOE* APwndAOE::ModifyRepAllClassFilter(const struct FPwndActorClassFilterAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.ModifyRepAllClassFilter");

	APwndAOE_ModifyRepAllClassFilter_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.ModifyRepAllBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndAOERepAllBaseAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndAOE*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAOE* APwndAOE::ModifyRepAllBase(const struct FPwndAOERepAllBaseAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.ModifyRepAllBase");

	APwndAOE_ModifyRepAllBase_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.K2ReadRepNoneAOEDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAOERepNonDamage    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndAOERepNonDamage APwndAOE::K2ReadRepNoneAOEDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.K2ReadRepNoneAOEDamage");

	APwndAOE_K2ReadRepNoneAOEDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.K2ReadRepAllAOEDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAOERepAllDamage    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndAOERepAllDamage APwndAOE::K2ReadRepAllAOEDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.K2ReadRepAllAOEDamage");

	APwndAOE_K2ReadRepAllAOEDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.K2ReadRepAllAOEClassFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndActorClassFilter   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndActorClassFilter APwndAOE::K2ReadRepAllAOEClassFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.K2ReadRepAllAOEClassFilter");

	APwndAOE_K2ReadRepAllAOEClassFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.K2ReadRepAllAOEBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAOERepAllBase      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndAOERepAllBase APwndAOE::K2ReadRepAllAOEBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.K2ReadRepAllAOEBase");

	APwndAOE_K2ReadRepAllAOEBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.IsActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAOE::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.IsActive");

	APwndAOE_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAOE.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndAOE::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAOE.GetServerTimeStamp");

	APwndAOE_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.UnbindAsyncLoadIconEventByGuid
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndAssetDatabase::UnbindAsyncLoadIconEventByGuid(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.UnbindAsyncLoadIconEventByGuid");

	UPwndAssetDatabase_UnbindAsyncLoadIconEventByGuid_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.UnbindAsyncLoadIconEventByEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate         EventToUnbind                  (Parm, ZeroConstructor)

void UPwndAssetDatabase::UnbindAsyncLoadIconEventByEvent(const struct FScriptDelegate& EventToUnbind)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.UnbindAsyncLoadIconEventByEvent");

	UPwndAssetDatabase_UnbindAsyncLoadIconEventByEvent_Params params;
	params.EventToUnbind = EventToUnbind;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.UnbindAsyncLoadExtraInfoIconEventByGuid
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAssetDatabase::UnbindAsyncLoadExtraInfoIconEventByGuid(const struct FGuid& Guid, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.UnbindAsyncLoadExtraInfoIconEventByGuid");

	UPwndAssetDatabase_UnbindAsyncLoadExtraInfoIconEventByGuid_Params params;
	params.Guid = Guid;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.UnbindAsyncLoadExtraInfoIconEventByEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate         EventToUnbind                  (Parm, ZeroConstructor)

void UPwndAssetDatabase::UnbindAsyncLoadExtraInfoIconEventByEvent(const struct FScriptDelegate& EventToUnbind)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.UnbindAsyncLoadExtraInfoIconEventByEvent");

	UPwndAssetDatabase_UnbindAsyncLoadExtraInfoIconEventByEvent_Params params;
	params.EventToUnbind = EventToUnbind;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.UnbindAsyncLoadClassEventByGuid
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndAssetDatabase::UnbindAsyncLoadClassEventByGuid(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.UnbindAsyncLoadClassEventByGuid");

	UPwndAssetDatabase_UnbindAsyncLoadClassEventByGuid_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.UnbindAsyncLoadClassEventByEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate         EventToUnbind                  (Parm, ZeroConstructor)

void UPwndAssetDatabase::UnbindAsyncLoadClassEventByEvent(const struct FScriptDelegate& EventToUnbind)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.UnbindAsyncLoadClassEventByEvent");

	UPwndAssetDatabase_UnbindAsyncLoadClassEventByEvent_Params params;
	params.EventToUnbind = EventToUnbind;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.SyncLoadIcon
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPwndAssetDatabase::SyncLoadIcon(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.SyncLoadIcon");

	UPwndAssetDatabase_SyncLoadIcon_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.SyncLoadExtraInfoIcon
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPwndAssetDatabase::SyncLoadExtraInfoIcon(const struct FGuid& Guid, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.SyncLoadExtraInfoIcon");

	UPwndAssetDatabase_SyncLoadExtraInfoIcon_Params params;
	params.Guid = Guid;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.SyncLoadClass
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndAssetDatabase::SyncLoadClass(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.SyncLoadClass");

	UPwndAssetDatabase_SyncLoadClass_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.SortGuidsByRarityAndText
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bForceNonEnabledForPlayAtEnd   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FGuid>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FGuid> UPwndAssetDatabase::SortGuidsByRarityAndText(bool bForceNonEnabledForPlayAtEnd, TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.SortGuidsByRarityAndText");

	UPwndAssetDatabase_SortGuidsByRarityAndText_Params params;
	params.bForceNonEnabledForPlayAtEnd = bForceNonEnabledForPlayAtEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.SortGuidsByGroupAndText
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bForceNonEnabledForPlayAtEnd   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FGuid>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FGuid> UPwndAssetDatabase::SortGuidsByGroupAndText(bool bForceNonEnabledForPlayAtEnd, TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.SortGuidsByGroupAndText");

	UPwndAssetDatabase_SortGuidsByGroupAndText_Params params;
	params.bForceNonEnabledForPlayAtEnd = bForceNonEnabledForPlayAtEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.SelectRandomCharacter
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGuid>           Allies                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FGuid>           Enemies                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bEvenOutCharacterSelection     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndAssetDatabase::SelectRandomCharacter(TArray<struct FGuid> Allies, TArray<struct FGuid> Enemies, bool bEvenOutCharacterSelection, bool bMustBeEnabledForPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.SelectRandomCharacter");

	UPwndAssetDatabase_SelectRandomCharacter_Params params;
	params.Allies = Allies;
	params.Enemies = Enemies;
	params.bEvenOutCharacterSelection = bEvenOutCharacterSelection;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction PWND.PwndAssetDatabase.PwndAssetDatabaseAsyncLoadedIconDelegate__DelegateSignature
// (Public, Delegate, HasOutParms, HasDefaults)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UTexture2D*              LoadedIcon                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAssetDatabase::PwndAssetDatabaseAsyncLoadedIconDelegate__DelegateSignature(const struct FGuid& Guid, class UTexture2D* LoadedIcon)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction PWND.PwndAssetDatabase.PwndAssetDatabaseAsyncLoadedIconDelegate__DelegateSignature");

	UPwndAssetDatabase_PwndAssetDatabaseAsyncLoadedIconDelegate__DelegateSignature_Params params;
	params.Guid = Guid;
	params.LoadedIcon = LoadedIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction PWND.PwndAssetDatabase.PwndAssetDatabaseAsyncLoadedExtraInfoIconDelegate__DelegateSignature
// (Public, Delegate, HasOutParms, HasDefaults)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UTexture2D*              LoadedIcon                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAssetDatabase::PwndAssetDatabaseAsyncLoadedExtraInfoIconDelegate__DelegateSignature(const struct FGuid& Guid, const struct FName& Type, class UTexture2D* LoadedIcon)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction PWND.PwndAssetDatabase.PwndAssetDatabaseAsyncLoadedExtraInfoIconDelegate__DelegateSignature");

	UPwndAssetDatabase_PwndAssetDatabaseAsyncLoadedExtraInfoIconDelegate__DelegateSignature_Params params;
	params.Guid = Guid;
	params.Type = Type;
	params.LoadedIcon = LoadedIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction PWND.PwndAssetDatabase.PwndAssetDatabaseAsyncLoadedClassDelegate__DelegateSignature
// (Public, Delegate, HasOutParms, HasDefaults)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UClass*                  LoadedClass                    (Parm, ZeroConstructor, IsPlainOldData)

void UPwndAssetDatabase::PwndAssetDatabaseAsyncLoadedClassDelegate__DelegateSignature(const struct FGuid& Guid, class UClass* LoadedClass)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction PWND.PwndAssetDatabase.PwndAssetDatabaseAsyncLoadedClassDelegate__DelegateSignature");

	UPwndAssetDatabase_PwndAssetDatabaseAsyncLoadedClassDelegate__DelegateSignature_Params params;
	params.Guid = Guid;
	params.LoadedClass = LoadedClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.IsRefChildOfGuid
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAssetDatabaseReference Child                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FGuid                   Parent                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsRefChildOfGuid(const struct FPwndAssetDatabaseReference& Child, const struct FGuid& Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsRefChildOfGuid");

	UPwndAssetDatabase_IsRefChildOfGuid_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsRefChildOfClass
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAssetDatabaseReference Child                          (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  Parent                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsRefChildOfClass(const struct FPwndAssetDatabaseReference& Child, class UClass* Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsRefChildOfClass");

	UPwndAssetDatabase_IsRefChildOfClass_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsRefChildOf
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAssetDatabaseReference Child                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPwndAssetDatabaseReference Parent                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsRefChildOf(const struct FPwndAssetDatabaseReference& Child, const struct FPwndAssetDatabaseReference& Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsRefChildOf");

	UPwndAssetDatabase_IsRefChildOf_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsGuidChildOfRef
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Child                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPwndAssetDatabaseReference Parent                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsGuidChildOfRef(const struct FGuid& Child, const struct FPwndAssetDatabaseReference& Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsGuidChildOfRef");

	UPwndAssetDatabase_IsGuidChildOfRef_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsGuidChildOfClass
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Child                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UClass*                  Parent                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsGuidChildOfClass(const struct FGuid& Child, class UClass* Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsGuidChildOfClass");

	UPwndAssetDatabase_IsGuidChildOfClass_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsGuidChildOf
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Child                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FGuid                   Parent                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsGuidChildOf(const struct FGuid& Child, const struct FGuid& Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsGuidChildOf");

	UPwndAssetDatabase_IsGuidChildOf_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsClassChildOfRef
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Child                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndAssetDatabaseReference Parent                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsClassChildOfRef(class UClass* Child, const struct FPwndAssetDatabaseReference& Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsClassChildOfRef");

	UPwndAssetDatabase_IsClassChildOfRef_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsClassChildOfGuid
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Child                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Parent                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsClassChildOfGuid(class UClass* Child, const struct FGuid& Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsClassChildOfGuid");

	UPwndAssetDatabase_IsClassChildOfGuid_Params params;
	params.Child = Child;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.IsAssetGuid
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bUseLoadingFallback            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::IsAssetGuid(const struct FGuid& Guid, bool bUseLoadingFallback)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.IsAssetGuid");

	UPwndAssetDatabase_IsAssetGuid_Params params;
	params.Guid = Guid;
	params.bUseLoadingFallback = bUseLoadingFallback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetText
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndAssetDatabase::GetText(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetText");

	UPwndAssetDatabase_GetText_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetRarity
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EeItemRarity>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeItemRarity> UPwndAssetDatabase::GetRarity(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetRarity");

	UPwndAssetDatabase_GetRarity_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetPath
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndAssetDatabase::GetPath(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetPath");

	UPwndAssetDatabase_GetPath_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetName
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndAssetDatabase::GetName(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetName");

	UPwndAssetDatabase_GetName_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetLevelGuid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 MapName                        (Parm, ZeroConstructor)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndAssetDatabase::GetLevelGuid(const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetLevelGuid");

	UPwndAssetDatabase_GetLevelGuid_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetIcons
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UTexture2D*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UTexture2D*> UPwndAssetDatabase::GetIcons(TArray<struct FGuid> Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetIcons");

	UPwndAssetDatabase_GetIcons_Params params;
	params.Guids = Guids;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetIcon
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPwndAssetDatabase::GetIcon(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetIcon");

	UPwndAssetDatabase_GetIcon_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetGuidReferences
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TArray<struct FGuid>           GuidRefs                       (Parm, OutParm, ZeroConstructor)
// bool                           bMustAllowSelection            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAssetDatabase::GetGuidReferences(const struct FGuid& Guid, const struct FName& Type, bool bMustAllowSelection, bool bMustBeEnabledForPlay, TArray<struct FGuid>* GuidRefs)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetGuidReferences");

	UPwndAssetDatabase_GetGuidReferences_Params params;
	params.Guid = Guid;
	params.Type = Type;
	params.bMustAllowSelection = bMustAllowSelection;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (GuidRefs != nullptr)
		*GuidRefs = params.GuidRefs;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetGuidByRef
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndAssetDatabaseReference Ref                            (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bForceValidate                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndAssetDatabase::GetGuidByRef(const struct FPwndAssetDatabaseReference& Ref, bool bForceValidate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetGuidByRef");

	UPwndAssetDatabase_GetGuidByRef_Params params;
	params.Ref = Ref;
	params.bForceValidate = bForceValidate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetGuidByName
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)
// class UClass*                  ClassFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowSubstr                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCaseSensitive                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndAssetDatabase::GetGuidByName(const struct FString& Name, class UClass* ClassFilter, bool bAllowSubstr, bool bCaseSensitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetGuidByName");

	UPwndAssetDatabase_GetGuidByName_Params params;
	params.Name = Name;
	params.ClassFilter = ClassFilter;
	params.bAllowSubstr = bAllowSubstr;
	params.bCaseSensitive = bCaseSensitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetGuidByAsset
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TAssetPtr<class UClass>        Asset                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndAssetDatabase::GetGuidByAsset(TAssetPtr<class UClass> Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetGuidByAsset");

	UPwndAssetDatabase_GetGuidByAsset_Params params;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetGroup
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAssetDatabase::GetGroup(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetGroup");

	UPwndAssetDatabase_GetGroup_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetExtraInfoText
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndAssetDatabase::GetExtraInfoText(const struct FGuid& Guid, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetExtraInfoText");

	UPwndAssetDatabase_GetExtraInfoText_Params params;
	params.Guid = Guid;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetExtraInfoNumber
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndAssetDatabase::GetExtraInfoNumber(const struct FGuid& Guid, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetExtraInfoNumber");

	UPwndAssetDatabase_GetExtraInfoNumber_Params params;
	params.Guid = Guid;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetExtraInfoIcon
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPwndAssetDatabase::GetExtraInfoIcon(const struct FGuid& Guid, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetExtraInfoIcon");

	UPwndAssetDatabase_GetExtraInfoIcon_Params params;
	params.Guid = Guid;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetExtraInfoDescription
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndAssetDatabase::GetExtraInfoDescription(const struct FGuid& Guid, const struct FName& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetExtraInfoDescription");

	UPwndAssetDatabase_GetExtraInfoDescription_Params params;
	params.Guid = Guid;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetDescription
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndAssetDatabase::GetDescription(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetDescription");

	UPwndAssetDatabase_GetDescription_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetClasses
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UPwndAssetDatabase::GetClasses(TArray<struct FGuid> Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetClasses");

	UPwndAssetDatabase_GetClasses_Params params;
	params.Guids = Guids;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetClass
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndAssetDatabase::GetClass(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetClass");

	UPwndAssetDatabase_GetClass_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetCharacterRole
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EeCharacterRole>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeCharacterRole> UPwndAssetDatabase::GetCharacterRole(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetCharacterRole");

	UPwndAssetDatabase_GetCharacterRole_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetCharacterGuid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 CharacterStr                   (Parm, ZeroConstructor)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndAssetDatabase::GetCharacterGuid(const struct FString& CharacterStr, bool bMustBeEnabledForPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetCharacterGuid");

	UPwndAssetDatabase_GetCharacterGuid_Params params;
	params.CharacterStr = CharacterStr;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAssetTypeText
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndAssetDatabase::GetAssetTypeText(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAssetTypeText");

	UPwndAssetDatabase_GetAssetTypeText_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAssetType
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndAssetDatabase::GetAssetType(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAssetType");

	UPwndAssetDatabase_GetAssetType_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAsset
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TAssetPtr<class UClass>        ReturnValue                    (Parm, OutParm, ReturnParm)

TAssetPtr<class UClass> UPwndAssetDatabase::GetAsset(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAsset");

	UPwndAssetDatabase_GetAsset_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAllPreloadOnStartupGuids
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAssetDatabase::GetAllPreloadOnStartupGuids(TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAllPreloadOnStartupGuids");

	UPwndAssetDatabase_GetAllPreloadOnStartupGuids_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAllLevelGuids
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAssetDatabase::GetAllLevelGuids(bool bMustBeEnabledForPlay, TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAllLevelGuids");

	UPwndAssetDatabase_GetAllLevelGuids_Params params;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAllGameModeGuids
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAssetDatabase::GetAllGameModeGuids(bool bMustBeEnabledForPlay, TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAllGameModeGuids");

	UPwndAssetDatabase_GetAllGameModeGuids_Params params;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAllCharacterGuids
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAssetDatabase::GetAllCharacterGuids(bool bMustBeEnabledForPlay, TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAllCharacterGuids");

	UPwndAssetDatabase_GetAllCharacterGuids_Params params;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.GetAllAssetGuids
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor)
// class UClass*                  ClassFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMustAllowSelection            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndAssetDatabase::GetAllAssetGuids(class UClass* ClassFilter, bool bMustAllowSelection, bool bMustBeEnabledForPlay, TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.GetAllAssetGuids");

	UPwndAssetDatabase_GetAllAssetGuids_Params params;
	params.ClassFilter = ClassFilter;
	params.bMustAllowSelection = bMustAllowSelection;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.EnabledForPlay
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::EnabledForPlay(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.EnabledForPlay");

	UPwndAssetDatabase_EnabledForPlay_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAssetDatabase.AsyncLoadIcon
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FScriptDelegate         OnLoaded                       (Parm, ZeroConstructor)

void UPwndAssetDatabase::AsyncLoadIcon(const struct FGuid& Guid, const struct FScriptDelegate& OnLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.AsyncLoadIcon");

	UPwndAssetDatabase_AsyncLoadIcon_Params params;
	params.Guid = Guid;
	params.OnLoaded = OnLoaded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.AsyncLoadExtraInfoIcon
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         OnLoaded                       (Parm, ZeroConstructor)

void UPwndAssetDatabase::AsyncLoadExtraInfoIcon(const struct FGuid& Guid, const struct FName& Type, const struct FScriptDelegate& OnLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.AsyncLoadExtraInfoIcon");

	UPwndAssetDatabase_AsyncLoadExtraInfoIcon_Params params;
	params.Guid = Guid;
	params.Type = Type;
	params.OnLoaded = OnLoaded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.AsyncLoadClass
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FScriptDelegate         OnLoaded                       (Parm, ZeroConstructor)

void UPwndAssetDatabase::AsyncLoadClass(const struct FGuid& Guid, const struct FScriptDelegate& OnLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.AsyncLoadClass");

	UPwndAssetDatabase_AsyncLoadClass_Params params;
	params.Guid = Guid;
	params.OnLoaded = OnLoaded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndAssetDatabase.AllowSelection
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndAssetDatabase::AllowSelection(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAssetDatabase.AllowSelection");

	UPwndAssetDatabase_AllowSelection_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndAutoGameActor.IsValidGame
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndAutoGameActor::IsValidGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndAutoGameActor.IsValidGame");

	APwndAutoGameActor_IsValidGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBaseProjectileMovementComponent.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndBaseProjectileMovementComponent::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBaseProjectileMovementComponent.GetServerTimeStamp");

	UPwndBaseProjectileMovementComponent_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.ShouldBeVisibleThroughWalls
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::ShouldBeVisibleThroughWalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.ShouldBeVisibleThroughWalls");

	UPwndFieldTagComponent_ShouldBeVisibleThroughWalls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.ShouldBeVisibleOffscreen
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::ShouldBeVisibleOffscreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.ShouldBeVisibleOffscreen");

	UPwndFieldTagComponent_ShouldBeVisibleOffscreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.ShouldBeVisibleInWorld
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::ShouldBeVisibleInWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.ShouldBeVisibleInWorld");

	UPwndFieldTagComponent_ShouldBeVisibleInWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.ShouldBeVisible
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::ShouldBeVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.ShouldBeVisible");

	UPwndFieldTagComponent_ShouldBeVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.IsOnscreen
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::IsOnscreen(class APwndHUD* HUD, class UCanvas* Canvas)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.IsOnscreen");

	UPwndFieldTagComponent_IsOnscreen_Params params;
	params.HUD = HUD;
	params.Canvas = Canvas;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.HasLOS
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::HasLOS()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.HasLOS");

	UPwndFieldTagComponent_HasLOS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetValue
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndFieldTagComponent::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetValue");

	UPwndFieldTagComponent_GetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetUIMatInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UPwndFieldTagComponent::GetUIMatInst()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetUIMatInst");

	UPwndFieldTagComponent_GetUIMatInst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetTeamDesc
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeTeamDesc>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeTeamDesc> UPwndFieldTagComponent::GetTeamDesc()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetTeamDesc");

	UPwndFieldTagComponent_GetTeamDesc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetPct
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndFieldTagComponent::GetPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetPct");

	UPwndFieldTagComponent_GetPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetOnscreenRenderPriority
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndFieldTagComponent::GetOnscreenRenderPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetOnscreenRenderPriority");

	UPwndFieldTagComponent_GetOnscreenRenderPriority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetOffscreenRenderPriority
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndFieldTagComponent::GetOffscreenRenderPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetOffscreenRenderPriority");

	UPwndFieldTagComponent_GetOffscreenRenderPriority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetOffscreenMatInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UPwndFieldTagComponent::GetOffscreenMatInst()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetOffscreenMatInst");

	UPwndFieldTagComponent_GetOffscreenMatInst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetNormalizedScreenPosAlwaysInCameraView
// (Final, Native, Public, HasOutParms, HasDefaults, Const)
// Parameters:
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ScreenLoc                      (Parm, OutParm, IsPlainOldData)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// bool                           bClampToScreen                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::GetNormalizedScreenPosAlwaysInCameraView(class APwndHUD* HUD, class UCanvas* Canvas, const struct FVector& Offset, bool bClampToScreen, struct FVector* ScreenLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetNormalizedScreenPosAlwaysInCameraView");

	UPwndFieldTagComponent_GetNormalizedScreenPosAlwaysInCameraView_Params params;
	params.HUD = HUD;
	params.Canvas = Canvas;
	params.Offset = Offset;
	params.bClampToScreen = bClampToScreen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ScreenLoc != nullptr)
		*ScreenLoc = params.ScreenLoc;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetNormalizedScreenPos
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ScreenLoc                      (Parm, OutParm, IsPlainOldData)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// bool                           bClampToScreen                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndFieldTagComponent::GetNormalizedScreenPos(class APwndHUD* HUD, class UCanvas* Canvas, const struct FVector& Offset, bool bClampToScreen, struct FVector* ScreenLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetNormalizedScreenPos");

	UPwndFieldTagComponent_GetNormalizedScreenPos_Params params;
	params.HUD = HUD;
	params.Canvas = Canvas;
	params.Offset = Offset;
	params.bClampToScreen = bClampToScreen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ScreenLoc != nullptr)
		*ScreenLoc = params.ScreenLoc;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.GetFieldTagType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeFieldTagType>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeFieldTagType> UPwndFieldTagComponent::GetFieldTagType()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.GetFieldTagType");

	UPwndFieldTagComponent_GetFieldTagType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFieldTagComponent.DrawFieldTags
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class UPwndFieldTagComponent*> FieldTags                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ViewLocation                   (Parm, IsPlainOldData)
// struct FRotator                ViewRotation                   (Parm, IsPlainOldData)

void UPwndFieldTagComponent::STATIC_DrawFieldTags(TArray<class UPwndFieldTagComponent*> FieldTags, class APwndHUD* HUD, class UCanvas* Canvas, const struct FVector& ViewLocation, const struct FRotator& ViewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFieldTagComponent.DrawFieldTags");

	UPwndFieldTagComponent_DrawFieldTags_Params params;
	params.FieldTags = FieldTags;
	params.HUD = HUD;
	params.Canvas = Canvas;
	params.ViewLocation = ViewLocation;
	params.ViewRotation = ViewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBlueprintFunctionLibrary.NotifyLoadingOutOfFrontend
// (Final, Native, Static, Public, BlueprintCallable)

void UPwndBlueprintFunctionLibrary::STATIC_NotifyLoadingOutOfFrontend()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.NotifyLoadingOutOfFrontend");

	UPwndBlueprintFunctionLibrary_NotifyLoadingOutOfFrontend_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBlueprintFunctionLibrary.IsPartyNonLeader
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndBlueprintFunctionLibrary::STATIC_IsPartyNonLeader(class APlayerController* pPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.IsPartyNonLeader");

	UPwndBlueprintFunctionLibrary_IsPartyNonLeader_Params params;
	params.pPlayerController = pPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.IsPartyLeader
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndBlueprintFunctionLibrary::STATIC_IsPartyLeader(class APlayerController* pPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.IsPartyLeader");

	UPwndBlueprintFunctionLibrary_IsPartyLeader_Params params;
	params.pPlayerController = pPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.IsInPartyAlone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndBlueprintFunctionLibrary::STATIC_IsInPartyAlone(class APlayerController* pPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.IsInPartyAlone");

	UPwndBlueprintFunctionLibrary_IsInPartyAlone_Params params;
	params.pPlayerController = pPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.IsInParty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndBlueprintFunctionLibrary::STATIC_IsInParty(class APlayerController* pPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.IsInParty");

	UPwndBlueprintFunctionLibrary_IsInParty_Params params;
	params.pPlayerController = pPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.GetCurrentScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UPwndBlueprintFunctionLibrary::STATIC_GetCurrentScreen(class APlayerController* pPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.GetCurrentScreen");

	UPwndBlueprintFunctionLibrary_GetCurrentScreen_Params params;
	params.pPlayerController = pPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.GetCharacterLoadout
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   characterGuid                  (Parm, IsPlainOldData)
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout UPwndBlueprintFunctionLibrary::STATIC_GetCharacterLoadout(const struct FGuid& characterGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.GetCharacterLoadout");

	UPwndBlueprintFunctionLibrary_GetCharacterLoadout_Params params;
	params.characterGuid = characterGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.DoesLocalUserHaveRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EBackendUserRole>  Role                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndBlueprintFunctionLibrary::STATIC_DoesLocalUserHaveRole(TEnumAsByte<EBackendUserRole> Role)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.DoesLocalUserHaveRole");

	UPwndBlueprintFunctionLibrary_DoesLocalUserHaveRole_Params params;
	params.Role = Role;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.DisplayPopUpSetButtonNames
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPopUpSpawnType>   popUpType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   Body                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   buttonOkayText                 (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   buttonCancelText               (ConstParm, Parm, OutParm, ReferenceParm)
// class UUI_GenericPopUp*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUI_GenericPopUp* UPwndBlueprintFunctionLibrary::STATIC_DisplayPopUpSetButtonNames(class APlayerController* pPlayerController, TEnumAsByte<EPopUpSpawnType> popUpType, const struct FText& Title, const struct FText& Body, const struct FText& buttonOkayText, const struct FText& buttonCancelText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.DisplayPopUpSetButtonNames");

	UPwndBlueprintFunctionLibrary_DisplayPopUpSetButtonNames_Params params;
	params.pPlayerController = pPlayerController;
	params.popUpType = popUpType;
	params.Title = Title;
	params.Body = Body;
	params.buttonOkayText = buttonOkayText;
	params.buttonCancelText = buttonCancelText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.DisplayPopUp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPopUpSpawnType>   popUpType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   Body                           (ConstParm, Parm, OutParm, ReferenceParm)
// class UUI_GenericPopUp*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUI_GenericPopUp* UPwndBlueprintFunctionLibrary::STATIC_DisplayPopUp(class APlayerController* pPlayerController, TEnumAsByte<EPopUpSpawnType> popUpType, const struct FText& Title, const struct FText& Body)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.DisplayPopUp");

	UPwndBlueprintFunctionLibrary_DisplayPopUp_Params params;
	params.pPlayerController = pPlayerController;
	params.popUpType = popUpType;
	params.Title = Title;
	params.Body = Body;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBlueprintFunctionLibrary.DisplayInvitePopUp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APlayerController*       pPlayerController              (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPopUpSpawnType>   popUpType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   Body                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 inviterName                    (Parm, ZeroConstructor)
// struct FGuid                   PlayerId                       (Parm, IsPlainOldData)
// class UUI_GenericPopUp*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUI_GenericPopUp* UPwndBlueprintFunctionLibrary::STATIC_DisplayInvitePopUp(class APlayerController* pPlayerController, TEnumAsByte<EPopUpSpawnType> popUpType, const struct FText& Title, const struct FText& Body, const struct FString& inviterName, const struct FGuid& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBlueprintFunctionLibrary.DisplayInvitePopUp");

	UPwndBlueprintFunctionLibrary_DisplayInvitePopUp_Params params;
	params.pPlayerController = pPlayerController;
	params.popUpType = popUpType;
	params.Title = Title;
	params.Body = Body;
	params.inviterName = inviterName;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndBodyStackActor.OnUpdateStack
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            NewPwnStackSize                (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          TopPawn                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          BottomPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndBodyStackActor::OnUpdateStack(int NewPwnStackSize, class APwndCharacter* TopPawn, class APwndCharacter* BottomPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBodyStackActor.OnUpdateStack");

	APwndBodyStackActor_OnUpdateStack_Params params;
	params.NewPwnStackSize = NewPwnStackSize;
	params.TopPawn = TopPawn;
	params.BottomPawn = BottomPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBodyStackActor.OnRep_PwnStackSize
// (Final, Native, Protected)

void APwndBodyStackActor::OnRep_PwnStackSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBodyStackActor.OnRep_PwnStackSize");

	APwndBodyStackActor_OnRep_PwnStackSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBodyStackActor.OnRep_PwnBodyStackTopPawn
// (Final, Native, Protected)

void APwndBodyStackActor::OnRep_PwnBodyStackTopPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBodyStackActor.OnRep_PwnBodyStackTopPawn");

	APwndBodyStackActor_OnRep_PwnBodyStackTopPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndBodyStackActor.OnRep_PwnBodyStackBottomPawn
// (Final, Native, Protected)

void APwndBodyStackActor::OnRep_PwnBodyStackBottomPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndBodyStackActor.OnRep_PwnBodyStackBottomPawn");

	APwndBodyStackActor_OnRep_PwnBodyStackBottomPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCameraComponent.RemoveBlendable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UBlendableInterface> InBlendableObject              (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCameraComponent::RemoveBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCameraComponent.RemoveBlendable");

	UPwndCameraComponent_RemoveBlendable_Params params;
	params.InBlendableObject = InBlendableObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.SetPwnZoneSettings
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwnZoneSettings        Settings                       (Parm)

void APwndPwnZone::SetPwnZoneSettings(const struct FPwnZoneSettings& Settings)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.SetPwnZoneSettings");

	APwndPwnZone_SetPwnZoneSettings_Params params;
	params.Settings = Settings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.SetActive
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsActive                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::SetActive(bool bIsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.SetActive");

	APwndPwnZone_SetActive_Params params;
	params.bIsActive = bIsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.RemoveActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::RemoveActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.RemoveActor");

	APwndPwnZone_RemoveActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnTickState
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            PwnsActive                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    TeamPwnsActive                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class APwndCharacter*>  PwnablePawns                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndPwnZone::OnTickState(float DeltaSeconds, int PwnsActive, TArray<int> TeamPwnsActive, TArray<class APwndCharacter*> PwnablePawns)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnTickState");

	APwndPwnZone_OnTickState_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.PwnsActive = PwnsActive;
	params.TeamPwnsActive = TeamPwnsActive;
	params.PwnablePawns = PwnablePawns;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnSetActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsActive                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnSetActive(bool bIsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnSetActive");

	APwndPwnZone_OnSetActive_Params params;
	params.bIsActive = bIsActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnRep_bActive
// (Native, Protected)
// Parameters:
// bool                           OldbActive                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnRep_bActive(bool OldbActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnRep_bActive");

	APwndPwnZone_OnRep_bActive_Params params;
	params.OldbActive = OldbActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnPwnageStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnPwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnPwnageStarted");

	APwndPwnZone_OnPwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnPwnageScored
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Multiplier                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnPwnageScored(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, int Multiplier, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnPwnageScored");

	APwndPwnZone_OnPwnageScored_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.Multiplier = Multiplier;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnPwnageCancelled
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnPwnageCancelled(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnPwnageCancelled");

	APwndPwnZone_OnPwnageCancelled_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnCreatedRenderTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*  RenderTargetTexture            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnCreatedRenderTarget(class UTextureRenderTarget2D* RenderTargetTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnCreatedRenderTarget");

	APwndPwnZone_OnCreatedRenderTarget_Params params;
	params.RenderTargetTexture = RenderTargetTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnActorRemoved
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnActorRemoved(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnActorRemoved");

	APwndPwnZone_OnActorRemoved_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.OnActorAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::OnActorAdded(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.OnActorAdded");

	APwndPwnZone_OnActorAdded_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.MulticastPwnageStarted
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::MulticastPwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.MulticastPwnageStarted");

	APwndPwnZone_MulticastPwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.MulticastPwnageScored
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Multiplier                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::MulticastPwnageScored(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, int Multiplier, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.MulticastPwnageScored");

	APwndPwnZone_MulticastPwnageScored_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.Multiplier = Multiplier;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.MulticastPwnageCancelled
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::MulticastPwnageCancelled(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.MulticastPwnageCancelled");

	APwndPwnZone_MulticastPwnageCancelled_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPwnZone.IsValidGame
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPwnZone::IsValidGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.IsValidGame");

	APwndPwnZone_IsValidGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPwnZone.IsActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPwnZone::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.IsActive");

	APwndPwnZone_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPwnZone.GetTeamNum
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char APwndPwnZone::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.GetTeamNum");

	APwndPwnZone_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPwnZone.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPwnZone::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.GetServerTimeStamp");

	APwndPwnZone_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPwnZone.AffectsActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPwnZone::AffectsActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.AffectsActor");

	APwndPwnZone_AffectsActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPwnZone.AddActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPwnZone::AddActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnZone.AddActor");

	APwndPwnZone_AddActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.SetCustomCaptureInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsCaptured                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::SetCustomCaptureInfo(float Time, unsigned char Team, bool bIsCaptured)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.SetCustomCaptureInfo");

	APwndCaptureZone_SetCustomCaptureInfo_Params params;
	params.Time = Time;
	params.Team = Team;
	params.bIsCaptured = bIsCaptured;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.SetCustomCapture
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsCustom                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::SetCustomCapture(bool bIsCustom)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.SetCustomCapture");

	APwndCaptureZone_SetCustomCapture_Params params;
	params.bIsCustom = bIsCustom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.SetCaptureSettings
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FCaptureZoneSettings    Settings                       (Parm)

void APwndCaptureZone::SetCaptureSettings(const struct FCaptureZoneSettings& Settings)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.SetCaptureSettings");

	APwndCaptureZone_SetCaptureSettings_Params params;
	params.Settings = Settings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.ResetCaptureInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndCaptureZone::ResetCaptureInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.ResetCaptureInfo");

	APwndCaptureZone_ResetCaptureInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.OnTeamChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  OldHeldTeamNum                 (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewHeldTeamNum                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::OnTeamChanged(unsigned char OldHeldTeamNum, unsigned char NewHeldTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.OnTeamChanged");

	APwndCaptureZone_OnTeamChanged_Params params;
	params.OldHeldTeamNum = OldHeldTeamNum;
	params.NewHeldTeamNum = NewHeldTeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.OnSetCaptured
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsCaptured                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::OnSetCaptured(bool bIsCaptured)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.OnSetCaptured");

	APwndCaptureZone_OnSetCaptured_Params params;
	params.bIsCaptured = bIsCaptured;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.OnRepHeldTeamNum
// (Final, Native, Public)
// Parameters:
// unsigned char                  OldHeldTeamNum                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::OnRepHeldTeamNum(unsigned char OldHeldTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.OnRepHeldTeamNum");

	APwndCaptureZone_OnRepHeldTeamNum_Params params;
	params.OldHeldTeamNum = OldHeldTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.OnRepCaptureState
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EeCaptureState>    OldCaptureState                (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::OnRepCaptureState(TEnumAsByte<EeCaptureState> OldCaptureState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.OnRepCaptureState");

	APwndCaptureZone_OnRepCaptureState_Params params;
	params.OldCaptureState = OldCaptureState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.OnRepbCaptured
// (Final, Native, Public)
// Parameters:
// bool                           OldbCaptured                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::OnRepbCaptured(bool OldbCaptured)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.OnRepbCaptured");

	APwndCaptureZone_OnRepbCaptured_Params params;
	params.OldbCaptured = OldbCaptured;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.OnCaptureStateUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeCaptureState>    OldCaptureState                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeCaptureState>    NewCaptureState                (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::OnCaptureStateUpdated(TEnumAsByte<EeCaptureState> OldCaptureState, TEnumAsByte<EeCaptureState> NewCaptureState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.OnCaptureStateUpdated");

	APwndCaptureZone_OnCaptureStateUpdated_Params params;
	params.OldCaptureState = OldCaptureState;
	params.NewCaptureState = NewCaptureState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCaptureZone.IsContested
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCaptureZone::IsContested()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.IsContested");

	APwndCaptureZone_IsContested_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCaptureZone.IsCapturing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCaptureZone::IsCapturing()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.IsCapturing");

	APwndCaptureZone_IsCapturing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCaptureZone.GetCapturePct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCaptureZone::GetCapturePct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.GetCapturePct");

	APwndCaptureZone_GetCapturePct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCaptureZone.AccumulatePoints
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCaptureZone::AccumulatePoints(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCaptureZone.AccumulatePoints");

	APwndCaptureZone_AccumulatePoints_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.Retune
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndCharacterGUTS::Retune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.Retune");

	APwndCharacterGUTS_Retune_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnTuneShield
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndShield*             Shield                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacterGUTS::OnTuneShield(class APwndShield* Shield)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnTuneShield");

	APwndCharacterGUTS_OnTuneShield_Params params;
	params.Shield = Shield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnTuneProjectile
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacterGUTS::OnTuneProjectile(class APwndProjectile* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnTuneProjectile");

	APwndCharacterGUTS_OnTuneProjectile_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnTuneInventory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacterGUTS::OnTuneInventory(class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnTuneInventory");

	APwndCharacterGUTS_OnTuneInventory_Params params;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnTuneDOT
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPwndDOTComponent*       DOT                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APwndCharacterGUTS::OnTuneDOT(class UPwndDOTComponent* DOT)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnTuneDOT");

	APwndCharacterGUTS_OnTuneDOT_Params params;
	params.DOT = DOT;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnTuneAOE
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndAOE*                AOE                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacterGUTS::OnTuneAOE(class APwndAOE* AOE)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnTuneAOE");

	APwndCharacterGUTS_OnTuneAOE_Params params;
	params.AOE = AOE;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnRetune
// (Event, Protected, BlueprintEvent)

void APwndCharacterGUTS::OnRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnRetune");

	APwndCharacterGUTS_OnRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnResetTuning
// (Event, Protected, BlueprintEvent)

void APwndCharacterGUTS::OnResetTuning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnResetTuning");

	APwndCharacterGUTS_OnResetTuning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.OnPostRetune
// (Event, Protected, BlueprintEvent)

void APwndCharacterGUTS::OnPostRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.OnPostRetune");

	APwndCharacterGUTS_OnPostRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterGUTS.ModifyWallVerticalRJ
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FRocketJumpTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyWallVerticalRJ(const struct FRocketJumpTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyWallVerticalRJ");

	APwndCharacterGUTS_ModifyWallVerticalRJ_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyWallHorizontalRJ
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FRocketJumpTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyWallHorizontalRJ(const struct FRocketJumpTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyWallHorizontalRJ");

	APwndCharacterGUTS_ModifyWallHorizontalRJ_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyShields
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FDynamicAttributeComponentTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyShields(const struct FDynamicAttributeComponentTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyShields");

	APwndCharacterGUTS_ModifyShields_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnWallRun
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnWallRunAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnWallRun(const struct FPwndCharacterRepOwnWallRunAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnWallRun");

	APwndCharacterGUTS_ModifyRepOwnWallRun_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnWallGrind
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnWallGrindAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnWallGrind(const struct FPwndCharacterRepOwnWallGrindAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnWallGrind");

	APwndCharacterGUTS_ModifyRepOwnWallGrind_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnTankMode
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnTankModeAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnTankMode(const struct FPwndCharacterRepOwnTankModeAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnTankMode");

	APwndCharacterGUTS_ModifyRepOwnTankMode_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnSkyDash
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnSkyDashAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnSkyDash(const struct FPwndCharacterRepOwnSkyDashAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnSkyDash");

	APwndCharacterGUTS_ModifyRepOwnSkyDash_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnRocketJump
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnRocketJumpAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnRocketJump(const struct FPwndCharacterRepOwnRocketJumpAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnRocketJump");

	APwndCharacterGUTS_ModifyRepOwnRocketJump_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnRevive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnReviveAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnRevive(const struct FPwndCharacterRepOwnReviveAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnRevive");

	APwndCharacterGUTS_ModifyRepOwnRevive_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnRemotePwn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnRemotePwnAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnRemotePwn(const struct FPwndCharacterRepOwnRemotePwnAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnRemotePwn");

	APwndCharacterGUTS_ModifyRepOwnRemotePwn_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnRank
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnRankAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnRank(const struct FPwndCharacterRepOwnRankAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnRank");

	APwndCharacterGUTS_ModifyRepOwnRank_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnPwn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnPwnAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnPwn(const struct FPwndCharacterRepOwnPwnAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnPwn");

	APwndCharacterGUTS_ModifyRepOwnPwn_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnMovementCustomAbility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnCustomAbilityAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnMovementCustomAbility(const struct FPwndCharacterRepOwnCustomAbilityAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnMovementCustomAbility");

	APwndCharacterGUTS_ModifyRepOwnMovementCustomAbility_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnHeat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnHeatAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnHeat(const struct FPwndCharacterRepOwnHeatAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnHeat");

	APwndCharacterGUTS_ModifyRepOwnHeat_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnGroundSlam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnGroundSlamAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnGroundSlam(const struct FPwndCharacterRepOwnGroundSlamAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnGroundSlam");

	APwndCharacterGUTS_ModifyRepOwnGroundSlam_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnGrappleHook
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnGrappleHookAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnGrappleHook(const struct FPwndCharacterRepOwnGrappleHookAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnGrappleHook");

	APwndCharacterGUTS_ModifyRepOwnGrappleHook_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnDash
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnDashAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnDash(const struct FPwndCharacterRepOwnDashAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnDash");

	APwndCharacterGUTS_ModifyRepOwnDash_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnCarryAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnCarry(const struct FPwndCharacterRepOwnCarryAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnCarry");

	APwndCharacterGUTS_ModifyRepOwnCarry_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnBaseAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnBase(const struct FPwndCharacterRepOwnBaseAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnBase");

	APwndCharacterGUTS_ModifyRepOwnBase_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepOwnAirHover
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepOwnAirHoverAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepOwnAirHover(const struct FPwndCharacterRepOwnAirHoverAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepOwnAirHover");

	APwndCharacterGUTS_ModifyRepOwnAirHover_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepNonRevive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepNonReviveAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepNonRevive(const struct FPwndCharacterRepNonReviveAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepNonRevive");

	APwndCharacterGUTS_ModifyRepNonRevive_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepNonRespawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepNonRespawnAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepNonRespawn(const struct FPwndCharacterRepNonRespawnAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepNonRespawn");

	APwndCharacterGUTS_ModifyRepNonRespawn_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepNonPwn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepNonPwnAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepNonPwn(const struct FPwndCharacterRepNonPwnAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepNonPwn");

	APwndCharacterGUTS_ModifyRepNonPwn_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepNonHeat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepNonHeatAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepNonHeat(const struct FPwndCharacterRepNonHeatAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepNonHeat");

	APwndCharacterGUTS_ModifyRepNonHeat_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepNonGroundSlam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepNonGroundSlamAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepNonGroundSlam(const struct FPwndCharacterRepNonGroundSlamAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepNonGroundSlam");

	APwndCharacterGUTS_ModifyRepNonGroundSlam_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepNonCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepNonCarryAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepNonCarry(const struct FPwndCharacterRepNonCarryAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepNonCarry");

	APwndCharacterGUTS_ModifyRepNonCarry_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepNonBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepNonBaseAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepNonBase(const struct FPwndCharacterRepNonBaseAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepNonBase");

	APwndCharacterGUTS_ModifyRepNonBase_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllWallRun
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepAllWallRunAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllWallRun(const struct FPwndCharacterRepAllWallRunAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllWallRun");

	APwndCharacterGUTS_ModifyRepAllWallRun_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllTankMode
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterMovementRepAllTankModeAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllTankMode(const struct FPwndCharacterMovementRepAllTankModeAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllTankMode");

	APwndCharacterGUTS_ModifyRepAllTankMode_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllRevive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepAllReviveAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllRevive(const struct FPwndCharacterRepAllReviveAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllRevive");

	APwndCharacterGUTS_ModifyRepAllRevive_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllPwn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepAllPwnAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllPwn(const struct FPwndCharacterRepAllPwnAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllPwn");

	APwndCharacterGUTS_ModifyRepAllPwn_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllMovementBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterMovementRepAllBaseAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllMovementBase(const struct FPwndCharacterMovementRepAllBaseAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllMovementBase");

	APwndCharacterGUTS_ModifyRepAllMovementBase_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllGravity
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepAllGravityAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllGravity(const struct FPwndCharacterRepAllGravityAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllGravity");

	APwndCharacterGUTS_ModifyRepAllGravity_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllDash
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepAllDashAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllDash(const struct FPwndCharacterRepAllDashAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllDash");

	APwndCharacterGUTS_ModifyRepAllDash_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepAllCarryAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllCarry(const struct FPwndCharacterRepAllCarryAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllCarry");

	APwndCharacterGUTS_ModifyRepAllCarry_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyRepAllBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndCharacterRepAllBaseAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyRepAllBase(const struct FPwndCharacterRepAllBaseAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyRepAllBase");

	APwndCharacterGUTS_ModifyRepAllBase_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FDynamicAttributeComponentTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyHealth(const struct FDynamicAttributeComponentTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyHealth");

	APwndCharacterGUTS_ModifyHealth_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyGroundVerticalRJ
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FRocketJumpTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyGroundVerticalRJ(const struct FRocketJumpTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyGroundVerticalRJ");

	APwndCharacterGUTS_ModifyGroundVerticalRJ_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyGroundHorizontalRJ
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FRocketJumpTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyGroundHorizontalRJ(const struct FRocketJumpTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyGroundHorizontalRJ");

	APwndCharacterGUTS_ModifyGroundHorizontalRJ_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyDamageReduction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FDynamicAttributeComponentTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyDamageReduction(const struct FDynamicAttributeComponentTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyDamageReduction");

	APwndCharacterGUTS_ModifyDamageReduction_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyArmor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FDynamicAttributeComponentTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyArmor(const struct FDynamicAttributeComponentTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyArmor");

	APwndCharacterGUTS_ModifyArmor_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyAirRJ
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FRocketJumpTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyAirRJ(const struct FRocketJumpTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyAirRJ");

	APwndCharacterGUTS_ModifyAirRJ_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.ModifyAirDownwardRJ
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FRocketJumpTuningAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacterGUTS*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacterGUTS* APwndCharacterGUTS::ModifyAirDownwardRJ(const struct FRocketJumpTuningAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.ModifyAirDownwardRJ");

	APwndCharacterGUTS_ModifyAirDownwardRJ_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnRevive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnRevive ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnRevive APwndCharacterGUTS::K2ReadRepOwnerPawnRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnRevive");

	APwndCharacterGUTS_K2ReadRepOwnerPawnRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnRemotePwn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnRemotePwn ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnRemotePwn APwndCharacterGUTS::K2ReadRepOwnerPawnRemotePwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnRemotePwn");

	APwndCharacterGUTS_K2ReadRepOwnerPawnRemotePwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnRank ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnRank APwndCharacterGUTS::K2ReadRepOwnerPawnRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnRank");

	APwndCharacterGUTS_K2ReadRepOwnerPawnRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnPwn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnPwn ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnPwn APwndCharacterGUTS::K2ReadRepOwnerPawnPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnPwn");

	APwndCharacterGUTS_K2ReadRepOwnerPawnPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnHeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnHeat ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnHeat APwndCharacterGUTS::K2ReadRepOwnerPawnHeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnHeat");

	APwndCharacterGUTS_K2ReadRepOwnerPawnHeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnCarry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnCarry ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnCarry APwndCharacterGUTS::K2ReadRepOwnerPawnCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepOwnerPawnCarry");

	APwndCharacterGUTS_K2ReadRepOwnerPawnCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnRevive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepNonRevive ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepNonRevive APwndCharacterGUTS::K2ReadRepNonePawnRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnRevive");

	APwndCharacterGUTS_K2ReadRepNonePawnRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnRespawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepNonRespawn ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepNonRespawn APwndCharacterGUTS::K2ReadRepNonePawnRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnRespawn");

	APwndCharacterGUTS_K2ReadRepNonePawnRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnPwn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepNonPwn ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepNonPwn APwndCharacterGUTS::K2ReadRepNonePawnPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnPwn");

	APwndCharacterGUTS_K2ReadRepNonePawnPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnHeat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepNonHeat ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepNonHeat APwndCharacterGUTS::K2ReadRepNonePawnHeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnHeat");

	APwndCharacterGUTS_K2ReadRepNonePawnHeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepNonCarry ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepNonCarry APwndCharacterGUTS::K2ReadRepNonePawnCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnCarry");

	APwndCharacterGUTS_K2ReadRepNonePawnCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepNonBase ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepNonBase APwndCharacterGUTS::K2ReadRepNonePawnBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepNonePawnBase");

	APwndCharacterGUTS_K2ReadRepNonePawnBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnRevive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepAllRevive ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepAllRevive APwndCharacterGUTS::K2ReadRepAllPawnRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnRevive");

	APwndCharacterGUTS_K2ReadRepAllPawnRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnPwn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepAllPwn ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepAllPwn APwndCharacterGUTS::K2ReadRepAllPawnPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnPwn");

	APwndCharacterGUTS_K2ReadRepAllPawnPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnDash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepAllDash ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepAllDash APwndCharacterGUTS::K2ReadRepAllPawnDash()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnDash");

	APwndCharacterGUTS_K2ReadRepAllPawnDash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnCarry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepAllCarry ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepAllCarry APwndCharacterGUTS::K2ReadRepAllPawnCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnCarry");

	APwndCharacterGUTS_K2ReadRepAllPawnCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepAllBase ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepAllBase APwndCharacterGUTS::K2ReadRepAllPawnBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.K2ReadRepAllPawnBase");

	APwndCharacterGUTS_K2ReadRepAllPawnBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalShieldsPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacterGUTS::GetTotalShieldsPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalShieldsPct");

	APwndCharacterGUTS_GetTotalShieldsPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalShieldsAndArmorPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacterGUTS::GetTotalShieldsAndArmorPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalShieldsAndArmorPct");

	APwndCharacterGUTS_GetTotalShieldsAndArmorPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalShieldsAndArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetTotalShieldsAndArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalShieldsAndArmor");

	APwndCharacterGUTS_GetTotalShieldsAndArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalShields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetTotalShields()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalShields");

	APwndCharacterGUTS_GetTotalShields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacterGUTS::GetTotalHealthPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalHealthPct");

	APwndCharacterGUTS_GetTotalHealthPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalHealthAndShieldsAndArmorPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacterGUTS::GetTotalHealthAndShieldsAndArmorPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalHealthAndShieldsAndArmorPct");

	APwndCharacterGUTS_GetTotalHealthAndShieldsAndArmorPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalHealthAndShieldsAndArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetTotalHealthAndShieldsAndArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalHealthAndShieldsAndArmor");

	APwndCharacterGUTS_GetTotalHealthAndShieldsAndArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalHealthAndDamageReductionPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacterGUTS::GetTotalHealthAndDamageReductionPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalHealthAndDamageReductionPct");

	APwndCharacterGUTS_GetTotalHealthAndDamageReductionPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalHealthAndDamageReduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetTotalHealthAndDamageReduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalHealthAndDamageReduction");

	APwndCharacterGUTS_GetTotalHealthAndDamageReduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetTotalHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalHealth");

	APwndCharacterGUTS_GetTotalHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalDamageReductionPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacterGUTS::GetTotalDamageReductionPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalDamageReductionPct");

	APwndCharacterGUTS_GetTotalDamageReductionPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalDamageReduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetTotalDamageReduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalDamageReduction");

	APwndCharacterGUTS_GetTotalDamageReduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalArmorPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacterGUTS::GetTotalArmorPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalArmorPct");

	APwndCharacterGUTS_GetTotalArmorPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetTotalArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetTotalArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetTotalArmor");

	APwndCharacterGUTS_GetTotalArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetMaxShieldsAndArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetMaxShieldsAndArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetMaxShieldsAndArmor");

	APwndCharacterGUTS_GetMaxShieldsAndArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetMaxShields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetMaxShields()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetMaxShields");

	APwndCharacterGUTS_GetMaxShields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetMaxHealthAndShieldsAndArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetMaxHealthAndShieldsAndArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetMaxHealthAndShieldsAndArmor");

	APwndCharacterGUTS_GetMaxHealthAndShieldsAndArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetMaxHealthAndDamageReduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetMaxHealthAndDamageReduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetMaxHealthAndDamageReduction");

	APwndCharacterGUTS_GetMaxHealthAndDamageReduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetMaxHealth");

	APwndCharacterGUTS_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetMaxDamageReduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetMaxDamageReduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetMaxDamageReduction");

	APwndCharacterGUTS_GetMaxDamageReduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterGUTS.GetMaxArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacterGUTS::GetMaxArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterGUTS.GetMaxArmor");

	APwndCharacterGUTS_GetMaxArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.Suicide
// (Native, Public, BlueprintCallable)

void APwndCharacter::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.Suicide");

	APwndCharacter_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.StopVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicateToAll                (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::StopVO(const struct FName& VoiceOverID, bool bReplicateToAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.StopVO");

	APwndCharacter_StopVO_Params params;
	params.VoiceOverID = VoiceOverID;
	params.bReplicateToAll = bReplicateToAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.StopCarry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::StopCarry(float ThrowPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.StopCarry");

	APwndCharacter_StopCarry_Params params;
	params.ThrowPower = ThrowPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.StopAllFire
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::StopAllFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.StopAllFire");

	APwndCharacter_StopAllFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.StartRevive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::StartRevive(class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.StartRevive");

	APwndCharacter_StartRevive_Params params;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.StartPwnage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::StartPwnage(class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.StartPwnage");

	APwndCharacter_StartPwnage_Params params;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.StartCarry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::StartCarry(class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.StartCarry");

	APwndCharacter_StartCarry_Params params;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.SpecialMovementRequireHold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::SpecialMovementRequireHold()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SpecialMovementRequireHold");

	APwndCharacter_SpecialMovementRequireHold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.SetWeaponSkin
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponSkinClass                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::SetWeaponSkin(class UClass* WeaponSkinClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetWeaponSkin");

	APwndCharacter_SetWeaponSkin_Params params;
	params.WeaponSkinClass = WeaponSkinClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.SetWeaponSecondaryAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUpgrade                       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndAbilityWeapon*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAbilityWeapon* APwndCharacter::SetWeaponSecondaryAbility(class UClass* WeaponClass, bool bUpgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetWeaponSecondaryAbility");

	APwndCharacter_SetWeaponSecondaryAbility_Params params;
	params.WeaponClass = WeaponClass;
	params.bUpgrade = bUpgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.SetWeaponPrimaryAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUpgrade                       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndAbilityWeapon*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAbilityWeapon* APwndCharacter::SetWeaponPrimaryAbility(class UClass* WeaponClass, bool bUpgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetWeaponPrimaryAbility");

	APwndCharacter_SetWeaponPrimaryAbility_Params params;
	params.WeaponClass = WeaponClass;
	params.bUpgrade = bUpgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.SetWeaponFireEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetWeaponFireEnabled(bool bEnabled, TEnumAsByte<EePawnWeapon> WeaponType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetWeaponFireEnabled");

	APwndCharacter_SetWeaponFireEnabled_Params params;
	params.bEnabled = bEnabled;
	params.WeaponType = WeaponType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponSkinClass                (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* APwndCharacter::SetWeapon(class UClass* WeaponClass, class UClass* WeaponSkinClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetWeapon");

	APwndCharacter_SetWeapon_Params params;
	params.WeaponClass = WeaponClass;
	params.WeaponSkinClass = WeaponSkinClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.SetWallRocketJumpingEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetWallRocketJumpingEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetWallRocketJumpingEnabled");

	APwndCharacter_SetWallRocketJumpingEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetVerticalRocketJumpingEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetVerticalRocketJumpingEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetVerticalRocketJumpingEnabled");

	APwndCharacter_SetVerticalRocketJumpingEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetSpecialMovementEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetSpecialMovementEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetSpecialMovementEnabled");

	APwndCharacter_SetSpecialMovementEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetSkinVectorParam
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 ParamOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            inIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   inParam                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InValue                        (Parm, IsPlainOldData)

void APwndCharacter::SetSkinVectorParam(class UObject* ParamOwner, int inIndex, const struct FName& inParam, const struct FVector& InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetSkinVectorParam");

	APwndCharacter_SetSkinVectorParam_Params params;
	params.ParamOwner = ParamOwner;
	params.inIndex = inIndex;
	params.inParam = inParam;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetSkinTextureParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 ParamOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            inIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   inParam                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetSkinTextureParam(class UObject* ParamOwner, int inIndex, const struct FName& inParam, class UTexture* InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetSkinTextureParam");

	APwndCharacter_SetSkinTextureParam_Params params;
	params.ParamOwner = ParamOwner;
	params.inIndex = inIndex;
	params.inParam = inParam;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetSkinScalarParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 ParamOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            inIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   inParam                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetSkinScalarParam(class UObject* ParamOwner, int inIndex, const struct FName& inParam, float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetSkinScalarParam");

	APwndCharacter_SetSkinScalarParam_Params params;
	params.ParamOwner = ParamOwner;
	params.inIndex = inIndex;
	params.inParam = inParam;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetSkinMaterialParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 ParamOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            inIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   inParam                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetSkinMaterialParam(class UObject* ParamOwner, int inIndex, const struct FName& inParam, class UMaterialInterface* InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetSkinMaterialParam");

	APwndCharacter_SetSkinMaterialParam_Params params;
	params.ParamOwner = ParamOwner;
	params.inIndex = inIndex;
	params.inParam = inParam;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetSkinColorParam
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 ParamOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            inIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   inParam                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            InValue                        (Parm, IsPlainOldData)

void APwndCharacter::SetSkinColorParam(class UObject* ParamOwner, int inIndex, const struct FName& inParam, const struct FLinearColor& InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetSkinColorParam");

	APwndCharacter_SetSkinColorParam_Params params;
	params.ParamOwner = ParamOwner;
	params.inIndex = inIndex;
	params.inParam = inParam;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetRocketJumpingEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetRocketJumpingEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetRocketJumpingEnabled");

	APwndCharacter_SetRocketJumpingEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetPerk
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  PerkClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndInventoryPerk*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndInventoryPerk* APwndCharacter::SetPerk(class UClass* PerkClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetPerk");

	APwndCharacter_SetPerk_Params params;
	params.PerkClass = PerkClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.SetMultiMovementEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bGroundMovementEnabled         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAirMovementEnabled            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRocketJumpingEnabled          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFloorRocketJumpingEnabled     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWallRocketJumpingEnabled      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHorizontalRocketJumpingEnabled (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bVerticalRocketJumpingEnabled  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpecialMovementEnabled        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMantleEnabled                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetMultiMovementEnabled(bool bGroundMovementEnabled, bool bAirMovementEnabled, bool bRocketJumpingEnabled, bool bFloorRocketJumpingEnabled, bool bWallRocketJumpingEnabled, bool bHorizontalRocketJumpingEnabled, bool bVerticalRocketJumpingEnabled, bool bSpecialMovementEnabled, bool bMantleEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetMultiMovementEnabled");

	APwndCharacter_SetMultiMovementEnabled_Params params;
	params.bGroundMovementEnabled = bGroundMovementEnabled;
	params.bAirMovementEnabled = bAirMovementEnabled;
	params.bRocketJumpingEnabled = bRocketJumpingEnabled;
	params.bFloorRocketJumpingEnabled = bFloorRocketJumpingEnabled;
	params.bWallRocketJumpingEnabled = bWallRocketJumpingEnabled;
	params.bHorizontalRocketJumpingEnabled = bHorizontalRocketJumpingEnabled;
	params.bVerticalRocketJumpingEnabled = bVerticalRocketJumpingEnabled;
	params.bSpecialMovementEnabled = bSpecialMovementEnabled;
	params.bMantleEnabled = bMantleEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetMantleEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetMantleEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetMantleEnabled");

	APwndCharacter_SetMantleEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetInteractionAnimSyncInfo
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EInteractionSegmentType> inSegmentType                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            inSequenceIndex                (Parm, ZeroConstructor, IsPlainOldData)
// float                          inCurrentTime                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetInteractionAnimSyncInfo(TEnumAsByte<EInteractionSegmentType> inSegmentType, int inSequenceIndex, float inCurrentTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetInteractionAnimSyncInfo");

	APwndCharacter_SetInteractionAnimSyncInfo_Params params;
	params.inSegmentType = inSegmentType;
	params.inSequenceIndex = inSequenceIndex;
	params.inCurrentTime = inCurrentTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetHorizontalRocketJumpingEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetHorizontalRocketJumpingEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetHorizontalRocketJumpingEnabled");

	APwndCharacter_SetHorizontalRocketJumpingEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetGroundMovementEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetGroundMovementEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetGroundMovementEnabled");

	APwndCharacter_SetGroundMovementEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetGibbed
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndCharacter::SetGibbed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetGibbed");

	APwndCharacter_SetGibbed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetFloorRocketJumpingEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetFloorRocketJumpingEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetFloorRocketJumpingEnabled");

	APwndCharacter_SetFloorRocketJumpingEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCollisionModifier_ReflectProjectiles
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAlly                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReflect                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCollisionModifier_ReflectProjectiles(bool bAlly, bool bReflect)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCollisionModifier_ReflectProjectiles");

	APwndCharacter_SetCollisionModifier_ReflectProjectiles_Params params;
	params.bAlly = bAlly;
	params.bReflect = bReflect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCollisionModifier_IgnoreStuckProjectiles
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAlly                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCollisionModifier_IgnoreStuckProjectiles(bool bAlly, bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCollisionModifier_IgnoreStuckProjectiles");

	APwndCharacter_SetCollisionModifier_IgnoreStuckProjectiles_Params params;
	params.bAlly = bAlly;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCollisionModifier_IgnoreShields
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAlly                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCollisionModifier_IgnoreShields(bool bAlly, bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCollisionModifier_IgnoreShields");

	APwndCharacter_SetCollisionModifier_IgnoreShields_Params params;
	params.bAlly = bAlly;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCollisionModifier_IgnoreProjectiles
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAlly                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCollisionModifier_IgnoreProjectiles(bool bAlly, bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCollisionModifier_IgnoreProjectiles");

	APwndCharacter_SetCollisionModifier_IgnoreProjectiles_Params params;
	params.bAlly = bAlly;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCollisionModifier_IgnoreCharacters
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAlly                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCollisionModifier_IgnoreCharacters(bool bAlly, bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCollisionModifier_IgnoreCharacters");

	APwndCharacter_SetCollisionModifier_IgnoreCharacters_Params params;
	params.bAlly = bAlly;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCollisionModifier_IgnoreAOE
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAlly                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCollisionModifier_IgnoreAOE(bool bAlly, bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCollisionModifier_IgnoreAOE");

	APwndCharacter_SetCollisionModifier_IgnoreAOE_Params params;
	params.bAlly = bAlly;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCollisionModifier_DeflectProjectiles
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAlly                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDeflect                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDeflectInNormalDir            (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCollisionModifier_DeflectProjectiles(bool bAlly, bool bDeflect, bool bDeflectInNormalDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCollisionModifier_DeflectProjectiles");

	APwndCharacter_SetCollisionModifier_DeflectProjectiles_Params params;
	params.bAlly = bAlly;
	params.bDeflect = bDeflect;
	params.bDeflectInNormalDir = bDeflectInNormalDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCloaked
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bCloaked                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCloaked(bool bCloaked)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCloaked");

	APwndCharacter_SetCloaked_Params params;
	params.bCloaked = bCloaked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCharacterSkinByIndex
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCharacterSkinByIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCharacterSkinByIndex");

	APwndCharacter_SetCharacterSkinByIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCharacterSkinByGuid
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   CharacterSkinGuid              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndCharacter::SetCharacterSkinByGuid(const struct FGuid& CharacterSkinGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCharacterSkinByGuid");

	APwndCharacter_SetCharacterSkinByGuid_Params params;
	params.CharacterSkinGuid = CharacterSkinGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetCharacterSkin
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  CharacterSkinClass             (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetCharacterSkin(class UClass* CharacterSkinClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetCharacterSkin");

	APwndCharacter_SetCharacterSkin_Params params;
	params.CharacterSkinClass = CharacterSkinClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetAllowRegen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsAllowed                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetAllowRegen(bool IsAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetAllowRegen");

	APwndCharacter_SetAllowRegen_Params params;
	params.IsAllowed = IsAllowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.SetAirMovementEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::SetAirMovementEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.SetAirMovementEnabled");

	APwndCharacter_SetAirMovementEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ServerSuicide
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APwndCharacter::ServerSuicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ServerSuicide");

	APwndCharacter_ServerSuicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ServerStopCarry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ServerStopCarry(float ThrowPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ServerStopCarry");

	APwndCharacter_ServerStopCarry_Params params;
	params.ThrowPower = ThrowPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ServerStartRevive
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ServerStartRevive(class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ServerStartRevive");

	APwndCharacter_ServerStartRevive_Params params;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ServerStartPwnage
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ServerStartPwnage(class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ServerStartPwnage");

	APwndCharacter_ServerStartPwnage_Params params;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ServerStartCarryButton
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APwndCharacter::ServerStartCarryButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ServerStartCarryButton");

	APwndCharacter_ServerStartCarryButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ServerStartCarry
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ServerStartCarry(class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ServerStartCarry");

	APwndCharacter_ServerStartCarry_Params params;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ServerReleaseCarryButton
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APwndCharacter::ServerReleaseCarryButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ServerReleaseCarryButton");

	APwndCharacter_ServerReleaseCarryButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.RemoveSkinParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 ParamOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            inIndex                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   inParam                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::RemoveSkinParam(class UObject* ParamOwner, int inIndex, const struct FName& inParam)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.RemoveSkinParam");

	APwndCharacter_RemoveSkinParam_Params params;
	params.ParamOwner = ParamOwner;
	params.inIndex = inIndex;
	params.inParam = inParam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.RemoveInventoryItems
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  InvClass                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APwndInventory*>  RemovedInventory               (Parm, OutParm, ZeroConstructor)
// bool                           bExact                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDestroy                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacter::RemoveInventoryItems(class UClass* InvClass, bool bExact, bool bDestroy, TArray<class APwndInventory*>* RemovedInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.RemoveInventoryItems");

	APwndCharacter_RemoveInventoryItems_Params params;
	params.InvClass = InvClass;
	params.bExact = bExact;
	params.bDestroy = bDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RemovedInventory != nullptr)
		*RemovedInventory = params.RemovedInventory;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.RemoveHeatModifiers
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          inHeatPerSec                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          inHeatCostModifier             (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::RemoveHeatModifiers(class AActor* Causer, float inHeatPerSec, float inHeatCostModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.RemoveHeatModifiers");

	APwndCharacter_RemoveHeatModifiers_Params params;
	params.Causer = Causer;
	params.inHeatPerSec = inHeatPerSec;
	params.inHeatCostModifier = inHeatCostModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.RemoveDotEffect
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  DotEffect                      (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             DOTWeapon                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DOTWeaponClass                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::RemoveDotEffect(class UClass* DotEffect, class AController* EventInstigator, class AActor* DamageCauser, class APwndWeapon* DOTWeapon, class UClass* DOTWeaponClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.RemoveDotEffect");

	APwndCharacter_RemoveDotEffect_Params params;
	params.DotEffect = DotEffect;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DOTWeapon = DOTWeapon;
	params.DOTWeaponClass = DOTWeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.RemoveCharacterSkinMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APwndCharacter::RemoveCharacterSkinMesh(class UMeshComponent* Comp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.RemoveCharacterSkinMesh");

	APwndCharacter_RemoveCharacterSkinMesh_Params params;
	params.Comp = Comp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.RemoveAllSkinParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 ParamOwner                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::RemoveAllSkinParams(class UObject* ParamOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.RemoveAllSkinParams");

	APwndCharacter_RemoveAllSkinParams_Params params;
	params.ParamOwner = ParamOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ReleaseReloadWeapon
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::ReleaseReloadWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ReleaseReloadWeapon");

	APwndCharacter_ReleaseReloadWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ReleaseFireSecondaryAbility
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::ReleaseFireSecondaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ReleaseFireSecondaryAbility");

	APwndCharacter_ReleaseFireSecondaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ReleaseFirePrimaryAbility
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::ReleaseFirePrimaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ReleaseFirePrimaryAbility");

	APwndCharacter_ReleaseFirePrimaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ReleaseFire
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::ReleaseFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ReleaseFire");

	APwndCharacter_ReleaseFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.PressReloadWeapon
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::PressReloadWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.PressReloadWeapon");

	APwndCharacter_PressReloadWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.PressFireSecondaryAbility
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::PressFireSecondaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.PressFireSecondaryAbility");

	APwndCharacter_PressFireSecondaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.PressFirePrimaryAbility
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::PressFirePrimaryAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.PressFirePrimaryAbility");

	APwndCharacter_PressFirePrimaryAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.PressFire
// (Final, Native, Public, BlueprintCallable)

void APwndCharacter::PressFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.PressFire");

	APwndCharacter_PressFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.PostEventTrigger
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bGoUpClassTree                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::PostEventTrigger(const struct FPostedEventTrigger& Trig, bool bGoUpClassTree)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.PostEventTrigger");

	APwndCharacter_PostEventTrigger_Params params;
	params.Trig = Trig;
	params.bGoUpClassTree = bGoUpClassTree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.PlayVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicateToAll                (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::PlayVO(const struct FName& VoiceOverID, bool bInterrupt, bool bReplicateToAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.PlayVO");

	APwndCharacter_PlayVO_Params params;
	params.VoiceOverID = VoiceOverID;
	params.bInterrupt = bInterrupt;
	params.bReplicateToAll = bReplicateToAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.PlayCustomVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicateToAll                (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::PlayCustomVO(class USoundBase* customVO, bool bInterrupt, bool bReplicateToAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.PlayCustomVO");

	APwndCharacter_PlayCustomVO_Params params;
	params.customVO = customVO;
	params.bInterrupt = bInterrupt;
	params.bReplicateToAll = bReplicateToAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OverrideWeaponMaterials
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      MatIfc                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bThirdPerson                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OverrideWeaponMaterials(class UMaterialInterface* MatIfc, bool bFirstPerson, bool bThirdPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OverrideWeaponMaterials");

	APwndCharacter_OverrideWeaponMaterials_Params params;
	params.MatIfc = MatIfc;
	params.bFirstPerson = bFirstPerson;
	params.bThirdPerson = bThirdPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnWeaponFire
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndWeapon*             FiredWeapon                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnWeaponFire(class APwndWeapon* FiredWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnWeaponFire");

	APwndCharacter_OnWeaponFire_Params params;
	params.FiredWeapon = FiredWeapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnUpdateGibbed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsGibbed                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnUpdateGibbed(bool bIsGibbed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnUpdateGibbed");

	APwndCharacter_OnUpdateGibbed_Params params;
	params.bIsGibbed = bIsGibbed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnSpecialMovementFailed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bAllowSpecialMove              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpecialMoveFailed             (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnSpecialMovementFailed(bool bAllowSpecialMove, bool bSpecialMoveFailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnSpecialMovementFailed");

	APwndCharacter_OnSpecialMovementFailed_Params params;
	params.bAllowSpecialMove = bAllowSpecialMove;
	params.bSpecialMoveFailed = bSpecialMoveFailed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRocketJumpFailed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bCanRocketJump                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRocketJumpFailed              (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRocketJumpFailed(bool bCanRocketJump, bool bRocketJumpFailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRocketJumpFailed");

	APwndCharacter_OnRocketJumpFailed_Params params;
	params.bCanRocketJump = bCanRocketJump;
	params.bRocketJumpFailed = bRocketJumpFailed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRocketJump
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FReplicatedRocketJump   JumpInfo                       (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnRocketJump(const struct FReplicatedRocketJump& JumpInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRocketJump");

	APwndCharacter_OnRocketJump_Params params;
	params.JumpInfo = JumpInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_WeaponSecondaryAbility
// (Native, Protected)
// Parameters:
// class APwndAbilityWeapon*      OldWeaponSecondaryAbility      (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_WeaponSecondaryAbility(class APwndAbilityWeapon* OldWeaponSecondaryAbility)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_WeaponSecondaryAbility");

	APwndCharacter_OnRep_WeaponSecondaryAbility_Params params;
	params.OldWeaponSecondaryAbility = OldWeaponSecondaryAbility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_WeaponPrimaryAbility
// (Native, Protected)
// Parameters:
// class APwndAbilityWeapon*      OldWeaponPrimaryAbility        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_WeaponPrimaryAbility(class APwndAbilityWeapon* OldWeaponPrimaryAbility)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_WeaponPrimaryAbility");

	APwndCharacter_OnRep_WeaponPrimaryAbility_Params params;
	params.OldWeaponPrimaryAbility = OldWeaponPrimaryAbility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_Weapon
// (Native, Protected)
// Parameters:
// class APwndWeapon*             OldWeapon                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_Weapon(class APwndWeapon* OldWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_Weapon");

	APwndCharacter_OnRep_Weapon_Params params;
	params.OldWeapon = OldWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_ServerMovementTimeDilation
// (Native, Protected)
// Parameters:
// float                          OldDilation                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_ServerMovementTimeDilation(float OldDilation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_ServerMovementTimeDilation");

	APwndCharacter_OnRep_ServerMovementTimeDilation_Params params;
	params.OldDilation = OldDilation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_ServerCustomTimeDilation
// (Native, Protected)
// Parameters:
// float                          OldDilation                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_ServerCustomTimeDilation(float OldDilation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_ServerCustomTimeDilation");

	APwndCharacter_OnRep_ServerCustomTimeDilation_Params params;
	params.OldDilation = OldDilation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_ServerActionTimeDilation
// (Native, Protected)
// Parameters:
// float                          OldDilation                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_ServerActionTimeDilation(float OldDilation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_ServerActionTimeDilation");

	APwndCharacter_OnRep_ServerActionTimeDilation_Params params;
	params.OldDilation = OldDilation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_RepActionTimeStamp
// (Native, Protected)
// Parameters:
// float                          OldRepActionTimeStamp          (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_RepActionTimeStamp(float OldRepActionTimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_RepActionTimeStamp");

	APwndCharacter_OnRep_RepActionTimeStamp_Params params;
	params.OldRepActionTimeStamp = OldRepActionTimeStamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_PwnBodyStackActor
// (Native, Protected)
// Parameters:
// class APwndBodyStackActor*     OldPwnBodyStackActor           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_PwnBodyStackActor(class APwndBodyStackActor* OldPwnBodyStackActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_PwnBodyStackActor");

	APwndCharacter_OnRep_PwnBodyStackActor_Params params;
	params.OldPwnBodyStackActor = OldPwnBodyStackActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_PlayerState
// (Native, Protected)

void APwndCharacter::OnRep_PlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_PlayerState");

	APwndCharacter_OnRep_PlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_Perk
// (Native, Protected)
// Parameters:
// class APwndInventoryPerk*      OldPerk                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_Perk(class APwndInventoryPerk* OldPerk)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_Perk");

	APwndCharacter_OnRep_Perk_Params params;
	params.OldPerk = OldPerk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_LastRocketJumpInfo
// (Native, Protected)

void APwndCharacter::OnRep_LastRocketJumpInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_LastRocketJumpInfo");

	APwndCharacter_OnRep_LastRocketJumpInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_LastReceiveHealEvent
// (Native, Protected)

void APwndCharacter::OnRep_LastReceiveHealEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_LastReceiveHealEvent");

	APwndCharacter_OnRep_LastReceiveHealEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_LastReceiveDamageEvent
// (Native, Protected)

void APwndCharacter::OnRep_LastReceiveDamageEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_LastReceiveDamageEvent");

	APwndCharacter_OnRep_LastReceiveDamageEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_EnemyCollisionModifiers
// (Native, Protected)

void APwndCharacter::OnRep_EnemyCollisionModifiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_EnemyCollisionModifiers");

	APwndCharacter_OnRep_EnemyCollisionModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_DeathDamageEvent
// (Native, Protected)

void APwndCharacter::OnRep_DeathDamageEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_DeathDamageEvent");

	APwndCharacter_OnRep_DeathDamageEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_CurrentAction
// (Native, Protected, HasOutParms)
// Parameters:
// struct FPwndCharacterAction    OldAction                      (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnRep_CurrentAction(const struct FPwndCharacterAction& OldAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_CurrentAction");

	APwndCharacter_OnRep_CurrentAction_Params params;
	params.OldAction = OldAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_Controller
// (Native, Protected)

void APwndCharacter::OnRep_Controller()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_Controller");

	APwndCharacter_OnRep_Controller_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_CompletedAction
// (Native, Protected, HasOutParms)
// Parameters:
// struct FPwndCharacterActionCompletion OldCompletedAction             (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnRep_CompletedAction(const struct FPwndCharacterActionCompletion& OldCompletedAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_CompletedAction");

	APwndCharacter_OnRep_CompletedAction_Params params;
	params.OldCompletedAction = OldCompletedAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_CharacterSkin
// (Native, Protected)
// Parameters:
// class UClass*                  OldCharacterSkin               (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_CharacterSkin(class UClass* OldCharacterSkin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_CharacterSkin");

	APwndCharacter_OnRep_CharacterSkin_Params params;
	params.OldCharacterSkin = OldCharacterSkin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_bNeutralPwn
// (Native, Protected)
// Parameters:
// bool                           OldbNeutralPwn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_bNeutralPwn(bool OldbNeutralPwn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_bNeutralPwn");

	APwndCharacter_OnRep_bNeutralPwn_Params params;
	params.OldbNeutralPwn = OldbNeutralPwn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_bHybridNeutralPwn
// (Native, Protected)
// Parameters:
// bool                           OldbHybridNeutralPwn           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_bHybridNeutralPwn(bool OldbHybridNeutralPwn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_bHybridNeutralPwn");

	APwndCharacter_OnRep_bHybridNeutralPwn_Params params;
	params.OldbHybridNeutralPwn = OldbHybridNeutralPwn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_bGibbed
// (Native, Protected)
// Parameters:
// bool                           OldbGibbed                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnRep_bGibbed(bool OldbGibbed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_bGibbed");

	APwndCharacter_OnRep_bGibbed_Params params;
	params.OldbGibbed = OldbGibbed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnRep_AllyCollisionModifiers
// (Native, Protected)

void APwndCharacter::OnRep_AllyCollisionModifiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnRep_AllyCollisionModifiers");

	APwndCharacter_OnRep_AllyCollisionModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnPostEventTrigger
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Trigger                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Count                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndCharacter::OnPostEventTrigger(TEnumAsByte<EeEventTrigger> Trigger, float Count, TArray<class UObject*> Others)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnPostEventTrigger");

	APwndCharacter_OnPostEventTrigger_Params params;
	params.Trigger = Trigger;
	params.Count = Count;
	params.Others = Others;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnInventoryUsed
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnInventoryUsed(class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnInventoryUsed");

	APwndCharacter_OnInventoryUsed_Params params;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnHeatStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeHeatStatus>      NewHeatStatus                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeHeatStatus>      OldHeatStatus                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnHeatStatusChanged(TEnumAsByte<EeHeatStatus> NewHeatStatus, TEnumAsByte<EeHeatStatus> OldHeatStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnHeatStatusChanged");

	APwndCharacter_OnHeatStatusChanged_Params params;
	params.NewHeatStatus = NewHeatStatus;
	params.OldHeatStatus = OldHeatStatus;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnHealReceived
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndReplicatedHealEvent HealEvent                      (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnHealReceived(const struct FPwndReplicatedHealEvent& HealEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnHealReceived");

	APwndCharacter_OnHealReceived_Params params;
	params.HealEvent = HealEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnHealInflicted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndReplicatedHealEvent HealEvent                      (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnHealInflicted(const struct FPwndReplicatedHealEvent& HealEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnHealInflicted");

	APwndCharacter_OnHealInflicted_Params params;
	params.HealEvent = HealEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnExitedAOE
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndAOE*                AOE                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnExitedAOE(class APwndAOE* AOE)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnExitedAOE");

	APwndCharacter_OnExitedAOE_Params params;
	params.AOE = AOE;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnEnteredAOE
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndAOE*                AOE                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnEnteredAOE(class APwndAOE* AOE)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnEnteredAOE");

	APwndCharacter_OnEnteredAOE_Params params;
	params.AOE = AOE;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnEndOverlap
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnEndOverlap");

	APwndCharacter_OnEndOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnDrawHUD
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class APwndHUD*                HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ViewLocation                   (Parm, IsPlainOldData)
// struct FRotator                ViewRotation                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasOrigin                   (Parm, IsPlainOldData)
// struct FVector2D               CanvasSize                     (Parm, IsPlainOldData)

void APwndCharacter::OnDrawHUD(class APwndHUD* HUD, class UCanvas* Canvas, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, const struct FVector2D& CanvasOrigin, const struct FVector2D& CanvasSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnDrawHUD");

	APwndCharacter_OnDrawHUD_Params params;
	params.HUD = HUD;
	params.Canvas = Canvas;
	params.ViewLocation = ViewLocation;
	params.ViewRotation = ViewRotation;
	params.CanvasOrigin = CanvasOrigin;
	params.CanvasSize = CanvasSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnDotRemoved
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPwndDOTComponent*       DotComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APwndCharacter::OnDotRemoved(class UPwndDOTComponent* DotComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnDotRemoved");

	APwndCharacter_OnDotRemoved_Params params;
	params.DotComp = DotComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnDotAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPwndDOTComponent*       DotComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APwndCharacter::OnDotAdded(class UPwndDOTComponent* DotComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnDotAdded");

	APwndCharacter_OnDotAdded_Params params;
	params.DotComp = DotComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnDamageReceived
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnDamageReceived(const struct FPwndReplicatedDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnDamageReceived");

	APwndCharacter_OnDamageReceived_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnDamageInflicted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnDamageInflicted(const struct FPwndReplicatedDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnDamageInflicted");

	APwndCharacter_OnDamageInflicted_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnCompletedActionStateUpdated
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TEnumAsByte<EePawnActionState> State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndCharacterActionCompletion ActionCompleted                (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::OnCompletedActionStateUpdated(TEnumAsByte<EePawnActionState> State, bool bSuccess, const struct FPwndCharacterActionCompletion& ActionCompleted)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnCompletedActionStateUpdated");

	APwndCharacter_OnCompletedActionStateUpdated_Params params;
	params.State = State;
	params.bSuccess = bSuccess;
	params.ActionCompleted = ActionCompleted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnBeginOverlap
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndCharacter::OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnBeginOverlap");

	APwndCharacter_OnBeginOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnAwardRank
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            NewRank                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLocal                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnAwardRank(int NewRank, bool bLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnAwardRank");

	APwndCharacter_OnAwardRank_Params params;
	params.NewRank = NewRank;
	params.bLocal = bLocal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.OnActionStateUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EePawnActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnActionState> OldState                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::OnActionStateUpdated(TEnumAsByte<EePawnActionState> NewState, TEnumAsByte<EePawnActionState> OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.OnActionStateUpdated");

	APwndCharacter_OnActionStateUpdated_Params params;
	params.NewState = NewState;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.MatchOwnerCharacterSkin
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndCharacter::MatchOwnerCharacterSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.MatchOwnerCharacterSkin");

	APwndCharacter_MatchOwnerCharacterSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.IsWeaponFireEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnWeapon>      WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsWeaponFireEnabled(TEnumAsByte<EePawnWeapon> WeaponType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsWeaponFireEnabled");

	APwndCharacter_IsWeaponFireEnabled_Params params;
	params.WeaponType = WeaponType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsWallRunning
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsWallRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsWallRunning");

	APwndCharacter_IsWallRunning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsWallRocketJumpingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsWallRocketJumpingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsWallRocketJumpingEnabled");

	APwndCharacter_IsWallRocketJumpingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsVerticalRocketJumpingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsVerticalRocketJumpingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsVerticalRocketJumpingEnabled");

	APwndCharacter_IsVerticalRocketJumpingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsTornOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsTornOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsTornOff");

	APwndCharacter_IsTornOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsTopOfBodyStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsTopOfBodyStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsTopOfBodyStack");

	APwndCharacter_IsTopOfBodyStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsSpecialMovementTwoStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bFirstStage                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsSpecialMovementTwoStage(bool bFirstStage)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsSpecialMovementTwoStage");

	APwndCharacter_IsSpecialMovementTwoStage_Params params;
	params.bFirstStage = bFirstStage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsSpecialMovementEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsSpecialMovementEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsSpecialMovementEnabled");

	APwndCharacter_IsSpecialMovementEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsSpecialMovementDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsSpecialMovementDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsSpecialMovementDisabled");

	APwndCharacter_IsSpecialMovementDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsSpecialMovement
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsSpecialMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsSpecialMovement");

	APwndCharacter_IsSpecialMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsSkyDashing
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsSkyDashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsSkyDashing");

	APwndCharacter_IsSkyDashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsRocketJumpingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsRocketJumpingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsRocketJumpingEnabled");

	APwndCharacter_IsRocketJumpingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsReviving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsReviving()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsReviving");

	APwndCharacter_IsReviving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsRespawning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsRespawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsRespawning");

	APwndCharacter_IsRespawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsRemotePwning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsRemotePwning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsRemotePwning");

	APwndCharacter_IsRemotePwning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsPwning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsPwning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsPwning");

	APwndCharacter_IsPwning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsPwnDecoyForDebugging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsPwnDecoyForDebugging()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsPwnDecoyForDebugging");

	APwndCharacter_IsPwnDecoyForDebugging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsPwnDecoy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsPwnDecoy()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsPwnDecoy");

	APwndCharacter_IsPwnDecoy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsPwnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsPwnable()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsPwnable");

	APwndCharacter_IsPwnable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsPassiveWallRunning
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsPassiveWallRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsPassiveWallRunning");

	APwndCharacter_IsPassiveWallRunning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsOverHeated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsOverHeated()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsOverHeated");

	APwndCharacter_IsOverHeated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsNeutralPwn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsNeutralPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsNeutralPwn");

	APwndCharacter_IsNeutralPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsMantling
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsMantling()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsMantling");

	APwndCharacter_IsMantling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsMantleEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsMantleEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsMantleEnabled");

	APwndCharacter_IsMantleEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInvulnerable
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInvulnerable()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInvulnerable");

	APwndCharacter_IsInvulnerable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInUpState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInUpState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInUpState");

	APwndCharacter_IsInUpState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInteracting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInteracting()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInteracting");

	APwndCharacter_IsInteracting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInTankMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInTankMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInTankMode");

	APwndCharacter_IsInTankMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInLimbo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInLimbo()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInLimbo");

	APwndCharacter_IsInLimbo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInInteractionTargetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInInteractionTargetState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInInteractionTargetState");

	APwndCharacter_IsInInteractionTargetState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInInteractionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInInteractionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInInteractionState");

	APwndCharacter_IsInInteractionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInInteractionAttackerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInInteractionAttackerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInInteractionAttackerState");

	APwndCharacter_IsInInteractionAttackerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInImmobileState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInImmobileState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInImmobileState");

	APwndCharacter_IsInImmobileState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInIgnoreForcesState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInIgnoreForcesState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInIgnoreForcesState");

	APwndCharacter_IsInIgnoreForcesState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInDownState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInDownState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInDownState");

	APwndCharacter_IsInDownState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsInBodyStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsInBodyStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsInBodyStack");

	APwndCharacter_IsInBodyStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsHybridNeutralPwn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsHybridNeutralPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsHybridNeutralPwn");

	APwndCharacter_IsHybridNeutralPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsHumiliating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsHumiliating()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsHumiliating");

	APwndCharacter_IsHumiliating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsHorizontalRocketJumpingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsHorizontalRocketJumpingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsHorizontalRocketJumpingEnabled");

	APwndCharacter_IsHorizontalRocketJumpingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsGroundMovementEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsGroundMovementEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsGroundMovementEnabled");

	APwndCharacter_IsGroundMovementEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsGrappleHooking
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsGrappleHooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsGrappleHooking");

	APwndCharacter_IsGrappleHooking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsFullyMovingForward
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsFullyMovingForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsFullyMovingForward");

	APwndCharacter_IsFullyMovingForward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsFloorRocketJumpingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsFloorRocketJumpingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsFloorRocketJumpingEnabled");

	APwndCharacter_IsFloorRocketJumpingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsFirstPerson
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsFirstPerson");

	APwndCharacter_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsFastMovingForward
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsFastMovingForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsFastMovingForward");

	APwndCharacter_IsFastMovingForward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsFalling
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsFalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsFalling");

	APwndCharacter_IsFalling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsDashMoving
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsDashMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsDashMoving");

	APwndCharacter_IsDashMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsCrawling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsCrawling()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsCrawling");

	APwndCharacter_IsCrawling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsCarrying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsCarrying()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsCarrying");

	APwndCharacter_IsCarrying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsBottomOfBodyStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsBottomOfBodyStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsBottomOfBodyStack");

	APwndCharacter_IsBottomOfBodyStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsBeingRevived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsBeingRevived()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsBeingRevived");

	APwndCharacter_IsBeingRevived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsBeingRemotePwnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsBeingRemotePwnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsBeingRemotePwnd");

	APwndCharacter_IsBeingRemotePwnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsBeingPwnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsBeingPwnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsBeingPwnd");

	APwndCharacter_IsBeingPwnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsBeingHumiliated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsBeingHumiliated()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsBeingHumiliated");

	APwndCharacter_IsBeingHumiliated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsBeingCarried
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsBeingCarried()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsBeingCarried");

	APwndCharacter_IsBeingCarried_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsAirMovementEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsAirMovementEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsAirMovementEnabled");

	APwndCharacter_IsAirMovementEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.IsAirHovering
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::IsAirHovering()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.IsAirHovering");

	APwndCharacter_IsAirHovering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.InValidReviveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::InValidReviveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.InValidReviveState");

	APwndCharacter_InValidReviveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.InValidPwnState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::InValidPwnState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.InValidPwnState");

	APwndCharacter_InValidPwnState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.InValidHumiliateState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::InValidHumiliateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.InValidHumiliateState");

	APwndCharacter_InValidHumiliateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.InsideReviveRange
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExitRange                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Dist                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::InsideReviveRange(class APwndCharacter* Target, bool bExitRange, bool bLOS, float* Dist)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.InsideReviveRange");

	APwndCharacter_InsideReviveRange_Params params;
	params.Target = Target;
	params.bExitRange = bExitRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Dist != nullptr)
		*Dist = params.Dist;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.InsideRemotePwnRange
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCancelRange                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Dist                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::InsideRemotePwnRange(class APwndCharacter* Target, bool bCancelRange, bool bLOS, float* Dist)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.InsideRemotePwnRange");

	APwndCharacter_InsideRemotePwnRange_Params params;
	params.Target = Target;
	params.bCancelRange = bCancelRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Dist != nullptr)
		*Dist = params.Dist;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.InsidePwnRange
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExitRange                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Dist                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::InsidePwnRange(class APwndCharacter* Target, bool bExitRange, bool bLOS, float* Dist)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.InsidePwnRange");

	APwndCharacter_InsidePwnRange_Params params;
	params.Target = Target;
	params.bExitRange = bExitRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Dist != nullptr)
		*Dist = params.Dist;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.InsideCarryRange
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExitRange                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Dist                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::InsideCarryRange(class APwndCharacter* Target, bool bExitRange, bool bLOS, float* Dist)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.InsideCarryRange");

	APwndCharacter_InsideCarryRange_Params params;
	params.Target = Target;
	params.bExitRange = bExitRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Dist != nullptr)
		*Dist = params.Dist;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.HealDamage
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          HealAmount                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            HealEvent                      (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HealCauser                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacter::HealDamage(float HealAmount, const struct FDamageEvent& HealEvent, class AController* EventInstigator, class AActor* HealCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.HealDamage");

	APwndCharacter_HealDamage_Params params;
	params.HealAmount = HealAmount;
	params.HealEvent = HealEvent;
	params.EventInstigator = EventInstigator;
	params.HealCauser = HealCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.HasVO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::HasVO(const struct FName& VoiceOverID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.HasVO");

	APwndCharacter_HasVO_Params params;
	params.VoiceOverID = VoiceOverID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetSpecialMovementTarget
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 TargetVelocity                 (Parm, OutParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndCharacter::GetSpecialMovementTarget(struct FVector* TargetVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetSpecialMovementTarget");

	APwndCharacter_GetSpecialMovementTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TargetVelocity != nullptr)
		*TargetVelocity = params.TargetVelocity;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetSpecialMovementStatus
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bActive                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            AvailableCount                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            MaxCount                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          AvailableCapacity              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          MaxCapacity                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Timer                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::GetSpecialMovementStatus(bool* bEnabled, bool* bActive, int* AvailableCount, int* MaxCount, float* AvailableCapacity, float* MaxCapacity, float* Timer, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetSpecialMovementStatus");

	APwndCharacter_GetSpecialMovementStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bEnabled != nullptr)
		*bEnabled = params.bEnabled;
	if (bActive != nullptr)
		*bActive = params.bActive;
	if (AvailableCount != nullptr)
		*AvailableCount = params.AvailableCount;
	if (MaxCount != nullptr)
		*MaxCount = params.MaxCount;
	if (AvailableCapacity != nullptr)
		*AvailableCapacity = params.AvailableCapacity;
	if (MaxCapacity != nullptr)
		*MaxCapacity = params.MaxCapacity;
	if (Timer != nullptr)
		*Timer = params.Timer;
	if (Duration != nullptr)
		*Duration = params.Duration;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacter::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetServerTimeStamp");

	APwndCharacter_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetRoleEnumDisplayText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeCharacterRole>   CharRole                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText APwndCharacter::STATIC_GetRoleEnumDisplayText(TEnumAsByte<EeCharacterRole> CharRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetRoleEnumDisplayText");

	APwndCharacter_GetRoleEnumDisplayText_Params params;
	params.CharRole = CharRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetRoleDisplayText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText APwndCharacter::GetRoleDisplayText()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetRoleDisplayText");

	APwndCharacter_GetRoleDisplayText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetRJDistances
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<float>                  OutDistances                   (Parm, OutParm, ZeroConstructor)
// bool                           bUnitDistances                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::GetRJDistances(bool bUnitDistances, TArray<float>* OutDistances)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetRJDistances");

	APwndCharacter_GetRJDistances_Params params;
	params.bUnitDistances = bUnitDistances;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDistances != nullptr)
		*OutDistances = params.OutDistances;
}


// Function PWND.PwndCharacter.GetRJControlType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeRocketJumpControlType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeRocketJumpControlType> APwndCharacter::GetRJControlType()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetRJControlType");

	APwndCharacter_GetRJControlType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetReviverPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetReviverPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetReviverPawn");

	APwndCharacter_GetReviverPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetRevivedPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetRevivedPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetRevivedPawn");

	APwndCharacter_GetRevivedPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetPwnRange
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          RangeXY                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          RangeZ                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bExitRange                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRemoteRange                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRemoteCancelRange             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAirRanges                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::GetPwnRange(bool bExitRange, bool bRemoteRange, bool bRemoteCancelRange, bool bAirRanges, float* RangeXY, float* RangeZ)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetPwnRange");

	APwndCharacter_GetPwnRange_Params params;
	params.bExitRange = bExitRange;
	params.bRemoteRange = bRemoteRange;
	params.bRemoteCancelRange = bRemoteCancelRange;
	params.bAirRanges = bAirRanges;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RangeXY != nullptr)
		*RangeXY = params.RangeXY;
	if (RangeZ != nullptr)
		*RangeZ = params.RangeZ;
}


// Function PWND.PwndCharacter.GetPwnerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetPwnerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetPwnerPawn");

	APwndCharacter_GetPwnerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetPwneeWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndCharacter::GetPwneeWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetPwneeWidget");

	APwndCharacter_GetPwneeWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetPwneePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetPwneePawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetPwneePawn");

	APwndCharacter_GetPwneePawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetPostProcessEffectInst
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 RefObject                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndPostProcessEffect  Effect                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* APwndCharacter::GetPostProcessEffectInst(class UObject* RefObject, const struct FPwndPostProcessEffect& Effect, bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetPostProcessEffectInst");

	APwndCharacter_GetPostProcessEffectInst_Params params;
	params.RefObject = RefObject;
	params.Effect = Effect;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetOwnerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* APwndCharacter::GetOwnerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetOwnerController");

	APwndCharacter_GetOwnerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetMatchingCharacterSkinGuid
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   OwnerCharacterSkinGuid         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid APwndCharacter::GetMatchingCharacterSkinGuid(const struct FGuid& OwnerCharacterSkinGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetMatchingCharacterSkinGuid");

	APwndCharacter_GetMatchingCharacterSkinGuid_Params params;
	params.OwnerCharacterSkinGuid = OwnerCharacterSkinGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetLoadoutViewAccessories
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> APwndCharacter::GetLoadoutViewAccessories()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetLoadoutViewAccessories");

	APwndCharacter_GetLoadoutViewAccessories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetKillerPS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* APwndCharacter::GetKillerPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetKillerPS");

	APwndCharacter_GetKillerPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetInventoryOfType
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  InvClass                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APwndInventory*>  OutInventory                   (Parm, OutParm, ZeroConstructor)
// bool                           bExact                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacter::GetInventoryOfType(class UClass* InvClass, bool bExact, TArray<class APwndInventory*>* OutInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetInventoryOfType");

	APwndCharacter_GetInventoryOfType_Params params;
	params.InvClass = InvClass;
	params.bExact = bExact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutInventory != nullptr)
		*OutInventory = params.OutInventory;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetInstigatorController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* APwndCharacter::GetInstigatorController()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetInstigatorController");

	APwndCharacter_GetInstigatorController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetHumiliaterPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetHumiliaterPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetHumiliaterPawn");

	APwndCharacter_GetHumiliaterPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetHumiliatedPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetHumiliatedPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetHumiliatedPawn");

	APwndCharacter_GetHumiliatedPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetHeatStatusValues
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeHeatStatus>      Status                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Marker                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Vent                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::GetHeatStatusValues(TEnumAsByte<EeHeatStatus> Status, float* Marker, float* Vent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetHeatStatusValues");

	APwndCharacter_GetHeatStatusValues_Params params;
	params.Status = Status;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Marker != nullptr)
		*Marker = params.Marker;
	if (Vent != nullptr)
		*Vent = params.Vent;
}


// Function PWND.PwndCharacter.GetHeatStatus
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeHeatStatus>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeHeatStatus> APwndCharacter::GetHeatStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetHeatStatus");

	APwndCharacter_GetHeatStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetHeatPct
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndCharacter::GetHeatPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetHeatPct");

	APwndCharacter_GetHeatPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetDotEffects
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  DotEffect                      (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             DOTWeapon                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DOTWeaponClass                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UPwndDOTComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UPwndDOTComponent*> APwndCharacter::GetDotEffects(class UClass* DotEffect, class AController* EventInstigator, class AActor* DamageCauser, class APwndWeapon* DOTWeapon, class UClass* DOTWeaponClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetDotEffects");

	APwndCharacter_GetDotEffects_Params params;
	params.DotEffect = DotEffect;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DOTWeapon = DOTWeapon;
	params.DOTWeaponClass = DOTWeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetDamageHistory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndDamageHistoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPwndDamageHistoryComponent* APwndCharacter::GetDamageHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetDamageHistory");

	APwndCharacter_GetDamageHistory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCurrentCharacterSkinIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacter::GetCurrentCharacterSkinIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCurrentCharacterSkinIndex");

	APwndCharacter_GetCurrentCharacterSkinIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCurrentActionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EePawnActionState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EePawnActionState> APwndCharacter::GetCurrentActionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCurrentActionState");

	APwndCharacter_GetCurrentActionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCurrentActionPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetCurrentActionPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCurrentActionPawn");

	APwndCharacter_GetCurrentActionPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCompletedAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterActionCompletion ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterActionCompletion APwndCharacter::GetCompletedAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCompletedAction");

	APwndCharacter_GetCompletedAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCharacterSkinIndexByGuid
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   CharacterSkinGuid              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacter::GetCharacterSkinIndexByGuid(const struct FGuid& CharacterSkinGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCharacterSkinIndexByGuid");

	APwndCharacter_GetCharacterSkinIndexByGuid_Params params;
	params.CharacterSkinGuid = CharacterSkinGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCharacterSkinIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  CharacterSkinClass             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndCharacter::GetCharacterSkinIndex(class UClass* CharacterSkinClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCharacterSkinIndex");

	APwndCharacter_GetCharacterSkinIndex_Params params;
	params.CharacterSkinClass = CharacterSkinClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCarrierPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetCarrierPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCarrierPawn");

	APwndCharacter_GetCarrierPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetCarriedPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::GetCarriedPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetCarriedPawn");

	APwndCharacter_GetCarriedPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.GetActionTimer
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutTimer                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutDuration                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutPercent                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutTimePassed                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutOriginalTimePassed          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::GetActionTimer(float* OutTimer, float* OutDuration, float* OutPercent, float* OutTimePassed, float* OutOriginalTimePassed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.GetActionTimer");

	APwndCharacter_GetActionTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTimer != nullptr)
		*OutTimer = params.OutTimer;
	if (OutDuration != nullptr)
		*OutDuration = params.OutDuration;
	if (OutPercent != nullptr)
		*OutPercent = params.OutPercent;
	if (OutTimePassed != nullptr)
		*OutTimePassed = params.OutTimePassed;
	if (OutOriginalTimePassed != nullptr)
		*OutOriginalTimePassed = params.OutOriginalTimePassed;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.ForceSpecialMovementRecharge
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndCharacter::ForceSpecialMovementRecharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ForceSpecialMovementRecharge");

	APwndCharacter_ForceSpecialMovementRecharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.FindBestReviveTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::FindBestReviveTarget(class APwndCharacter* Preferred, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.FindBestReviveTarget");

	APwndCharacter_FindBestReviveTarget_Params params;
	params.Preferred = Preferred;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.FindBestPwnTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRemote                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::FindBestPwnTarget(class APwndCharacter* Preferred, bool bRemote, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.FindBestPwnTarget");

	APwndCharacter_FindBestPwnTarget_Params params;
	params.Preferred = Preferred;
	params.bRemote = bRemote;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.FindBestHumiliationTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::FindBestHumiliationTarget(class APwndCharacter* Preferred, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.FindBestHumiliationTarget");

	APwndCharacter_FindBestHumiliationTarget_Params params;
	params.Preferred = Preferred;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.FindBestCarryTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Preferred                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInRange                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLOS                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndCharacter::FindBestCarryTarget(class APwndCharacter* Preferred, bool bInRange, bool bLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.FindBestCarryTarget");

	APwndCharacter_FindBestCarryTarget_Params params;
	params.Preferred = Preferred;
	params.bInRange = bInRange;
	params.bLOS = bLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.FadeOutPostProcessEffects
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 RefObject                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::FadeOutPostProcessEffects(class UObject* RefObject, bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.FadeOutPostProcessEffects");

	APwndCharacter_FadeOutPostProcessEffects_Params params;
	params.RefObject = RefObject;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.FadeOutPostProcessEffect
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 RefObject                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndPostProcessEffect  Effect                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::FadeOutPostProcessEffect(class UObject* RefObject, const struct FPwndPostProcessEffect& Effect, bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.FadeOutPostProcessEffect");

	APwndCharacter_FadeOutPostProcessEffect_Params params;
	params.RefObject = RefObject;
	params.Effect = Effect;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ExecuteRocketJump
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bVertical                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::ExecuteRocketJump(bool bVertical)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ExecuteRocketJump");

	APwndCharacter_ExecuteRocketJump_Params params;
	params.bVertical = bVertical;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.DrawRadiusIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::DrawRadiusIndicator()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.DrawRadiusIndicator");

	APwndCharacter_DrawRadiusIndicator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.ClientStopAllFire
// (Net, NetReliable, Native, Event, Public, NetClient)

void APwndCharacter::ClientStopAllFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientStopAllFire");

	APwndCharacter_ClientStopAllFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientSpecialMovementFailed
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bAllowSpecialMove              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpecialMoveFailed             (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientSpecialMovementFailed(bool bAllowSpecialMove, bool bSpecialMoveFailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientSpecialMovementFailed");

	APwndCharacter_ClientSpecialMovementFailed_Params params;
	params.bAllowSpecialMove = bAllowSpecialMove;
	params.bSpecialMoveFailed = bSpecialMoveFailed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientSetOverHeated
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bInOverHeated                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewHeat                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientSetOverHeated(bool bInOverHeated, float NewHeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientSetOverHeated");

	APwndCharacter_ClientSetOverHeated_Params params;
	params.bInOverHeated = bInOverHeated;
	params.NewHeat = NewHeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientSetHeatModifiers
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          inHeatPerSec                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          inHeatCostModifier             (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientSetHeatModifiers(float inHeatPerSec, float inHeatCostModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientSetHeatModifiers");

	APwndCharacter_ClientSetHeatModifiers_Params params;
	params.inHeatPerSec = inHeatPerSec;
	params.inHeatCostModifier = inHeatCostModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientRocketJumpFailed
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bCanRocketJump                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRocketJumpFailed              (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientRocketJumpFailed(bool bCanRocketJump, bool bRocketJumpFailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientRocketJumpFailed");

	APwndCharacter_ClientRocketJumpFailed_Params params;
	params.bCanRocketJump = bCanRocketJump;
	params.bRocketJumpFailed = bRocketJumpFailed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientPlayVOFor
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientPlayVOFor(class APwndCharacter* Char, const struct FName& VoiceOverID, bool bInterrupt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientPlayVOFor");

	APwndCharacter_ClientPlayVOFor_Params params;
	params.Char = Char;
	params.VoiceOverID = VoiceOverID;
	params.bInterrupt = bInterrupt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientPlayVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientPlayVO(const struct FName& VoiceOverID, bool bInterrupt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientPlayVO");

	APwndCharacter_ClientPlayVO_Params params;
	params.VoiceOverID = VoiceOverID;
	params.bInterrupt = bInterrupt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientPlayCustomVOFor
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientPlayCustomVOFor(class APwndCharacter* Char, class USoundBase* customVO, bool bInterrupt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientPlayCustomVOFor");

	APwndCharacter_ClientPlayCustomVOFor_Params params;
	params.Char = Char;
	params.customVO = customVO;
	params.bInterrupt = bInterrupt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientClearDamageEffects
// (Net, NetReliable, Native, Event, Public, NetClient)

void APwndCharacter::ClientClearDamageEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientClearDamageEffects");

	APwndCharacter_ClientClearDamageEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddWeaponDisabledTime
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddWeaponDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddWeaponDisabledTime");

	APwndCharacter_ClientAddWeaponDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddTimeDilationEffect
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FTimeDilationEffectEntry TimeDilationEffect             (ConstParm, Parm, ReferenceParm)

void APwndCharacter::ClientAddTimeDilationEffect(const struct FTimeDilationEffectEntry& TimeDilationEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddTimeDilationEffect");

	APwndCharacter_ClientAddTimeDilationEffect_Params params;
	params.TimeDilationEffect = TimeDilationEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddSpecialMovementDisabledTime
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddSpecialMovementDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddSpecialMovementDisabledTime");

	APwndCharacter_ClientAddSpecialMovementDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddRocketJumpDisabledTime
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddRocketJumpDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddRocketJumpDisabledTime");

	APwndCharacter_ClientAddRocketJumpDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddRocketJumpDelayedTime
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddRocketJumpDelayedTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddRocketJumpDelayedTime");

	APwndCharacter_ClientAddRocketJumpDelayedTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddMovementDisabledTime
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddMovementDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddMovementDisabledTime");

	APwndCharacter_ClientAddMovementDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddHeat
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          inHeatDelta                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bResetCoolDelay                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bResetCoolRate                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddHeat(float inHeatDelta, bool bResetCoolDelay, bool bResetCoolRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddHeat");

	APwndCharacter_ClientAddHeat_Params params;
	params.inHeatDelta = inHeatDelta;
	params.bResetCoolDelay = bResetCoolDelay;
	params.bResetCoolRate = bResetCoolRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddAimOffsetTime
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          AimOffsetDeg                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddAimOffsetTime(float Timestamp, float Duration, float AimOffsetDeg)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddAimOffsetTime");

	APwndCharacter_ClientAddAimOffsetTime_Params params;
	params.Timestamp = Timestamp;
	params.Duration = Duration;
	params.AimOffsetDeg = AimOffsetDeg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClientAddAbilityDisabledTime
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::ClientAddAbilityDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClientAddAbilityDisabledTime");

	APwndCharacter_ClientAddAbilityDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.ClearDamageEffects
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndCharacter::ClearDamageEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.ClearDamageEffects");

	APwndCharacter_ClearDamageEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.CanSpeak
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::CanSpeak()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CanSpeak");

	APwndCharacter_CanSpeak_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.CanFireWeapons
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::CanFireWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CanFireWeapons");

	APwndCharacter_CanFireWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.CanFireWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndWeapon*             Weap                           (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::CanFireWeapon(class APwndWeapon* Weap, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CanFireWeapon");

	APwndCharacter_CanFireWeapon_Params params;
	params.Weap = Weap;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.CancelActions
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bCancelTargetActions           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::CancelActions(bool bCancelTargetActions)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CancelActions");

	APwndCharacter_CancelActions_Params params;
	params.bCancelTargetActions = bCancelTargetActions;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.CanBeRevived
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::CanBeRevived(class APwndCharacter* Reviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CanBeRevived");

	APwndCharacter_CanBeRevived_Params params;
	params.Reviver = Reviver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.CanBePwnd
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::CanBePwnd(class APwndCharacter* Pwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CanBePwnd");

	APwndCharacter_CanBePwnd_Params params;
	params.Pwner = Pwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.CanBeHumiliated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::CanBeHumiliated(class APwndCharacter* Humiliator)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CanBeHumiliated");

	APwndCharacter_CanBeHumiliated_Params params;
	params.Humiliator = Humiliator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.CanBeCarried
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::CanBeCarried(class APwndCharacter* Carrier)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.CanBeCarried");

	APwndCharacter_CanBeCarried_Params params;
	params.Carrier = Carrier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AttachCameraPwndFX
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bThirdPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class APwndFX*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndFX* APwndCharacter::AttachCameraPwndFX(class UClass* Template, const struct FVector& Offset, class APawn* InInstigator, unsigned char InTeamNum, bool bFirstPerson, bool bThirdPerson, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AttachCameraPwndFX");

	APwndCharacter_AttachCameraPwndFX_Params params;
	params.Template = Template;
	params.Offset = Offset;
	params.InInstigator = InInstigator;
	params.InTeamNum = InTeamNum;
	params.bFirstPerson = bFirstPerson;
	params.bThirdPerson = bThirdPerson;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AttachCameraFXDBEntry
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndFXDatabaseEntry    Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bThirdPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* APwndCharacter::AttachCameraFXDBEntry(const struct FPwndFXDatabaseEntry& Entry, const struct FVector& Offset, class APawn* InInstigator, unsigned char InTeamNum, bool bFirstPerson, bool bThirdPerson, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AttachCameraFXDBEntry");

	APwndCharacter_AttachCameraFXDBEntry_Params params;
	params.Entry = Entry;
	params.Offset = Offset;
	params.InInstigator = InInstigator;
	params.InTeamNum = InTeamNum;
	params.bFirstPerson = bFirstPerson;
	params.bThirdPerson = bThirdPerson;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AttachCameraFX
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*         Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bThirdPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* APwndCharacter::AttachCameraFX(class UParticleSystem* Template, const struct FVector& Offset, bool bFirstPerson, bool bThirdPerson, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AttachCameraFX");

	APwndCharacter_AttachCameraFX_Params params;
	params.Template = Template;
	params.Offset = Offset;
	params.bFirstPerson = bFirstPerson;
	params.bThirdPerson = bThirdPerson;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AttachBodyPwndFX
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   AttachPoint                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// struct FRotator                LocalRotation                  (Parm, IsPlainOldData)
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class APwndFX*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndFX* APwndCharacter::AttachBodyPwndFX(class UClass* Template, const struct FName& AttachPoint, const struct FVector& Offset, const struct FRotator& LocalRotation, class APawn* InInstigator, unsigned char InTeamNum, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AttachBodyPwndFX");

	APwndCharacter_AttachBodyPwndFX_Params params;
	params.Template = Template;
	params.AttachPoint = AttachPoint;
	params.Offset = Offset;
	params.LocalRotation = LocalRotation;
	params.InInstigator = InInstigator;
	params.InTeamNum = InTeamNum;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AttachBodyFXDBEntry
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndFXDatabaseEntry    Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   AttachPoint                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// struct FRotator                LocalRotation                  (Parm, IsPlainOldData)
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* APwndCharacter::AttachBodyFXDBEntry(const struct FPwndFXDatabaseEntry& Entry, const struct FName& AttachPoint, const struct FVector& Offset, const struct FRotator& LocalRotation, class APawn* InInstigator, unsigned char InTeamNum, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AttachBodyFXDBEntry");

	APwndCharacter_AttachBodyFXDBEntry_Params params;
	params.Entry = Entry;
	params.AttachPoint = AttachPoint;
	params.Offset = Offset;
	params.LocalRotation = LocalRotation;
	params.InInstigator = InInstigator;
	params.InTeamNum = InTeamNum;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AttachBodyFX
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*         Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   AttachPoint                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Offset                         (Parm, IsPlainOldData)
// struct FRotator                LocalRotation                  (Parm, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* APwndCharacter::AttachBodyFX(class UParticleSystem* Template, const struct FName& AttachPoint, const struct FVector& Offset, const struct FRotator& LocalRotation, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AttachBodyFX");

	APwndCharacter_AttachBodyFX_Params params;
	params.Template = Template;
	params.AttachPoint = AttachPoint;
	params.Offset = Offset;
	params.LocalRotation = LocalRotation;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AllowRevive
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::AllowRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AllowRevive");

	APwndCharacter_AllowRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AllowPwn
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::AllowPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AllowPwn");

	APwndCharacter_AllowPwn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AllowHumiliate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::AllowHumiliate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AllowHumiliate");

	APwndCharacter_AllowHumiliate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AllowFiring
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndWeapon*             Weap                           (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::AllowFiring(class APwndWeapon* Weap, unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AllowFiring");

	APwndCharacter_AllowFiring_Params params;
	params.Weap = Weap;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AllowCarry
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndCharacter::AllowCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AllowCarry");

	APwndCharacter_AllowCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AddWeaponDisabledTime
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddWeaponDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddWeaponDisabledTime");

	APwndCharacter_AddWeaponDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddTimeDilationEffect
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FTimeDilationEffect     TimeDilationEffect             (ConstParm, Parm, OutParm, ReferenceParm)

void APwndCharacter::AddTimeDilationEffect(const struct FTimeDilationEffect& TimeDilationEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddTimeDilationEffect");

	APwndCharacter_AddTimeDilationEffect_Params params;
	params.TimeDilationEffect = TimeDilationEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddSpecialMovementDisabledTime
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddSpecialMovementDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddSpecialMovementDisabledTime");

	APwndCharacter_AddSpecialMovementDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddRocketJumpDisabledTime
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddRocketJumpDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddRocketJumpDisabledTime");

	APwndCharacter_AddRocketJumpDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddRocketJumpDelayedTime
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddRocketJumpDelayedTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddRocketJumpDelayedTime");

	APwndCharacter_AddRocketJumpDelayedTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddPostProcessEffect
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 RefObject                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndPostProcessEffect  Effect                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddPostProcessEffect(class UObject* RefObject, const struct FPwndPostProcessEffect& Effect, bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddPostProcessEffect");

	APwndCharacter_AddPostProcessEffect_Params params;
	params.RefObject = RefObject;
	params.Effect = Effect;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddMovementDisabledTime
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddMovementDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddMovementDisabledTime");

	APwndCharacter_AddMovementDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddInvulnerabilityTime
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddInvulnerabilityTime(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddInvulnerabilityTime");

	APwndCharacter_AddInvulnerabilityTime_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddInventoryItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InvClass                       (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatorController           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InstigatorActor                (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             InstigatorWeapon               (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndInventory*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndInventory* APwndCharacter::AddInventoryItem(class UClass* InvClass, class AController* InstigatorController, class AActor* InstigatorActor, class APwndWeapon* InstigatorWeapon, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddInventoryItem");

	APwndCharacter_AddInventoryItem_Params params;
	params.InvClass = InvClass;
	params.InstigatorController = InstigatorController;
	params.InstigatorActor = InstigatorActor;
	params.InstigatorWeapon = InstigatorWeapon;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacter.AddHeatModifiers
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          inHeatPerSec                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          inHeatCostModifier             (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddHeatModifiers(class AActor* Causer, float inHeatPerSec, float inHeatCostModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddHeatModifiers");

	APwndCharacter_AddHeatModifiers_Params params;
	params.Causer = Causer;
	params.inHeatPerSec = inHeatPerSec;
	params.inHeatCostModifier = inHeatCostModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddHeatBP
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          inHeatDelta                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bResetCoolDelay                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bResetCoolRate                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddHeatBP(float inHeatDelta, bool bResetCoolDelay, bool bResetCoolRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddHeatBP");

	APwndCharacter_AddHeatBP_Params params;
	params.inHeatDelta = inHeatDelta;
	params.bResetCoolDelay = bResetCoolDelay;
	params.bResetCoolRate = bResetCoolRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddDotEffect
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  DotEffect                      (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             DOTWeapon                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DOTWeaponClass                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddDotEffect(class UClass* DotEffect, class AController* EventInstigator, class AActor* DamageCauser, class APwndWeapon* DOTWeapon, class UClass* DOTWeaponClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddDotEffect");

	APwndCharacter_AddDotEffect_Params params;
	params.DotEffect = DotEffect;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DOTWeapon = DOTWeapon;
	params.DOTWeaponClass = DOTWeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddCharacterSkinMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APwndCharacter::AddCharacterSkinMesh(class UMeshComponent* Comp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddCharacterSkinMesh");

	APwndCharacter_AddCharacterSkinMesh_Params params;
	params.Comp = Comp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddAimOffsetTime
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          AimOffsetDeg                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddAimOffsetTime(float Time, float AimOffsetDeg)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddAimOffsetTime");

	APwndCharacter_AddAimOffsetTime_Params params;
	params.Time = Time;
	params.AimOffsetDeg = AimOffsetDeg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacter.AddAbilityDisabledTime
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndCharacter::AddAbilityDisabledTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacter.AddAbilityDisabledTime");

	APwndCharacter_AddAbilityDisabledTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnWallRun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnWallRun ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnWallRun UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnWallRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnWallRun");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnWallRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnWallGrind
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnWallGrind ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnWallGrind UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnWallGrind()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnWallGrind");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnWallGrind_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnTankMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnTankMode ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnTankMode UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnTankMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnTankMode");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnTankMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnSkyDash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnSkyDash ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnSkyDash UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnSkyDash()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnSkyDash");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnSkyDash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnRocketJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnRocketJump ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnRocketJump UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnRocketJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnRocketJump");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnRocketJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnGroundSlam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnGroundSlam ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnGroundSlam UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnGroundSlam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnGroundSlam");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnGroundSlam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnGrappleHook
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnGrappleHook ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnGrappleHook UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnGrappleHook()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnGrappleHook");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnGrappleHook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnDash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnDash ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnDash UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnDash()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnDash");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnDash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnCustomAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnCustomAbility ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnCustomAbility UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnCustomAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnCustomAbility");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnCustomAbility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnBase ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnBase UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnBase");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnAirHover
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepOwnAirHover ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepOwnAirHover UPwndCharacterMovementComponentGUTS::K2ReadRepOwnerPawnAirHover()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepOwnerPawnAirHover");

	UPwndCharacterMovementComponentGUTS_K2ReadRepOwnerPawnAirHover_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepNonePawnGroundSlam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepNonGroundSlam ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepNonGroundSlam UPwndCharacterMovementComponentGUTS::K2ReadRepNonePawnGroundSlam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepNonePawnGroundSlam");

	UPwndCharacterMovementComponentGUTS_K2ReadRepNonePawnGroundSlam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnWallRun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepAllWallRun ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepAllWallRun UPwndCharacterMovementComponentGUTS::K2ReadRepAllPawnWallRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnWallRun");

	UPwndCharacterMovementComponentGUTS_K2ReadRepAllPawnWallRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnTankMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterMovementRepAllTankMode ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterMovementRepAllTankMode UPwndCharacterMovementComponentGUTS::K2ReadRepAllPawnTankMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnTankMode");

	UPwndCharacterMovementComponentGUTS_K2ReadRepAllPawnTankMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnGravity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterRepAllGravity ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterRepAllGravity UPwndCharacterMovementComponentGUTS::K2ReadRepAllPawnGravity()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnGravity");

	UPwndCharacterMovementComponentGUTS_K2ReadRepAllPawnGravity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndCharacterMovementRepAllBase ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndCharacterMovementRepAllBase UPwndCharacterMovementComponentGUTS::K2ReadRepAllPawnBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponentGUTS.K2ReadRepAllPawnBase");

	UPwndCharacterMovementComponentGUTS_K2ReadRepAllPawnBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.SetCtrlExternalMovementHeld
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bHeld                          (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCharacterMovementComponent::SetCtrlExternalMovementHeld(bool bHeld)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.SetCtrlExternalMovementHeld");

	UPwndCharacterMovementComponent_SetCtrlExternalMovementHeld_Params params;
	params.bHeld = bHeld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ServerMovePwnd
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel                        (Parm)
// struct FVector_NetQuantize100  ClientLoc                      (Parm)
// unsigned char                  CompressedMoveFlags            (Parm, ZeroConstructor, IsPlainOldData)
// struct FSavedMove_PwndCharacter_ServerMoveData ServerMoveData                 (ConstParm, Parm, ReferenceParm)
// unsigned char                  ClientRoll                     (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ClientBaseBoneName             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCharacterMovementComponent::ServerMovePwnd(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, const struct FSavedMove_PwndCharacter_ServerMoveData& ServerMoveData, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ServerMovePwnd");

	UPwndCharacterMovementComponent_ServerMovePwnd_Params params;
	params.Timestamp = Timestamp;
	params.InAccel = InAccel;
	params.ClientLoc = ClientLoc;
	params.CompressedMoveFlags = CompressedMoveFlags;
	params.ServerMoveData = ServerMoveData;
	params.ClientRoll = ClientRoll;
	params.View = View;
	params.ClientMovementBase = ClientMovementBase;
	params.ClientBaseBoneName = ClientBaseBoneName;
	params.ClientMovementMode = ClientMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ServerMoveOldPwnd
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          OldTimeStamp                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   OldAccel                       (Parm)
// unsigned char                  OldMoveFlags                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FSavedMove_PwndCharacter_ServerMoveData OldServerMoveData              (ConstParm, Parm, ReferenceParm)

void UPwndCharacterMovementComponent::ServerMoveOldPwnd(float OldTimeStamp, const struct FVector_NetQuantize10& OldAccel, unsigned char OldMoveFlags, const struct FSavedMove_PwndCharacter_ServerMoveData& OldServerMoveData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ServerMoveOldPwnd");

	UPwndCharacterMovementComponent_ServerMoveOldPwnd_Params params;
	params.OldTimeStamp = OldTimeStamp;
	params.OldAccel = OldAccel;
	params.OldMoveFlags = OldMoveFlags;
	params.OldServerMoveData = OldServerMoveData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ServerMoveDualPwnd
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp0                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel0                       (Parm)
// unsigned char                  PendingFlags                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FSavedMove_PwndCharacter_ServerMoveData PendingServerMoveData          (ConstParm, Parm, ReferenceParm)
// uint32_t                       View0                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel                        (Parm)
// struct FVector_NetQuantize100  ClientLoc                      (Parm)
// unsigned char                  NewFlags                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FSavedMove_PwndCharacter_ServerMoveData NewServerMoveData              (ConstParm, Parm, ReferenceParm)
// unsigned char                  ClientRoll                     (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ClientBaseBoneName             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCharacterMovementComponent::ServerMoveDualPwnd(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, const struct FSavedMove_PwndCharacter_ServerMoveData& PendingServerMoveData, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, const struct FSavedMove_PwndCharacter_ServerMoveData& NewServerMoveData, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ServerMoveDualPwnd");

	UPwndCharacterMovementComponent_ServerMoveDualPwnd_Params params;
	params.TimeStamp0 = TimeStamp0;
	params.InAccel0 = InAccel0;
	params.PendingFlags = PendingFlags;
	params.PendingServerMoveData = PendingServerMoveData;
	params.View0 = View0;
	params.Timestamp = Timestamp;
	params.InAccel = InAccel;
	params.ClientLoc = ClientLoc;
	params.NewFlags = NewFlags;
	params.NewServerMoveData = NewServerMoveData;
	params.ClientRoll = ClientRoll;
	params.View = View;
	params.ClientMovementBase = ClientMovementBase;
	params.ClientBaseBoneName = ClientBaseBoneName;
	params.ClientMovementMode = ClientMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ServerMoveDualHybridRootMotionPwnd
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp0                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel0                       (Parm)
// unsigned char                  PendingFlags                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FSavedMove_PwndCharacter_ServerMoveData PendingServerMoveData          (ConstParm, Parm, ReferenceParm)
// uint32_t                       View0                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel                        (Parm)
// struct FVector_NetQuantize100  ClientLoc                      (Parm)
// unsigned char                  NewFlags                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FSavedMove_PwndCharacter_ServerMoveData NewServerMoveData              (ConstParm, Parm, ReferenceParm)
// unsigned char                  ClientRoll                     (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ClientBaseBoneName             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCharacterMovementComponent::ServerMoveDualHybridRootMotionPwnd(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, const struct FSavedMove_PwndCharacter_ServerMoveData& PendingServerMoveData, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, const struct FSavedMove_PwndCharacter_ServerMoveData& NewServerMoveData, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ServerMoveDualHybridRootMotionPwnd");

	UPwndCharacterMovementComponent_ServerMoveDualHybridRootMotionPwnd_Params params;
	params.TimeStamp0 = TimeStamp0;
	params.InAccel0 = InAccel0;
	params.PendingFlags = PendingFlags;
	params.PendingServerMoveData = PendingServerMoveData;
	params.View0 = View0;
	params.Timestamp = Timestamp;
	params.InAccel = InAccel;
	params.ClientLoc = ClientLoc;
	params.NewFlags = NewFlags;
	params.NewServerMoveData = NewServerMoveData;
	params.ClientRoll = ClientRoll;
	params.View = View;
	params.ClientMovementBase = ClientMovementBase;
	params.ClientBaseBoneName = ClientBaseBoneName;
	params.ClientMovementMode = ClientMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.IsWallRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsWallRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsWallRunning");

	UPwndCharacterMovementComponent_IsWallRunning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsSpecialMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsSpecialMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsSpecialMovement");

	UPwndCharacterMovementComponent_IsSpecialMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsSkyDashing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsSkyDashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsSkyDashing");

	UPwndCharacterMovementComponent_IsSkyDashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsPassiveWallRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsPassiveWallRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsPassiveWallRunning");

	UPwndCharacterMovementComponent_IsPassiveWallRunning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsMovingTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsMovingTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsMovingTo");

	UPwndCharacterMovementComponent_IsMovingTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsMantling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsMantling()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsMantling");

	UPwndCharacterMovementComponent_IsMantling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsInTankMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsInTankMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsInTankMode");

	UPwndCharacterMovementComponent_IsInTankMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsHoldingPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsHoldingPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsHoldingPosition");

	UPwndCharacterMovementComponent_IsHoldingPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsGroundSlamming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsGroundSlamming()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsGroundSlamming");

	UPwndCharacterMovementComponent_IsGroundSlamming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsGrappleHooking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsGrappleHooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsGrappleHooking");

	UPwndCharacterMovementComponent_IsGrappleHooking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsCharacterPullingInTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsCharacterPullingInTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsCharacterPullingInTarget");

	UPwndCharacterMovementComponent_IsCharacterPullingInTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsCharacterPullingInAttacker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsCharacterPullingInAttacker()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsCharacterPullingInAttacker");

	UPwndCharacterMovementComponent_IsCharacterPullingInAttacker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsCharacterPullingIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsCharacterPullingIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsCharacterPullingIn");

	UPwndCharacterMovementComponent_IsCharacterPullingIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.IsAirHovering
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::IsAirHovering()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.IsAirHovering");

	UPwndCharacterMovementComponent_IsAirHovering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.GrappleHookTrace
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult              Hit                            (Parm, OutParm, IsPlainOldData)
// struct FVector                 Dir                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::GrappleHookTrace(const struct FVector& Dir, float Distance, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.GrappleHookTrace");

	UPwndCharacterMovementComponent_GrappleHookTrace_Params params;
	params.Dir = Dir;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Hit != nullptr)
		*Hit = params.Hit;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.GetSpecialMovementCapacityPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndCharacterMovementComponent::GetSpecialMovementCapacityPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.GetSpecialMovementCapacityPct");

	UPwndCharacterMovementComponent_GetSpecialMovementCapacityPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndCharacterMovementComponent::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.GetServerTimeStamp");

	UPwndCharacterMovementComponent_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.GetRJDistances
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<float>                  OutDistances                   (Parm, OutParm, ZeroConstructor)
// bool                           bUnitDistances                 (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCharacterMovementComponent::GetRJDistances(bool bUnitDistances, TArray<float>* OutDistances)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.GetRJDistances");

	UPwndCharacterMovementComponent_GetRJDistances_Params params;
	params.bUnitDistances = bUnitDistances;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDistances != nullptr)
		*OutDistances = params.OutDistances;
}


// Function PWND.PwndCharacterMovementComponent.GetPwndCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* UPwndCharacterMovementComponent::GetPwndCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.GetPwndCharacterOwner");

	UPwndCharacterMovementComponent_GetPwndCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.GetMaxSpeedWithoutDashing
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndCharacterMovementComponent::GetMaxSpeedWithoutDashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.GetMaxSpeedWithoutDashing");

	UPwndCharacterMovementComponent_GetMaxSpeedWithoutDashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.ForceSpecialMovementRecharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndCharacterMovementComponent::ForceSpecialMovementRecharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ForceSpecialMovementRecharge");

	UPwndCharacterMovementComponent_ForceSpecialMovementRecharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ExecuteMoveTo
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Dir                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Range                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxVelocityOnExit              (Parm, ZeroConstructor, IsPlainOldData)
// float                          MatchTargetActorVelocityPctOnExit (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetYaw                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetPitch               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::ExecuteMoveTo(const struct FVector& Dir, class AActor* TargetActor, float Distance, float Duration, float Range, float MaxVelocityOnExit, float MatchTargetActorVelocityPctOnExit, bool bFaceTargetYaw, bool bFaceTargetPitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ExecuteMoveTo");

	UPwndCharacterMovementComponent_ExecuteMoveTo_Params params;
	params.Dir = Dir;
	params.TargetActor = TargetActor;
	params.Distance = Distance;
	params.Duration = Duration;
	params.Range = Range;
	params.MaxVelocityOnExit = MaxVelocityOnExit;
	params.MatchTargetActorVelocityPctOnExit = MatchTargetActorVelocityPctOnExit;
	params.bFaceTargetYaw = bFaceTargetYaw;
	params.bFaceTargetPitch = bFaceTargetPitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.ExecuteHoldPosition
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetYaw                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetPitch               (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecelTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::ExecuteHoldPosition(float Duration, class AActor* TargetActor, bool bFaceTargetYaw, bool bFaceTargetPitch, float DecelTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ExecuteHoldPosition");

	UPwndCharacterMovementComponent_ExecuteHoldPosition_Params params;
	params.Duration = Duration;
	params.TargetActor = TargetActor;
	params.bFaceTargetYaw = bFaceTargetYaw;
	params.bFaceTargetPitch = bFaceTargetPitch;
	params.DecelTime = DecelTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.ExecuteCharacterPullIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          SelfMovePct                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          TargetMovePct                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          Range                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSelfFaceTargetYaw             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSelfFaceTargetPitch           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTargetFaceSelfYaw             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTargetFaceSelfPitch           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::ExecuteCharacterPullIn(class AActor* TargetActor, float Duration, float SelfMovePct, float TargetMovePct, float Range, bool bSelfFaceTargetYaw, bool bSelfFaceTargetPitch, bool bTargetFaceSelfYaw, bool bTargetFaceSelfPitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ExecuteCharacterPullIn");

	UPwndCharacterMovementComponent_ExecuteCharacterPullIn_Params params;
	params.TargetActor = TargetActor;
	params.Duration = Duration;
	params.SelfMovePct = SelfMovePct;
	params.TargetMovePct = TargetMovePct;
	params.Range = Range;
	params.bSelfFaceTargetYaw = bSelfFaceTargetYaw;
	params.bSelfFaceTargetPitch = bSelfFaceTargetPitch;
	params.bTargetFaceSelfYaw = bTargetFaceSelfYaw;
	params.bTargetFaceSelfPitch = bTargetFaceSelfPitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.DisconnectGrappleHookExternal
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::DisconnectGrappleHookExternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.DisconnectGrappleHookExternal");

	UPwndCharacterMovementComponent_DisconnectGrappleHookExternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.ClientVeryShortAdjustPositionPwnd
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewLoc                         (Parm, IsPlainOldData)
// class UPrimitiveComponent*     NewBase                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   NewBaseBoneName                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)
// struct FNetworkPredictionData_Server_PwndCharacter_Adjustment PendingAdjustmentPwnd          (Parm)

void UPwndCharacterMovementComponent::ClientVeryShortAdjustPositionPwnd(float Timestamp, const struct FVector& NewLoc, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode, const struct FNetworkPredictionData_Server_PwndCharacter_Adjustment& PendingAdjustmentPwnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ClientVeryShortAdjustPositionPwnd");

	UPwndCharacterMovementComponent_ClientVeryShortAdjustPositionPwnd_Params params;
	params.Timestamp = Timestamp;
	params.NewLoc = NewLoc;
	params.NewBase = NewBase;
	params.NewBaseBoneName = NewBaseBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;
	params.PendingAdjustmentPwnd = PendingAdjustmentPwnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ClientForceSpecialMovementRecharge
// (Net, NetReliable, Native, Event, Public, NetClient)

void UPwndCharacterMovementComponent::ClientForceSpecialMovementRecharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ClientForceSpecialMovementRecharge");

	UPwndCharacterMovementComponent_ClientForceSpecialMovementRecharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ClientAdjustRootMotionSourcePositionPwnd
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRootMotionSourceGroup  ServerRootMotion               (Parm)
// bool                           bHasAnimRootMotion             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerMontageTrackPosition     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ServerLoc                      (Parm, IsPlainOldData)
// struct FVector_NetQuantizeNormal ServerRotation                 (Parm)
// float                          ServerVelZ                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ServerBase                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ServerBoneName                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)
// struct FNetworkPredictionData_Server_PwndCharacter_Adjustment PendingAdjustmentPwnd          (Parm)

void UPwndCharacterMovementComponent::ClientAdjustRootMotionSourcePositionPwnd(float Timestamp, const struct FRootMotionSourceGroup& ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode, const struct FNetworkPredictionData_Server_PwndCharacter_Adjustment& PendingAdjustmentPwnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ClientAdjustRootMotionSourcePositionPwnd");

	UPwndCharacterMovementComponent_ClientAdjustRootMotionSourcePositionPwnd_Params params;
	params.Timestamp = Timestamp;
	params.ServerRootMotion = ServerRootMotion;
	params.bHasAnimRootMotion = bHasAnimRootMotion;
	params.ServerMontageTrackPosition = ServerMontageTrackPosition;
	params.ServerLoc = ServerLoc;
	params.ServerRotation = ServerRotation;
	params.ServerVelZ = ServerVelZ;
	params.ServerBase = ServerBase;
	params.ServerBoneName = ServerBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;
	params.PendingAdjustmentPwnd = PendingAdjustmentPwnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ClientAdjustRootMotionPositionPwnd
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerMontageTrackPosition     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ServerLoc                      (Parm, IsPlainOldData)
// struct FVector_NetQuantizeNormal ServerRotation                 (Parm)
// float                          ServerVelZ                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ServerBase                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ServerBoneName                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)
// struct FNetworkPredictionData_Server_PwndCharacter_Adjustment PendingAdjustmentPwnd          (Parm)

void UPwndCharacterMovementComponent::ClientAdjustRootMotionPositionPwnd(float Timestamp, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode, const struct FNetworkPredictionData_Server_PwndCharacter_Adjustment& PendingAdjustmentPwnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ClientAdjustRootMotionPositionPwnd");

	UPwndCharacterMovementComponent_ClientAdjustRootMotionPositionPwnd_Params params;
	params.Timestamp = Timestamp;
	params.ServerMontageTrackPosition = ServerMontageTrackPosition;
	params.ServerLoc = ServerLoc;
	params.ServerRotation = ServerRotation;
	params.ServerVelZ = ServerVelZ;
	params.ServerBase = ServerBase;
	params.ServerBoneName = ServerBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;
	params.PendingAdjustmentPwnd = PendingAdjustmentPwnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ClientAdjustPositionPwnd
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewLoc                         (Parm, IsPlainOldData)
// struct FVector                 NewVel                         (Parm, IsPlainOldData)
// class UPrimitiveComponent*     NewBase                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   NewBaseBoneName                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)
// struct FNetworkPredictionData_Server_PwndCharacter_Adjustment PendingAdjustmentPwnd          (Parm)

void UPwndCharacterMovementComponent::ClientAdjustPositionPwnd(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode, const struct FNetworkPredictionData_Server_PwndCharacter_Adjustment& PendingAdjustmentPwnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ClientAdjustPositionPwnd");

	UPwndCharacterMovementComponent_ClientAdjustPositionPwnd_Params params;
	params.Timestamp = Timestamp;
	params.NewLoc = NewLoc;
	params.NewVel = NewVel;
	params.NewBase = NewBase;
	params.NewBaseBoneName = NewBaseBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;
	params.PendingAdjustmentPwnd = PendingAdjustmentPwnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.ClearClientSideImpulses
// (Native, Public, BlueprintCallable)

void UPwndCharacterMovementComponent::ClearClientSideImpulses()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.ClearClientSideImpulses");

	UPwndCharacterMovementComponent_ClearClientSideImpulses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterMovementComponent.AttemptMoveToExternal
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Dir                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Range                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxVelocityOnExit              (Parm, ZeroConstructor, IsPlainOldData)
// float                          MatchTargetActorVelocityPctOnExit (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetYaw                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetPitch               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::AttemptMoveToExternal(const struct FVector& Dir, class AActor* TargetActor, float Distance, float Duration, float Range, float MaxVelocityOnExit, float MatchTargetActorVelocityPctOnExit, bool bFaceTargetYaw, bool bFaceTargetPitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.AttemptMoveToExternal");

	UPwndCharacterMovementComponent_AttemptMoveToExternal_Params params;
	params.Dir = Dir;
	params.TargetActor = TargetActor;
	params.Distance = Distance;
	params.Duration = Duration;
	params.Range = Range;
	params.MaxVelocityOnExit = MaxVelocityOnExit;
	params.MatchTargetActorVelocityPctOnExit = MatchTargetActorVelocityPctOnExit;
	params.bFaceTargetYaw = bFaceTargetYaw;
	params.bFaceTargetPitch = bFaceTargetPitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.AttemptHoldPositionExternal
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetYaw                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFaceTargetPitch               (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecelTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::AttemptHoldPositionExternal(float Duration, class AActor* TargetActor, bool bFaceTargetYaw, bool bFaceTargetPitch, float DecelTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.AttemptHoldPositionExternal");

	UPwndCharacterMovementComponent_AttemptHoldPositionExternal_Params params;
	params.Duration = Duration;
	params.TargetActor = TargetActor;
	params.bFaceTargetYaw = bFaceTargetYaw;
	params.bFaceTargetPitch = bFaceTargetPitch;
	params.DecelTime = DecelTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.AttemptGrappleHookExternal
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndCharacterMovementComponent::AttemptGrappleHookExternal(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.AttemptGrappleHookExternal");

	UPwndCharacterMovementComponent_AttemptGrappleHookExternal_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndCharacterMovementComponent.AddClientSideImpulse
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Impulse                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bCancelVelocity                (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCharacterMovementComponent::AddClientSideImpulse(const struct FVector& Impulse, bool bCancelVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterMovementComponent.AddClientSideImpulse");

	UPwndCharacterMovementComponent_AddClientSideImpulse_Params params;
	params.Impulse = Impulse;
	params.bCancelVelocity = bCancelVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCharacterSkin.ApplySkinMeshTo
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class USkeletalMeshComponent*  Comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPwndCharacterSkin::ApplySkinMeshTo(class USkeletalMeshComponent* Comp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCharacterSkin.ApplySkinMeshTo");

	UPwndCharacterSkin_ApplySkinMeshTo_Params params;
	params.Comp = Comp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatToggleRegeneration
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatToggleRegeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatToggleRegeneration");

	UPwndCheatManager_CheatToggleRegeneration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatToggleMonkeyModeTags
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatToggleMonkeyModeTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatToggleMonkeyModeTags");

	UPwndCheatManager_CheatToggleMonkeyModeTags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatToggleMonkeyModeHUD
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatToggleMonkeyModeHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatToggleMonkeyModeHUD");

	UPwndCheatManager_CheatToggleMonkeyModeHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSwitchTeams
// (Final, Exec, Native, Public)
// Parameters:
// int                            TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSwitchTeams(int TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSwitchTeams");

	UPwndCheatManager_CheatSwitchTeams_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSpeedHack
// (Final, Exec, Native, Public)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSpeedHack(float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSpeedHack");

	UPwndCheatManager_CheatSpeedHack_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSpectate
// (Exec, Native, Public)

void UPwndCheatManager::CheatSpectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSpectate");

	UPwndCheatManager_CheatSpectate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSpawnPwnable
// (Final, Exec, Native, Public)
// Parameters:
// int                            StackSize                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OverrideBounty                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemy                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverrideDuration               (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSpawnPwnable(int StackSize, int OverrideBounty, bool bEnemy, float OverrideDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSpawnPwnable");

	UPwndCheatManager_CheatSpawnPwnable_Params params;
	params.StackSize = StackSize;
	params.OverrideBounty = OverrideBounty;
	params.bEnemy = bEnemy;
	params.OverrideDuration = OverrideDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSkipWarmup
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatSkipWarmup()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSkipWarmup");

	UPwndCheatManager_CheatSkipWarmup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetTeamScore
// (Final, Exec, Native, Public)
// Parameters:
// int                            Score                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetTeamScore(int Score)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetTeamScore");

	UPwndCheatManager_CheatSetTeamScore_Params params;
	params.Score = Score;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextWeaponSkin
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextWeaponSkin(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextWeaponSkin");

	UPwndCheatManager_CheatSetNextWeaponSkin_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextWeapon
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextWeapon(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextWeapon");

	UPwndCheatManager_CheatSetNextWeapon_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextSecondaryAbility
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextSecondaryAbility(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextSecondaryAbility");

	UPwndCheatManager_CheatSetNextSecondaryAbility_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextRevive
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextRevive(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextRevive");

	UPwndCheatManager_CheatSetNextRevive_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextPwnStamp
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextPwnStamp(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextPwnStamp");

	UPwndCheatManager_CheatSetNextPwnStamp_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextPWN
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextPWN(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextPWN");

	UPwndCheatManager_CheatSetNextPWN_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextPrimaryAbility
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextPrimaryAbility(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextPrimaryAbility");

	UPwndCheatManager_CheatSetNextPrimaryAbility_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextPerk
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextPerk(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextPerk");

	UPwndCheatManager_CheatSetNextPerk_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextCharacterSkin
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextCharacterSkin(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextCharacterSkin");

	UPwndCheatManager_CheatSetNextCharacterSkin_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetNextCharacter
// (Final, Exec, Native, Public)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetNextCharacter(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetNextCharacter");

	UPwndCheatManager_CheatSetNextCharacter_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetMonkeyMode
// (Final, Exec, Native, Public)
// Parameters:
// int                            NewMonkeyMode                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            NumLoops                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeBotDifficulty>   NewMonkeyModeDifficulty        (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetMonkeyMode(int NewMonkeyMode, int NumLoops, TEnumAsByte<EeBotDifficulty> NewMonkeyModeDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetMonkeyMode");

	UPwndCheatManager_CheatSetMonkeyMode_Params params;
	params.NewMonkeyMode = NewMonkeyMode;
	params.NumLoops = NumLoops;
	params.NewMonkeyModeDifficulty = NewMonkeyModeDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetMatchTimeRemaining
// (Final, Exec, Native, Public)
// Parameters:
// float                          Time                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetMatchTimeRemaining(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetMatchTimeRemaining");

	UPwndCheatManager_CheatSetMatchTimeRemaining_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetHealth
// (Final, Exec, Native, Public)
// Parameters:
// int                            Health                         (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetHealth(int Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetHealth");

	UPwndCheatManager_CheatSetHealth_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetControllerSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                          Sensitivity                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatSetControllerSensitivity(float Sensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetControllerSensitivity");

	UPwndCheatManager_CheatSetControllerSensitivity_Params params;
	params.Sensitivity = Sensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatSetCharacterByStr
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)

void UPwndCheatManager::CheatSetCharacterByStr(const struct FString& Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatSetCharacterByStr");

	UPwndCheatManager_CheatSetCharacterByStr_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatReviveDurationMul
// (Final, Exec, Native, Public)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatReviveDurationMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatReviveDurationMul");

	UPwndCheatManager_CheatReviveDurationMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatRespawn
// (Exec, Native, Public)

void UPwndCheatManager::CheatRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatRespawn");

	UPwndCheatManager_CheatRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatResetRank
// (Exec, Native, Public)

void UPwndCheatManager::CheatResetRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatResetRank");

	UPwndCheatManager_CheatResetRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatRemoveQueuePenalty
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatRemoveQueuePenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatRemoveQueuePenalty");

	UPwndCheatManager_CheatRemoveQueuePenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatRemovePwnStamps
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatRemovePwnStamps()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatRemovePwnStamps");

	UPwndCheatManager_CheatRemovePwnStamps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatRemoveBot
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)

void UPwndCheatManager::CheatRemoveBot(const struct FString& Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatRemoveBot");

	UPwndCheatManager_CheatRemoveBot_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatPwnRespawnTimeMul
// (Final, Exec, Native, Public)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatPwnRespawnTimeMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatPwnRespawnTimeMul");

	UPwndCheatManager_CheatPwnRespawnTimeMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatPwnageDurationMul
// (Final, Exec, Native, Public)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatPwnageDurationMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatPwnageDurationMul");

	UPwndCheatManager_CheatPwnageDurationMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatKickPlayer
// (Exec, Native, Public)
// Parameters:
// struct FString                 PlayerName                     (Parm, ZeroConstructor)

void UPwndCheatManager::CheatKickPlayer(const struct FString& PlayerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatKickPlayer");

	UPwndCheatManager_CheatKickPlayer_Params params;
	params.PlayerName = PlayerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatInvertShieldTeam
// (Exec, Native, Public)

void UPwndCheatManager::CheatInvertShieldTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatInvertShieldTeam");

	UPwndCheatManager_CheatInvertShieldTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatGodMode
// (Exec, Native, Public)

void UPwndCheatManager::CheatGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatGodMode");

	UPwndCheatManager_CheatGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatForceCrash
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatForceCrash()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatForceCrash");

	UPwndCheatManager_CheatForceCrash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatFinishCooldowns
// (Exec, Native, Public)

void UPwndCheatManager::CheatFinishCooldowns()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatFinishCooldowns");

	UPwndCheatManager_CheatFinishCooldowns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatEndGame
// (Exec, Native, Public)

void UPwndCheatManager::CheatEndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatEndGame");

	UPwndCheatManager_CheatEndGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatAwardRating
// (Exec, Native, Public)
// Parameters:
// int                            Rating                         (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatAwardRating(int Rating)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatAwardRating");

	UPwndCheatManager_CheatAwardRating_Params params;
	params.Rating = Rating;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatAwardRank
// (Exec, Native, Public)

void UPwndCheatManager::CheatAwardRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatAwardRank");

	UPwndCheatManager_CheatAwardRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatAddQueuePenalty
// (Final, Exec, Native, Public)

void UPwndCheatManager::CheatAddQueuePenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatAddQueuePenalty");

	UPwndCheatManager_CheatAddQueuePenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCheatManager.CheatAddBot
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)
// TEnumAsByte<EeBotDifficulty>   Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndCheatManager::CheatAddBot(const struct FString& Char, TEnumAsByte<EeBotDifficulty> Difficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCheatManager.CheatAddBot");

	UPwndCheatManager_CheatAddBot_Params params;
	params.Char = Char;
	params.Difficulty = Difficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndCostTable.GetItemPrices
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<struct FPwndCurrencyEntry> Prices                         (Parm, OutParm, ZeroConstructor)

void UPwndCostTable::STATIC_GetItemPrices(const struct FGuid& Guid, TArray<struct FPwndCurrencyEntry>* Prices)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndCostTable.GetItemPrices");

	UPwndCostTable_GetItemPrices_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Prices != nullptr)
		*Prices = params.Prices;
}


// Function PWND.PwndDamageHistoryComponent.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndDamageHistoryComponent::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.GetServerTimeStamp");

	UPwndDamageHistoryComponent_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDamageHistoryComponent.GetHealHistoryEntry
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Act                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHealHistoryEntry       Entry                          (Parm, OutParm)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndDamageHistoryComponent::GetHealHistoryEntry(class AActor* Act, bool bInflictedHistory, struct FHealHistoryEntry* Entry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.GetHealHistoryEntry");

	UPwndDamageHistoryComponent_GetHealHistoryEntry_Params params;
	params.Act = Act;
	params.bInflictedHistory = bInflictedHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Entry != nullptr)
		*Entry = params.Entry;

	return params.ReturnValue;
}


// Function PWND.PwndDamageHistoryComponent.GetHealHistory
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FPwndReplicatedHealEvent> History                        (Parm, OutParm, ZeroConstructor)
// class AActor*                  Act                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeLimit                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxEntries                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReverse                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDamageHistoryComponent::GetHealHistory(class AActor* Act, float TimeLimit, int MaxEntries, bool bReverse, bool bInflictedHistory, TArray<struct FPwndReplicatedHealEvent>* History)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.GetHealHistory");

	UPwndDamageHistoryComponent_GetHealHistory_Params params;
	params.Act = Act;
	params.TimeLimit = TimeLimit;
	params.MaxEntries = MaxEntries;
	params.bReverse = bReverse;
	params.bInflictedHistory = bInflictedHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (History != nullptr)
		*History = params.History;

	return params.ReturnValue;
}


// Function PWND.PwndDamageHistoryComponent.GetDamageHistoryEntry
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Act                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageHistoryEntry     Entry                          (Parm, OutParm)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndDamageHistoryComponent::GetDamageHistoryEntry(class AActor* Act, bool bInflictedHistory, struct FDamageHistoryEntry* Entry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.GetDamageHistoryEntry");

	UPwndDamageHistoryComponent_GetDamageHistoryEntry_Params params;
	params.Act = Act;
	params.bInflictedHistory = bInflictedHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Entry != nullptr)
		*Entry = params.Entry;

	return params.ReturnValue;
}


// Function PWND.PwndDamageHistoryComponent.GetDamageHistory
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FPwndReplicatedDamageEvent> History                        (Parm, OutParm, ZeroConstructor)
// class AActor*                  Act                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeLimit                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxEntries                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReverse                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDamageHistoryComponent::GetDamageHistory(class AActor* Act, float TimeLimit, int MaxEntries, bool bReverse, bool bInflictedHistory, TArray<struct FPwndReplicatedDamageEvent>* History)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.GetDamageHistory");

	UPwndDamageHistoryComponent_GetDamageHistory_Params params;
	params.Act = Act;
	params.TimeLimit = TimeLimit;
	params.MaxEntries = MaxEntries;
	params.bReverse = bReverse;
	params.bInflictedHistory = bInflictedHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (History != nullptr)
		*History = params.History;

	return params.ReturnValue;
}


// Function PWND.PwndDamageHistoryComponent.GetDamageActors
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          OutDamagers                    (Parm, OutParm, ZeroConstructor)
// float                          TimeLimit                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDamageHistory                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDamageHistoryComponent::GetDamageActors(float TimeLimit, bool bInflictedHistory, bool bDamageHistory, TArray<class AActor*>* OutDamagers)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.GetDamageActors");

	UPwndDamageHistoryComponent_GetDamageActors_Params params;
	params.TimeLimit = TimeLimit;
	params.bInflictedHistory = bInflictedHistory;
	params.bDamageHistory = bDamageHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDamagers != nullptr)
		*OutDamagers = params.OutDamagers;

	return params.ReturnValue;
}


// Function PWND.PwndDamageHistoryComponent.ClientClearHealReceived
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UPwndDamageHistoryComponent::ClientClearHealReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClientClearHealReceived");

	UPwndDamageHistoryComponent_ClientClearHealReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClientClearHealInflicted
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UPwndDamageHistoryComponent::ClientClearHealInflicted()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClientClearHealInflicted");

	UPwndDamageHistoryComponent_ClientClearHealInflicted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClientClearDamageReceived
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UPwndDamageHistoryComponent::ClientClearDamageReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClientClearDamageReceived");

	UPwndDamageHistoryComponent_ClientClearDamageReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClientClearDamageInflicted
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UPwndDamageHistoryComponent::ClientClearDamageInflicted()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClientClearDamageInflicted");

	UPwndDamageHistoryComponent_ClientClearDamageInflicted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClientAddToHealHistory
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FPwndReplicatedHealEvent HealEvent                      (ConstParm, Parm, ReferenceParm)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDamageHistoryComponent::ClientAddToHealHistory(const struct FPwndReplicatedHealEvent& HealEvent, bool bInflictedHistory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClientAddToHealHistory");

	UPwndDamageHistoryComponent_ClientAddToHealHistory_Params params;
	params.HealEvent = HealEvent;
	params.bInflictedHistory = bInflictedHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClientAddToDamageHistory
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, ReferenceParm)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDamageHistoryComponent::ClientAddToDamageHistory(const struct FPwndReplicatedDamageEvent& DamageEvent, bool bInflictedHistory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClientAddToDamageHistory");

	UPwndDamageHistoryComponent_ClientAddToDamageHistory_Params params;
	params.DamageEvent = DamageEvent;
	params.bInflictedHistory = bInflictedHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClearHealReceived
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDamageHistoryComponent::ClearHealReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClearHealReceived");

	UPwndDamageHistoryComponent_ClearHealReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClearHealInflicted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDamageHistoryComponent::ClearHealInflicted()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClearHealInflicted");

	UPwndDamageHistoryComponent_ClearHealInflicted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClearDamageReceived
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDamageHistoryComponent::ClearDamageReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClearDamageReceived");

	UPwndDamageHistoryComponent_ClearDamageReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClearDamageInflicted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDamageHistoryComponent::ClearDamageInflicted()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClearDamageInflicted");

	UPwndDamageHistoryComponent_ClearDamageInflicted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ClearAllHistory
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDamageHistoryComponent::ClearAllHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ClearAllHistory");

	UPwndDamageHistoryComponent_ClearAllHistory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.CleanupHistory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          MaxDuration                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDamageHistory                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHealHistory                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDamageHistoryComponent::CleanupHistory(float MaxDuration, bool bInflictedHistory, bool bDamageHistory, bool bHealHistory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.CleanupHistory");

	UPwndDamageHistoryComponent_CleanupHistory_Params params;
	params.MaxDuration = MaxDuration;
	params.bInflictedHistory = bInflictedHistory;
	params.bDamageHistory = bDamageHistory;
	params.bHealHistory = bHealHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.AddToHistory
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDamageHistoryComponent::AddToHistory(class AActor* DamagedActor, float Damage, class AController* EventInstigator, class AActor* DamageCauser, const struct FDamageEvent& DamageEvent, bool bInflictedHistory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.AddToHistory");

	UPwndDamageHistoryComponent_AddToHistory_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageEvent = DamageEvent;
	params.bInflictedHistory = bInflictedHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDamageHistoryComponent.ActorInHistory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Act                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeLimit                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInflictedHistory              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDamageHistory                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndDamageHistoryComponent::ActorInHistory(class AActor* Act, float TimeLimit, bool bInflictedHistory, bool bDamageHistory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageHistoryComponent.ActorInHistory");

	UPwndDamageHistoryComponent_ActorInHistory_Params params;
	params.Act = Act;
	params.TimeLimit = TimeLimit;
	params.bInflictedHistory = bInflictedHistory;
	params.bDamageHistory = bDamageHistory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDamageType.GetPwndDamageType
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bValid                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UPwndDamageType*         ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndDamageType* UPwndDamageType::STATIC_GetPwndDamageType(class UClass* DamageTypeClass, bool* bValid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDamageType.GetPwndDamageType");

	UPwndDamageType_GetPwndDamageType_Params params;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bValid != nullptr)
		*bValid = params.bValid;

	return params.ReturnValue;
}


// Function PWND.PwndDOTComponent.Retune
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDOTComponent::Retune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.Retune");

	UPwndDOTComponent_Retune_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnTuneShield
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndShield*             Shield                         (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDOTComponent::OnTuneShield(class APwndShield* Shield)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnTuneShield");

	UPwndDOTComponent_OnTuneShield_Params params;
	params.Shield = Shield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnTuneProjectile
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDOTComponent::OnTuneProjectile(class APwndProjectile* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnTuneProjectile");

	UPwndDOTComponent_OnTuneProjectile_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnTuneInventory
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDOTComponent::OnTuneInventory(class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnTuneInventory");

	UPwndDOTComponent_OnTuneInventory_Params params;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnTuneDOT
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPwndDOTComponent*       DOT                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPwndDOTComponent::OnTuneDOT(class UPwndDOTComponent* DOT)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnTuneDOT");

	UPwndDOTComponent_OnTuneDOT_Params params;
	params.DOT = DOT;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnTuneCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDOTComponent::OnTuneCharacter(class APwndCharacter* Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnTuneCharacter");

	UPwndDOTComponent_OnTuneCharacter_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnTuneAOE
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndAOE*                AOE                            (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDOTComponent::OnTuneAOE(class APwndAOE* AOE)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnTuneAOE");

	UPwndDOTComponent_OnTuneAOE_Params params;
	params.AOE = AOE;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnRetune
// (Event, Protected, BlueprintEvent)

void UPwndDOTComponent::OnRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnRetune");

	UPwndDOTComponent_OnRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnResetTuning
// (Event, Protected, BlueprintEvent)

void UPwndDOTComponent::OnResetTuning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnResetTuning");

	UPwndDOTComponent_OnResetTuning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnPostRetune
// (Event, Protected, BlueprintEvent)

void UPwndDOTComponent::OnPostRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnPostRetune");

	UPwndDOTComponent_OnPostRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.OnOwnerFirstPersonChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMeshVisible                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndDOTComponent::OnOwnerFirstPersonChanged(bool bFirstPerson, bool bMeshVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.OnOwnerFirstPersonChanged");

	UPwndDOTComponent_OnOwnerFirstPersonChanged_Params params;
	params.bFirstPerson = bFirstPerson;
	params.bMeshVisible = bMeshVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDOTComponent.ModifyRepNonDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndDOTRepNonDamageAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class UPwndDOTComponent*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPwndDOTComponent* UPwndDOTComponent::ModifyRepNonDamage(const struct FPwndDOTRepNonDamageAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.ModifyRepNonDamage");

	UPwndDOTComponent_ModifyRepNonDamage_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDOTComponent.K2ReadRepNoneDOTDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndDOTRepNonDamage    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndDOTRepNonDamage UPwndDOTComponent::K2ReadRepNoneDOTDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.K2ReadRepNoneDOTDamage");

	UPwndDOTComponent_K2ReadRepNoneDOTDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDOTComponent.GetTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndDOTComponent::GetTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.GetTimeLeft");

	UPwndDOTComponent_GetTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDOTComponent.GetPostProcessEffectInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* UPwndDOTComponent::GetPostProcessEffectInst(bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDOTComponent.GetPostProcessEffectInst");

	UPwndDOTComponent_GetPostProcessEffectInst_Params params;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.SetAttrPct
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Pct                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::SetAttrPct(float Pct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.SetAttrPct");

	UPwndDynamicAttributeComponent_SetAttrPct_Params params;
	params.Pct = Pct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.SetAttr
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInitial                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::SetAttr(int NewValue, bool bInitial)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.SetAttr");

	UPwndDynamicAttributeComponent_SetAttr_Params params;
	params.NewValue = NewValue;
	params.bInitial = bInitial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.RemoveAllRegens
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDynamicAttributeComponent::RemoveAllRegens()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.RemoveAllRegens");

	UPwndDynamicAttributeComponent_RemoveAllRegens_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDynamicAttributeComponent.RemoveAllBoostsAndRegens
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDynamicAttributeComponent::RemoveAllBoostsAndRegens()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.RemoveAllBoostsAndRegens");

	UPwndDynamicAttributeComponent_RemoveAllBoostsAndRegens_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDynamicAttributeComponent.RemoveAllBoosts
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPwndDynamicAttributeComponent::RemoveAllBoosts()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.RemoveAllBoosts");

	UPwndDynamicAttributeComponent_RemoveAllBoosts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDynamicAttributeComponent.K2ReadRepNoneTuning
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDynamicAttributeComponentTuning ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDynamicAttributeComponentTuning UPwndDynamicAttributeComponent::K2ReadRepNoneTuning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.K2ReadRepNoneTuning");

	UPwndDynamicAttributeComponent_K2ReadRepNoneTuning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.IncAttr
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::IncAttr(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.IncAttr");

	UPwndDynamicAttributeComponent_IncAttr_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.GetTotalValue
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::GetTotalValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.GetTotalValue");

	UPwndDynamicAttributeComponent_GetTotalValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.GetTotalPercent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndDynamicAttributeComponent::GetTotalPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.GetTotalPercent");

	UPwndDynamicAttributeComponent_GetTotalPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndDynamicAttributeComponent::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.GetServerTimeStamp");

	UPwndDynamicAttributeComponent_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.GetPercent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndDynamicAttributeComponent::GetPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.GetPercent");

	UPwndDynamicAttributeComponent_GetPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.GetMax
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::GetMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.GetMax");

	UPwndDynamicAttributeComponent_GetMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.GetBoost
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::GetBoost()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.GetBoost");

	UPwndDynamicAttributeComponent_GetBoost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.DecAttr
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::DecAttr(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.DecAttr");

	UPwndDynamicAttributeComponent_DecAttr_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.AlterAttr
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndDynamicAttributeComponent::AlterAttr(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.AlterAttr");

	UPwndDynamicAttributeComponent_AlterAttr_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndDynamicAttributeComponent.AddRegen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FDecayINT               Regen                          (Parm)

void UPwndDynamicAttributeComponent::AddRegen(const struct FDecayINT& Regen)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.AddRegen");

	UPwndDynamicAttributeComponent_AddRegen_Params params;
	params.Regen = Regen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndDynamicAttributeComponent.AddBoost
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FDecayINT               Boost                          (Parm)
// bool                           bApplyToValueFirst             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndDynamicAttributeComponent::AddBoost(const struct FDecayINT& Boost, bool bApplyToValueFirst)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndDynamicAttributeComponent.AddBoost");

	UPwndDynamicAttributeComponent_AddBoost_Params params;
	params.Boost = Boost;
	params.bApplyToValueFirst = bApplyToValueFirst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndEditableText.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   InText                         (Parm)

void UPwndEditableText::SetText(const struct FText& InText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEditableText.SetText");

	UPwndEditableText_SetText_Params params;
	params.InText = InText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEditableText.SetIsReadOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InbIsReadyOnly                 (Parm, ZeroConstructor, IsPlainOldData)

void UPwndEditableText::SetIsReadOnly(bool InbIsReadyOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEditableText.SetIsReadOnly");

	UPwndEditableText_SetIsReadOnly_Params params;
	params.InbIsReadyOnly = InbIsReadyOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEditableText.SetIsPassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InbIsPassword                  (Parm, ZeroConstructor, IsPlainOldData)

void UPwndEditableText::SetIsPassword(bool InbIsPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEditableText.SetIsPassword");

	UPwndEditableText_SetIsPassword_Params params;
	params.InbIsPassword = InbIsPassword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEditableText.SetHintText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   InHintText                     (Parm)

void UPwndEditableText::SetHintText(const struct FText& InHintText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEditableText.SetHintText");

	UPwndEditableText_SetHintText_Params params;
	params.InHintText = InHintText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction PWND.PwndEditableText.OnKeyPressedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FGeometry               MyGeometry                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FKeyEvent               InKeyEvent                     (ConstParm, Parm, OutParm, ReferenceParm)

void UPwndEditableText::OnKeyPressedEvent__DelegateSignature(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction PWND.PwndEditableText.OnKeyPressedEvent__DelegateSignature");

	UPwndEditableText_OnKeyPressedEvent__DelegateSignature_Params params;
	params.MyGeometry = MyGeometry;
	params.InKeyEvent = InKeyEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEditableText.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndEditableText::GetText()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEditableText.GetText");

	UPwndEditableText_GetText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndEndOfMatchSequence.OnMatchStateChanged
// (Native, Public)
// Parameters:
// class APwndGameState*          GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   MatchState                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndEndOfMatchSequence::OnMatchStateChanged(class APwndGameState* GameState, const struct FName& MatchState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEndOfMatchSequence.OnMatchStateChanged");

	APwndEndOfMatchSequence_OnMatchStateChanged_Params params;
	params.GameState = GameState;
	params.MatchState = MatchState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEndOfMatchSequence.OnEndOfMatchWinningPwn
// (Event, Public, BlueprintEvent)

void APwndEndOfMatchSequence::OnEndOfMatchWinningPwn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEndOfMatchSequence.OnEndOfMatchWinningPwn");

	APwndEndOfMatchSequence_OnEndOfMatchWinningPwn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEndOfMatchSequence.OnEndOfMatchStarted
// (Event, Public, BlueprintEvent)

void APwndEndOfMatchSequence::OnEndOfMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEndOfMatchSequence.OnEndOfMatchStarted");

	APwndEndOfMatchSequence_OnEndOfMatchStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEndOfMatchSequence.OnEndOfMatchShowRankings
// (Event, Public, BlueprintEvent)

void APwndEndOfMatchSequence::OnEndOfMatchShowRankings()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEndOfMatchSequence.OnEndOfMatchShowRankings");

	APwndEndOfMatchSequence_OnEndOfMatchShowRankings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEndOfMatchSequence.OnEndOfMatchShowLoadouts
// (Event, Public, BlueprintEvent)

void APwndEndOfMatchSequence::OnEndOfMatchShowLoadouts()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEndOfMatchSequence.OnEndOfMatchShowLoadouts");

	APwndEndOfMatchSequence_OnEndOfMatchShowLoadouts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndEndOfMatchSequence.AdjustGameWinnerCameraLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 OldLocation                    (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndEndOfMatchSequence::AdjustGameWinnerCameraLocation(const struct FVector& OldLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndEndOfMatchSequence.AdjustGameWinnerCameraLocation");

	APwndEndOfMatchSequence_AdjustGameWinnerCameraLocation_Params params;
	params.OldLocation = OldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.StopAttachedCameraShake
// (Native, Public, BlueprintCallable)
// Parameters:
// class UCameraShake*            ShakeInstance                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bImmediately                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::StopAttachedCameraShake(class UCameraShake* ShakeInstance, bool bImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.StopAttachedCameraShake");

	APwndFX_StopAttachedCameraShake_Params params;
	params.ShakeInstance = ShakeInstance;
	params.bImmediately = bImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.SpawnRandomDecal
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class UMaterialInterface*> Materials                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 DecalSize                      (Parm, IsPlainOldData)
// float                          DecalRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          FadeDelay                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          FadeDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            SortOrder                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InSpawner                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceSearchDist              (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceDecalSpawnDepth         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseVisualGeometry             (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* APwndFX::STATIC_SpawnRandomDecal(TArray<class UMaterialInterface*> Materials, const struct FTransform& InTransform, const struct FVector& DecalSize, float DecalRotation, float FadeDelay, float FadeDuration, int SortOrder, class AActor* InSpawner, float SurfaceSearchDist, float SurfaceDecalSpawnDepth, bool bUseVisualGeometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SpawnRandomDecal");

	APwndFX_SpawnRandomDecal_Params params;
	params.Materials = Materials;
	params.InTransform = InTransform;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.FadeDelay = FadeDelay;
	params.FadeDuration = FadeDuration;
	params.SortOrder = SortOrder;
	params.InSpawner = InSpawner;
	params.SurfaceSearchDist = SurfaceSearchDist;
	params.SurfaceDecalSpawnDepth = SurfaceDecalSpawnDepth;
	params.bUseVisualGeometry = bUseVisualGeometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.SpawnLocalRandomDecal
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UMaterialInterface*> Materials                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FRVector2DExp           DecalSize                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloat                 DecalRotation                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloatExp              FadeDelay                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloatExp              FadeDuration                   (ConstParm, Parm, OutParm, ReferenceParm)
// int                            SortOrder                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceSearchDist              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceSquare                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalDepth                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceDecalSpawnDepth         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseVisualGeometry             (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* APwndFX::SpawnLocalRandomDecal(TArray<class UMaterialInterface*> Materials, const struct FRVector2DExp& DecalSize, const struct FRFloat& DecalRotation, const struct FRFloatExp& FadeDelay, const struct FRFloatExp& FadeDuration, int SortOrder, float SurfaceSearchDist, bool bForceSquare, float DecalDepth, float SurfaceDecalSpawnDepth, bool bUseVisualGeometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SpawnLocalRandomDecal");

	APwndFX_SpawnLocalRandomDecal_Params params;
	params.Materials = Materials;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.FadeDelay = FadeDelay;
	params.FadeDuration = FadeDuration;
	params.SortOrder = SortOrder;
	params.SurfaceSearchDist = SurfaceSearchDist;
	params.bForceSquare = bForceSquare;
	params.DecalDepth = DecalDepth;
	params.SurfaceDecalSpawnDepth = SurfaceDecalSpawnDepth;
	params.bUseVisualGeometry = bUseVisualGeometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.SpawnLocalDecalFromDB
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  FXDBClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FRVector2DExp           DecalSize                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloat                 DecalRotation                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloatExp              FadeDelay                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloatExp              FadeDuration                   (ConstParm, Parm, OutParm, ReferenceParm)
// int                            SortOrder                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceSearchDist              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceSquare                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalDepth                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceDecalSpawnDepth         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseVisualGeometry             (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* APwndFX::SpawnLocalDecalFromDB(class UClass* FXDBClass, const struct FName& Type, const struct FRVector2DExp& DecalSize, const struct FRFloat& DecalRotation, const struct FRFloatExp& FadeDelay, const struct FRFloatExp& FadeDuration, int SortOrder, float SurfaceSearchDist, bool bForceSquare, float DecalDepth, float SurfaceDecalSpawnDepth, bool bUseVisualGeometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SpawnLocalDecalFromDB");

	APwndFX_SpawnLocalDecalFromDB_Params params;
	params.FXDBClass = FXDBClass;
	params.Type = Type;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.FadeDelay = FadeDelay;
	params.FadeDuration = FadeDuration;
	params.SortOrder = SortOrder;
	params.SurfaceSearchDist = SurfaceSearchDist;
	params.bForceSquare = bForceSquare;
	params.DecalDepth = DecalDepth;
	params.SurfaceDecalSpawnDepth = SurfaceDecalSpawnDepth;
	params.bUseVisualGeometry = bUseVisualGeometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.SpawnLocalDecal
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      Material                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRVector2DExp           DecalSize                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloat                 DecalRotation                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloatExp              FadeDelay                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRFloatExp              FadeDuration                   (ConstParm, Parm, OutParm, ReferenceParm)
// int                            SortOrder                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceSearchDist              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceSquare                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalDepth                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceDecalSpawnDepth         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseVisualGeometry             (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* APwndFX::SpawnLocalDecal(class UMaterialInterface* Material, const struct FRVector2DExp& DecalSize, const struct FRFloat& DecalRotation, const struct FRFloatExp& FadeDelay, const struct FRFloatExp& FadeDuration, int SortOrder, float SurfaceSearchDist, bool bForceSquare, float DecalDepth, float SurfaceDecalSpawnDepth, bool bUseVisualGeometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SpawnLocalDecal");

	APwndFX_SpawnLocalDecal_Params params;
	params.Material = Material;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.FadeDelay = FadeDelay;
	params.FadeDuration = FadeDuration;
	params.SortOrder = SortOrder;
	params.SurfaceSearchDist = SurfaceSearchDist;
	params.bForceSquare = bForceSquare;
	params.DecalDepth = DecalDepth;
	params.SurfaceDecalSpawnDepth = SurfaceDecalSpawnDepth;
	params.bUseVisualGeometry = bUseVisualGeometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.SpawnFX
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  FXClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              InTransform                    (Parm, IsPlainOldData)
// bool                           bShouldAutoDestroy             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InSpawner                      (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InAttachActor                  (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         InAttachComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   InSocketName                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   InAttachLocationType           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndFX*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndFX* APwndFX::STATIC_SpawnFX(class UClass* FXClass, const struct FTransform& InTransform, bool bShouldAutoDestroy, class AActor* InSpawner, class APawn* InInstigator, unsigned char InTeamNum, class AActor* InAttachActor, class USceneComponent* InAttachComponent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> InAttachLocationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SpawnFX");

	APwndFX_SpawnFX_Params params;
	params.FXClass = FXClass;
	params.InTransform = InTransform;
	params.bShouldAutoDestroy = bShouldAutoDestroy;
	params.InSpawner = InSpawner;
	params.InInstigator = InInstigator;
	params.InTeamNum = InTeamNum;
	params.InAttachActor = InAttachActor;
	params.InAttachComponent = InAttachComponent;
	params.InSocketName = InSocketName;
	params.InAttachLocationType = InAttachLocationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.SpawnDecalFromDB
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  FXDBClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 DecalSize                      (Parm, IsPlainOldData)
// float                          DecalRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          FadeDelay                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          FadeDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            SortOrder                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InSpawner                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceSearchDist              (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceDecalSpawnDepth         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseVisualGeometry             (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* APwndFX::STATIC_SpawnDecalFromDB(class UClass* FXDBClass, const struct FName& Type, const struct FTransform& InTransform, const struct FVector& DecalSize, float DecalRotation, float FadeDelay, float FadeDuration, int SortOrder, class AActor* InSpawner, float SurfaceSearchDist, float SurfaceDecalSpawnDepth, bool bUseVisualGeometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SpawnDecalFromDB");

	APwndFX_SpawnDecalFromDB_Params params;
	params.FXDBClass = FXDBClass;
	params.Type = Type;
	params.InTransform = InTransform;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.FadeDelay = FadeDelay;
	params.FadeDuration = FadeDuration;
	params.SortOrder = SortOrder;
	params.InSpawner = InSpawner;
	params.SurfaceSearchDist = SurfaceSearchDist;
	params.SurfaceDecalSpawnDepth = SurfaceDecalSpawnDepth;
	params.bUseVisualGeometry = bUseVisualGeometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.SpawnDecal
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      Material                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 DecalSize                      (Parm, IsPlainOldData)
// float                          DecalRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          FadeDelay                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          FadeDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            SortOrder                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InSpawner                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceSearchDist              (Parm, ZeroConstructor, IsPlainOldData)
// float                          SurfaceDecalSpawnDepth         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseVisualGeometry             (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* APwndFX::STATIC_SpawnDecal(class UMaterialInterface* Material, const struct FTransform& InTransform, const struct FVector& DecalSize, float DecalRotation, float FadeDelay, float FadeDuration, int SortOrder, class AActor* InSpawner, float SurfaceSearchDist, float SurfaceDecalSpawnDepth, bool bUseVisualGeometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SpawnDecal");

	APwndFX_SpawnDecal_Params params;
	params.Material = Material;
	params.InTransform = InTransform;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.FadeDelay = FadeDelay;
	params.FadeDuration = FadeDuration;
	params.SortOrder = SortOrder;
	params.InSpawner = InSpawner;
	params.SurfaceSearchDist = SurfaceSearchDist;
	params.SurfaceDecalSpawnDepth = SurfaceDecalSpawnDepth;
	params.bUseVisualGeometry = bUseVisualGeometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.SetTeamNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::SetTeamNum(unsigned char NewTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SetTeamNum");

	APwndFX_SetTeamNum_Params params;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.SetMeshAlpha
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::SetMeshAlpha(float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SetMeshAlpha");

	APwndFX_SetMeshAlpha_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.SetCompChildrenVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         Parent                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeParent                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::STATIC_SetCompChildrenVisible(class USceneComponent* Parent, bool bVisible, bool bIncludeParent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SetCompChildrenVisible");

	APwndFX_SetCompChildrenVisible_Params params;
	params.Parent = Parent;
	params.bVisible = bVisible;
	params.bIncludeParent = bIncludeParent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.SetCompChildrenActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         Parent                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReset                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeParent                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::STATIC_SetCompChildrenActive(class USceneComponent* Parent, bool bActive, bool bReset, bool bIncludeParent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SetCompChildrenActive");

	APwndFX_SetCompChildrenActive_Params params;
	params.Parent = Parent;
	params.bActive = bActive;
	params.bReset = bReset;
	params.bIncludeParent = bIncludeParent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.SetChildrenActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USceneComponent*         Parent                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReset                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeParent                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::SetChildrenActive(class USceneComponent* Parent, bool bActive, bool bReset, bool bIncludeParent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SetChildrenActive");

	APwndFX_SetChildrenActive_Params params;
	params.Parent = Parent;
	params.bActive = bActive;
	params.bReset = bReset;
	params.bIncludeParent = bIncludeParent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsActive                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::SetActive(bool bIsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.SetActive");

	APwndFX_SetActive_Params params;
	params.bIsActive = bIsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Vec                            (Parm, IsPlainOldData)

void APwndFX::PostVector(const struct FName& Name, const struct FVector& Vec)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostVector");

	APwndFX_PostVector_Params params;
	params.Name = Name;
	params.Vec = Vec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rot                            (Parm, IsPlainOldData)

void APwndFX::PostRotator(const struct FName& Name, const struct FRotator& Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostRotator");

	APwndFX_PostRotator_Params params;
	params.Name = Name;
	params.Rot = Rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::PostObject(const struct FName& Name, class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostObject");

	APwndFX_PostObject_Params params;
	params.Name = Name;
	params.Object = Object;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostInteractionChain
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInteractionChainEntry  Chain                          (ConstParm, Parm, OutParm, ReferenceParm)

void APwndFX::PostInteractionChain(const struct FInteractionChainEntry& Chain)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostInteractionChain");

	APwndFX_PostInteractionChain_Params params;
	params.Chain = Chain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::PostInt(const struct FName& Name, int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostInt");

	APwndFX_PostInt_Params params;
	params.Name = Name;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Num                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::PostFloat(const struct FName& Name, float Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostFloat");

	APwndFX_PostFloat_Params params;
	params.Name = Name;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::PostEvent(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostEvent");

	APwndFX_PostEvent_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PostBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::PostBool(const struct FName& Name, bool val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PostBool");

	APwndFX_PostBool_Params params;
	params.Name = Name;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.PlayAttachedCameraShake
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  ShakeClass                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECameraAnimPlaySpace> PlaySpace                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                UserPlaySpaceRot               (Parm, IsPlainOldData)
// bool                           bUseInteractionTarget          (Parm, ZeroConstructor, IsPlainOldData)
// class UCameraShake*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCameraShake* APwndFX::PlayAttachedCameraShake(class UClass* ShakeClass, float Scale, TEnumAsByte<ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot, bool bUseInteractionTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.PlayAttachedCameraShake");

	APwndFX_PlayAttachedCameraShake_Params params;
	params.ShakeClass = ShakeClass;
	params.Scale = Scale;
	params.PlaySpace = PlaySpace;
	params.UserPlaySpaceRot = UserPlaySpaceRot;
	params.bUseInteractionTarget = bUseInteractionTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.OnSetTeamNum
// (Event, Protected, BlueprintEvent)
// Parameters:
// unsigned char                  OldTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnSetTeamNum(unsigned char OldTeamNum, unsigned char NewTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnSetTeamNum");

	APwndFX_OnSetTeamNum_Params params;
	params.OldTeamNum = OldTeamNum;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnSetMeshAlpha
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnSetMeshAlpha(float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnSetMeshAlpha");

	APwndFX_OnSetMeshAlpha_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnSetActive
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           bIsActive                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnSetActive(bool bIsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnSetActive");

	APwndFX_OnSetActive_Params params;
	params.bIsActive = bIsActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostVector
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Vec                            (Parm, IsPlainOldData)

void APwndFX::OnPostVector(const struct FName& Name, const struct FVector& Vec)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostVector");

	APwndFX_OnPostVector_Params params;
	params.Name = Name;
	params.Vec = Vec;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostRotator
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rot                            (Parm, IsPlainOldData)

void APwndFX::OnPostRotator(const struct FName& Name, const struct FRotator& Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostRotator");

	APwndFX_OnPostRotator_Params params;
	params.Name = Name;
	params.Rot = Rot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostObject
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnPostObject(const struct FName& Name, class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostObject");

	APwndFX_OnPostObject_Params params;
	params.Name = Name;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostInteractionChain
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FInteractionChainEntry  Chain                          (ConstParm, Parm, OutParm, ReferenceParm)

void APwndFX::OnPostInteractionChain(const struct FInteractionChainEntry& Chain)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostInteractionChain");

	APwndFX_OnPostInteractionChain_Params params;
	params.Chain = Chain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostInt
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnPostInt(const struct FName& Name, int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostInt");

	APwndFX_OnPostInt_Params params;
	params.Name = Name;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostFloat
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Num                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnPostFloat(const struct FName& Name, float Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostFloat");

	APwndFX_OnPostFloat_Params params;
	params.Name = Name;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnPostEvent(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostEvent");

	APwndFX_OnPostEvent_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.OnPostBool
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndFX::OnPostBool(const struct FName& Name, bool val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.OnPostBool");

	APwndFX_OnPostBool_Params params;
	params.Name = Name;
	params.val = val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndFX.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndFX::IsFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.IsFinished");

	APwndFX_IsFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndFX::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.IsActive");

	APwndFX_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndFX::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.GetServerTimeStamp");

	APwndFX_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.GetAttachedPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndPlayerController*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndPlayerController* APwndFX::GetAttachedPC()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.GetAttachedPC");

	APwndFX_GetAttachedPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.GetAttachedInteractionPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndPlayerController*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndPlayerController* APwndFX::GetAttachedInteractionPC()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.GetAttachedInteractionPC");

	APwndFX_GetAttachedInteractionPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.GetAttachedInteractionChar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndFX::GetAttachedInteractionChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.GetAttachedInteractionChar");

	APwndFX_GetAttachedInteractionChar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFX.GetAttachedChar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndFX::GetAttachedChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFX.GetAttachedChar");

	APwndFX_GetAttachedChar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.SpawnSound
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndFXDatabaseEntry    Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FTransform              InTransform                    (Parm, IsPlainOldData)
// class AActor*                  InAttachActor                  (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         InAttachComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   InSocketName                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   InAttachLocationType           (Parm, ZeroConstructor, IsPlainOldData)
// class UAudioComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAudioComponent* UPwndFXDatabase::STATIC_SpawnSound(class UObject* WorldContextObject, const struct FPwndFXDatabaseEntry& Entry, const struct FTransform& InTransform, class AActor* InAttachActor, class USceneComponent* InAttachComponent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> InAttachLocationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.SpawnSound");

	UPwndFXDatabase_SpawnSound_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Entry = Entry;
	params.InTransform = InTransform;
	params.InAttachActor = InAttachActor;
	params.InAttachComponent = InAttachComponent;
	params.InSocketName = InSocketName;
	params.InAttachLocationType = InAttachLocationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.SpawnPwndFX
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndFXDatabaseEntry    Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FTransform              InTransform                    (Parm, IsPlainOldData)
// bool                           bShouldAutoDestroy             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InSpawner                      (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InAttachActor                  (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         InAttachComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   InSocketName                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   InAttachLocationType           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndFX*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndFX* UPwndFXDatabase::STATIC_SpawnPwndFX(const struct FPwndFXDatabaseEntry& Entry, const struct FTransform& InTransform, bool bShouldAutoDestroy, class AActor* InSpawner, class APawn* InInstigator, unsigned char InTeamNum, class AActor* InAttachActor, class USceneComponent* InAttachComponent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> InAttachLocationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.SpawnPwndFX");

	UPwndFXDatabase_SpawnPwndFX_Params params;
	params.Entry = Entry;
	params.InTransform = InTransform;
	params.bShouldAutoDestroy = bShouldAutoDestroy;
	params.InSpawner = InSpawner;
	params.InInstigator = InInstigator;
	params.InTeamNum = InTeamNum;
	params.InAttachActor = InAttachActor;
	params.InAttachComponent = InAttachComponent;
	params.InSocketName = InSocketName;
	params.InAttachLocationType = InAttachLocationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.SpawnParticleSys
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndFXDatabaseEntry    Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FTransform              InTransform                    (Parm, IsPlainOldData)
// bool                           bShouldAutoDestroy             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InAttachActor                  (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         InAttachComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   InSocketName                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   InAttachLocationType           (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UPwndFXDatabase::STATIC_SpawnParticleSys(class UObject* WorldContextObject, const struct FPwndFXDatabaseEntry& Entry, const struct FTransform& InTransform, bool bShouldAutoDestroy, class AActor* InAttachActor, class USceneComponent* InAttachComponent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> InAttachLocationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.SpawnParticleSys");

	UPwndFXDatabase_SpawnParticleSys_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Entry = Entry;
	params.InTransform = InTransform;
	params.bShouldAutoDestroy = bShouldAutoDestroy;
	params.InAttachActor = InAttachActor;
	params.InAttachComponent = InAttachComponent;
	params.InSocketName = InSocketName;
	params.InAttachLocationType = InAttachLocationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.SpawnDecal
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndFXDatabaseEntry    Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FTransform              InTransform                    (Parm, IsPlainOldData)
// class AActor*                  InSpawner                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 DecalSize                      (Parm, IsPlainOldData)
// float                          DecalRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalFadeDelay                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalFadeDuration              (Parm, ZeroConstructor, IsPlainOldData)
// int                            DecalSortOrder                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalSurfaceSearchDist         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalSpawnDepth                (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* UPwndFXDatabase::STATIC_SpawnDecal(const struct FPwndFXDatabaseEntry& Entry, const struct FTransform& InTransform, class AActor* InSpawner, const struct FVector& DecalSize, float DecalRotation, float DecalFadeDelay, float DecalFadeDuration, int DecalSortOrder, float DecalSurfaceSearchDist, float DecalSpawnDepth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.SpawnDecal");

	UPwndFXDatabase_SpawnDecal_Params params;
	params.Entry = Entry;
	params.InTransform = InTransform;
	params.InSpawner = InSpawner;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.DecalFadeDelay = DecalFadeDelay;
	params.DecalFadeDuration = DecalFadeDuration;
	params.DecalSortOrder = DecalSortOrder;
	params.DecalSurfaceSearchDist = DecalSurfaceSearchDist;
	params.DecalSpawnDepth = DecalSpawnDepth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.SpawnAllFX
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndFXDatabaseEntry    Entry                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FTransform              InTransform                    (Parm, IsPlainOldData)
// bool                           bShouldAutoDestroy             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InSpawner                      (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InAttachActor                  (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         InAttachComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   InSocketName                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   InAttachLocationType           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 DecalSize                      (Parm, IsPlainOldData)
// float                          DecalRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalFadeDelay                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalFadeDuration              (Parm, ZeroConstructor, IsPlainOldData)
// int                            DecalSortOrder                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalSurfaceSearchDist         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DecalSpawnDepth                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UObject*> UPwndFXDatabase::STATIC_SpawnAllFX(const struct FPwndFXDatabaseEntry& Entry, const struct FTransform& InTransform, bool bShouldAutoDestroy, class AActor* InSpawner, class APawn* InInstigator, unsigned char InTeamNum, class AActor* InAttachActor, class USceneComponent* InAttachComponent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> InAttachLocationType, const struct FVector& DecalSize, float DecalRotation, float DecalFadeDelay, float DecalFadeDuration, int DecalSortOrder, float DecalSurfaceSearchDist, float DecalSpawnDepth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.SpawnAllFX");

	UPwndFXDatabase_SpawnAllFX_Params params;
	params.Entry = Entry;
	params.InTransform = InTransform;
	params.bShouldAutoDestroy = bShouldAutoDestroy;
	params.InSpawner = InSpawner;
	params.InInstigator = InInstigator;
	params.InTeamNum = InTeamNum;
	params.InAttachActor = InAttachActor;
	params.InAttachComponent = InAttachComponent;
	params.InSocketName = InSocketName;
	params.InAttachLocationType = InAttachLocationType;
	params.DecalSize = DecalSize;
	params.DecalRotation = DecalRotation;
	params.DecalFadeDelay = DecalFadeDelay;
	params.DecalFadeDuration = DecalFadeDuration;
	params.DecalSortOrder = DecalSortOrder;
	params.DecalSurfaceSearchDist = DecalSurfaceSearchDist;
	params.DecalSpawnDepth = DecalSpawnDepth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.FindFXByHit
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPwndFXDatabaseEntry    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndFXDatabaseEntry UPwndFXDatabase::FindFXByHit(const struct FName& Type, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.FindFXByHit");

	UPwndFXDatabase_FindFXByHit_Params params;
	params.Type = Type;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.FindFXByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Key                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndFXDatabaseEntry    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndFXDatabaseEntry UPwndFXDatabase::FindFXByClass(const struct FName& Type, class UClass* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.FindFXByClass");

	UPwndFXDatabase_FindFXByClass_Params params;
	params.Type = Type;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.FindFX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Key                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndFXDatabaseEntry    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndFXDatabaseEntry UPwndFXDatabase::FindFX(const struct FName& Type, class UObject* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.FindFX");

	UPwndFXDatabase_FindFX_Params params;
	params.Type = Type;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.DBFindFXByHit
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  FXDBClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPwndFXDatabaseEntry    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndFXDatabaseEntry UPwndFXDatabase::STATIC_DBFindFXByHit(class UClass* FXDBClass, const struct FName& Type, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.DBFindFXByHit");

	UPwndFXDatabase_DBFindFXByHit_Params params;
	params.FXDBClass = FXDBClass;
	params.Type = Type;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.DBFindFXByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  FXDBClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Key                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndFXDatabaseEntry    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndFXDatabaseEntry UPwndFXDatabase::STATIC_DBFindFXByClass(class UClass* FXDBClass, const struct FName& Type, class UClass* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.DBFindFXByClass");

	UPwndFXDatabase_DBFindFXByClass_Params params;
	params.FXDBClass = FXDBClass;
	params.Type = Type;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndFXDatabase.DBFindFX
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  FXDBClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Key                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndFXDatabaseEntry    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndFXDatabaseEntry UPwndFXDatabase::STATIC_DBFindFX(class UClass* FXDBClass, const struct FName& Type, class UObject* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndFXDatabase.DBFindFX");

	UPwndFXDatabase_DBFindFX_Params params;
	params.FXDBClass = FXDBClass;
	params.Type = Type;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.ShouldShowMonkeyTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndGameInstance::ShouldShowMonkeyTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.ShouldShowMonkeyTags");

	UPwndGameInstance_ShouldShowMonkeyTags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.ShouldDrawMonkeyModeHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndGameInstance::ShouldDrawMonkeyModeHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.ShouldDrawMonkeyModeHUD");

	UPwndGameInstance_ShouldDrawMonkeyModeHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.SetMonkeyMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewMonkeyMode                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            NumLoops                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeBotDifficulty>   NewMonkeyModeDifficulty        (Parm, ZeroConstructor, IsPlainOldData)

void UPwndGameInstance::SetMonkeyMode(int NewMonkeyMode, int NumLoops, TEnumAsByte<EeBotDifficulty> NewMonkeyModeDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.SetMonkeyMode");

	UPwndGameInstance_SetMonkeyMode_Params params;
	params.NewMonkeyMode = NewMonkeyMode;
	params.NumLoops = NumLoops;
	params.NewMonkeyModeDifficulty = NewMonkeyModeDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameInstance.PreLoadMap
// (Native, Public)
// Parameters:
// struct FString                 MapName                        (Parm, ZeroConstructor)

void UPwndGameInstance::PreLoadMap(const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.PreLoadMap");

	UPwndGameInstance_PreLoadMap_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameInstance.PostLoadMap
// (Native, Public)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)

void UPwndGameInstance::PostLoadMap(class UWorld* World)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.PostLoadMap");

	UPwndGameInstance_PostLoadMap_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameInstance.OnNetworkManagerPlayerIsTalking
// (Final, Native, Public)
// Parameters:
// bool                           isTalking                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 UserID                         (Parm, ZeroConstructor)

void UPwndGameInstance::OnNetworkManagerPlayerIsTalking(bool isTalking, const struct FString& UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.OnNetworkManagerPlayerIsTalking");

	UPwndGameInstance_OnNetworkManagerPlayerIsTalking_Params params;
	params.isTalking = isTalking;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameInstance.IsSmartMonkeyMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndGameInstance::IsSmartMonkeyMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.IsSmartMonkeyMode");

	UPwndGameInstance_IsSmartMonkeyMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.IsMonkeyMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndGameInstance::IsMonkeyMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.IsMonkeyMode");

	UPwndGameInstance_IsMonkeyMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.GetPwndPersistentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndPersistentData*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndPersistentData* UPwndGameInstance::GetPwndPersistentData()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.GetPwndPersistentData");

	UPwndGameInstance_GetPwndPersistentData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.GetPwndNetworkManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndNetworkManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndNetworkManager* UPwndGameInstance::GetPwndNetworkManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.GetPwndNetworkManager");

	UPwndGameInstance_GetPwndNetworkManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.GetPwndLocalInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndLocalInventory*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndLocalInventory* UPwndGameInstance::GetPwndLocalInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.GetPwndLocalInventory");

	UPwndGameInstance_GetPwndLocalInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.GetMonkeyModeDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeBotDifficulty> UPwndGameInstance::GetMonkeyModeDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.GetMonkeyModeDifficulty");

	UPwndGameInstance_GetMonkeyModeDifficulty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.GetMonkeyMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndGameInstance::GetMonkeyMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.GetMonkeyMode");

	UPwndGameInstance_GetMonkeyMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameInstance.EndLoadingScreen
// (Native, Public, BlueprintCallable)

void UPwndGameInstance::EndLoadingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.EndLoadingScreen");

	UPwndGameInstance_EndLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameInstance.BeginLoadingScreen
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 MapName                        (Parm, ZeroConstructor)

void UPwndGameInstance::BeginLoadingScreen(const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameInstance.BeginLoadingScreen");

	UPwndGameInstance_BeginLoadingScreen_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.SwapLevelActorTeams
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndGameMode::SwapLevelActorTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.SwapLevelActorTeams");

	APwndGameMode_SwapLevelActorTeams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.StartRevive
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             ReviverCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::StartRevive(class AController* ReviverCtrl, class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.StartRevive");

	APwndGameMode_StartRevive_Params params;
	params.ReviverCtrl = ReviverCtrl;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.StartPwnage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             PwnerCtrl                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::StartPwnage(class AController* PwnerCtrl, class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.StartPwnage");

	APwndGameMode_StartPwnage_Params params;
	params.PwnerCtrl = PwnerCtrl;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.StartHumiliation
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             HumiliatorCtrl                 (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::StartHumiliation(class AController* HumiliatorCtrl, class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.StartHumiliation");

	APwndGameMode_StartHumiliation_Params params;
	params.HumiliatorCtrl = HumiliatorCtrl;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.StartCarry
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             CarrierCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::StartCarry(class AController* CarrierCtrl, class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.StartCarry");

	APwndGameMode_StartCarry_Params params;
	params.CarrierCtrl = CarrierCtrl;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.SpawnPwnable
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APwndAIController*       SpawnedController              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, IsPlainOldData)
// TArray<class UClass*>          BodyClasses                    (Parm, ZeroConstructor)
// int                            StackSize                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OverrideBounty                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverrideDuration               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowNeutral                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowHybridNeutral            (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* APwndGameMode::SpawnPwnable(const struct FVector& Location, const struct FRotator& Rotation, TArray<class UClass*> BodyClasses, int StackSize, int OverrideBounty, int TeamNum, float OverrideDuration, bool bAllowNeutral, bool bAllowHybridNeutral, class APwndAIController** SpawnedController)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.SpawnPwnable");

	APwndGameMode_SpawnPwnable_Params params;
	params.Location = Location;
	params.Rotation = Rotation;
	params.BodyClasses = BodyClasses;
	params.StackSize = StackSize;
	params.OverrideBounty = OverrideBounty;
	params.TeamNum = TeamNum;
	params.OverrideDuration = OverrideDuration;
	params.bAllowNeutral = bAllowNeutral;
	params.bAllowHybridNeutral = bAllowHybridNeutral;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SpawnedController != nullptr)
		*SpawnedController = params.SpawnedController;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ShouldSendTelemetry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::ShouldSendTelemetry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ShouldSendTelemetry");

	APwndGameMode_ShouldSendTelemetry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.SetSPLoadout
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndLoadout            Loadout                        (ConstParm, Parm, OutParm, ReferenceParm)

void APwndGameMode::SetSPLoadout(const struct FPwndLoadout& Loadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.SetSPLoadout");

	APwndGameMode_SetSPLoadout_Params params;
	params.Loadout = Loadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.SetReviveDurationMul
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::SetReviveDurationMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.SetReviveDurationMul");

	APwndGameMode_SetReviveDurationMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.SetPwnRespawnTimeMul
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::SetPwnRespawnTimeMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.SetPwnRespawnTimeMul");

	APwndGameMode_SetPwnRespawnTimeMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.SetPwnageDurationMul
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::SetPwnageDurationMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.SetPwnageDurationMul");

	APwndGameMode_SetPwnageDurationMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.SetMatchSubState
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::SetMatchSubState(const struct FName& NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.SetMatchSubState");

	APwndGameMode_SetMatchSubState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.ScorePwnage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             PwnerCtrl                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::ScorePwnage(class AController* PwnerCtrl, class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ScorePwnage");

	APwndGameMode_ScorePwnage_Params params;
	params.PwnerCtrl = PwnerCtrl;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ResetMatchTimeRemaining
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndGameMode::ResetMatchTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ResetMatchTimeRemaining");

	APwndGameMode_ResetMatchTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.RemoveBot
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)

void APwndGameMode::RemoveBot(const struct FString& Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.RemoveBot");

	APwndGameMode_RemoveBot_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.RatePlayerStart
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerStart*            P                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPrimaryStartDesired           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameMode::RatePlayerStart(class APlayerStart* P, unsigned char Team, class AController* Player, bool bPrimaryStartDesired)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.RatePlayerStart");

	APwndGameMode_RatePlayerStart_Params params;
	params.P = P;
	params.Team = Team;
	params.Player = Player;
	params.bPrimaryStartDesired = bPrimaryStartDesired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.PwnZoneRemoved
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPwnZone*            PwnZone                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PwnZoneRemoved(class APwndPwnZone* PwnZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PwnZoneRemoved");

	APwndGameMode_PwnZoneRemoved_Params params;
	params.PwnZone = PwnZone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PwnZoneDeactivated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPwnZone*            Zone                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PwnZoneDeactivated(class APwndPwnZone* Zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PwnZoneDeactivated");

	APwndGameMode_PwnZoneDeactivated_Params params;
	params.Zone = Zone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PwnZoneAdded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPwnZone*            PwnZone                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PwnZoneAdded(class APwndPwnZone* PwnZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PwnZoneAdded");

	APwndGameMode_PwnZoneAdded_Params params;
	params.PwnZone = PwnZone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PwnZoneActivated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPwnZone*            Zone                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PwnZoneActivated(class APwndPwnZone* Zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PwnZoneActivated");

	APwndGameMode_PwnZoneActivated_Params params;
	params.Zone = Zone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PlayerStartRemoved
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPlayerStart*        PlayerStart                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PlayerStartRemoved(class APwndPlayerStart* PlayerStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PlayerStartRemoved");

	APwndGameMode_PlayerStartRemoved_Params params;
	params.PlayerStart = PlayerStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PlayerStartAdded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPlayerStart*        PlayerStart                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PlayerStartAdded(class APwndPlayerStart* PlayerStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PlayerStartAdded");

	APwndGameMode_PlayerStartAdded_Params params;
	params.PlayerStart = PlayerStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupSpawned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickupFactory*      PickupFactory                  (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPickup*             Pickup                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupSpawned(class APwndPickupFactory* PickupFactory, class APwndPickup* Pickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupSpawned");

	APwndGameMode_PickupSpawned_Params params;
	params.PickupFactory = PickupFactory;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupRemoved
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickup*             Pickup                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupRemoved(class APwndPickup* Pickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupRemoved");

	APwndGameMode_PickupRemoved_Params params;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupPickedUpBy
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickup*             Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupPickedUpBy(class APwndPickup* Pickup, class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupPickedUpBy");

	APwndGameMode_PickupPickedUpBy_Params params;
	params.Pickup = Pickup;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupFactoryRemoved
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickupFactory*      PickupFactory                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupFactoryRemoved(class APwndPickupFactory* PickupFactory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupFactoryRemoved");

	APwndGameMode_PickupFactoryRemoved_Params params;
	params.PickupFactory = PickupFactory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupFactoryAdded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickupFactory*      PickupFactory                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupFactoryAdded(class APwndPickupFactory* PickupFactory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupFactoryAdded");

	APwndGameMode_PickupFactoryAdded_Params params;
	params.PickupFactory = PickupFactory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupDropped
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          DroppedFrom                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPickup*             Pickup                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupDropped(class APwndCharacter* DroppedFrom, class APwndPickup* Pickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupDropped");

	APwndGameMode_PickupDropped_Params params;
	params.DroppedFrom = DroppedFrom;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupDestroyed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickup*             Pickup                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupDestroyed(class APwndPickup* Pickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupDestroyed");

	APwndGameMode_PickupDestroyed_Params params;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.PickupAdded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickup*             Pickup                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::PickupAdded(class APwndPickup* Pickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.PickupAdded");

	APwndGameMode_PickupAdded_Params params;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.OnTuneShield
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndShield*             Shield                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::OnTuneShield(class APwndShield* Shield)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.OnTuneShield");

	APwndGameMode_OnTuneShield_Params params;
	params.Shield = Shield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.OnTuneProjectile
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndProjectile*         Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::OnTuneProjectile(class APwndProjectile* Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.OnTuneProjectile");

	APwndGameMode_OnTuneProjectile_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.OnTuneInventory
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::OnTuneInventory(class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.OnTuneInventory");

	APwndGameMode_OnTuneInventory_Params params;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.OnTuneDOT
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPwndDOTComponent*       DOT                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APwndGameMode::OnTuneDOT(class UPwndDOTComponent* DOT)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.OnTuneDOT");

	APwndGameMode_OnTuneDOT_Params params;
	params.DOT = DOT;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.OnTuneCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::OnTuneCharacter(class APwndCharacter* Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.OnTuneCharacter");

	APwndGameMode_OnTuneCharacter_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.OnTuneAOE
// (Event, Public, BlueprintEvent)
// Parameters:
// class APwndAOE*                AOE                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::OnTuneAOE(class APwndAOE* AOE)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.OnTuneAOE");

	APwndGameMode_OnTuneAOE_Params params;
	params.AOE = AOE;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.OnMatchSubStateSet
// (Native, Event, Public, BlueprintEvent)

void APwndGameMode::OnMatchSubStateSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.OnMatchSubStateSet");

	APwndGameMode_OnMatchSubStateSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.IsMatchInWarmup
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::IsMatchInWarmup()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsMatchInWarmup");

	APwndGameMode_IsMatchInWarmup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsMatchFullyInProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::IsMatchFullyInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsMatchFullyInProgress");

	APwndGameMode_IsMatchFullyInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsLocalEnemyTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsLocalEnemyTeam(unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsLocalEnemyTeam");

	APwndGameMode_IsLocalEnemyTeam_Params params;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsLocalEnemy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsLocalEnemy(class UObject* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsLocalEnemy");

	APwndGameMode_IsLocalEnemy_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsLocalAllyTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsLocalAllyTeam(unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsLocalAllyTeam");

	APwndGameMode_IsLocalAllyTeam_Params params;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsLocalAlly
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsLocalAlly(class UObject* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsLocalAlly");

	APwndGameMode_IsLocalAlly_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsEnemyTeamInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APwndTeamInfo*           A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsEnemyTeamInfo(class APwndTeamInfo* A, class APwndTeamInfo* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsEnemyTeamInfo");

	APwndGameMode_IsEnemyTeamInfo_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsEnemyTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsEnemyTeam(unsigned char A, unsigned char B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsEnemyTeam");

	APwndGameMode_IsEnemyTeam_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsEnemyPSTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsEnemyPSTeam(class APlayerState* A, unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsEnemyPSTeam");

	APwndGameMode_IsEnemyPSTeam_Params params;
	params.A = A;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsEnemyPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsEnemyPS(class APlayerState* A, class APlayerState* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsEnemyPS");

	APwndGameMode_IsEnemyPS_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsEnemy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsEnemy(class UObject* A, class UObject* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsEnemy");

	APwndGameMode_IsEnemy_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsAllyTeamInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APwndTeamInfo*           A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsAllyTeamInfo(class APwndTeamInfo* A, class APwndTeamInfo* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsAllyTeamInfo");

	APwndGameMode_IsAllyTeamInfo_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsAllyTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsAllyTeam(unsigned char A, unsigned char B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsAllyTeam");

	APwndGameMode_IsAllyTeam_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsAllyPSTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsAllyPSTeam(class APlayerState* A, unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsAllyPSTeam");

	APwndGameMode_IsAllyPSTeam_Params params;
	params.A = A;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsAllyPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsAllyPS(class APlayerState* A, class APlayerState* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsAllyPS");

	APwndGameMode_IsAllyPS_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.IsAlly
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_IsAlly(class UObject* A, class UObject* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.IsAlly");

	APwndGameMode_IsAlly_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.HealTaken
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AActor*                  HealedActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Healing                        (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HealCauser                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndHealEvent          HealEvent                      (ConstParm, Parm, OutParm, ReferenceParm)

void APwndGameMode::HealTaken(class AActor* HealedActor, float Healing, class AController* EventInstigator, class AActor* HealCauser, const struct FPwndHealEvent& HealEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.HealTaken");

	APwndGameMode_HealTaken_Params params;
	params.HealedActor = HealedActor;
	params.Healing = Healing;
	params.EventInstigator = EventInstigator;
	params.HealCauser = HealCauser;
	params.HealEvent = HealEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.GetSPLoadout
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout APwndGameMode::GetSPLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.GetSPLoadout");

	APwndGameMode_GetSPLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameMode::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.GetServerTimeStamp");

	APwndGameMode_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.GetMatchSubState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName APwndGameMode::GetMatchSubState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.GetMatchSubState");

	APwndGameMode_GetMatchSubState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.GetLeadingTeam
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            LeadingScore                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        Scorer                         (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* APwndGameMode::GetLeadingTeam(class APwndPlayerState* Scorer, int* LeadingScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.GetLeadingTeam");

	APwndGameMode_GetLeadingTeam_Params params;
	params.Scorer = Scorer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LeadingScore != nullptr)
		*LeadingScore = params.LeadingScore;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.GetDefaultLoadout
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndLoadout            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndLoadout APwndGameMode::STATIC_GetDefaultLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.GetDefaultLoadout");

	APwndGameMode_GetDefaultLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.GetAllPwndPlayerStates
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class APwndPlayerState*> PSArr                          (Parm, OutParm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::GetAllPwndPlayerStates(TArray<class APwndPlayerState*>* PSArr)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.GetAllPwndPlayerStates");

	APwndGameMode_GetAllPwndPlayerStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PSArr != nullptr)
		*PSArr = params.PSArr;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ForceTeamSpawns
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::ForceTeamSpawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ForceTeamSpawns");

	APwndGameMode_ForceTeamSpawns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ForceRespawnAllPlayers
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Timer                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStartupSpawn                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::ForceRespawnAllPlayers(float Timer, bool bStartupSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ForceRespawnAllPlayers");

	APwndGameMode_ForceRespawnAllPlayers_Params params;
	params.Timer = Timer;
	params.bStartupSpawn = bStartupSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.EndGame
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EndGameReason>     Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        Winner                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::EndGame(TEnumAsByte<EndGameReason> Reason, class APwndTeamInfo* WinningTeam, class APwndPlayerState* Winner, class AActor* ScoreActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.EndGame");

	APwndGameMode_EndGame_Params params;
	params.Reason = Reason;
	params.WinningTeam = WinningTeam;
	params.Winner = Winner;
	params.ScoreActor = ScoreActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.Died
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            PreDeathHealth                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndDamageEvent        DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::Died(class APawn* KilledPawn, int PreDeathHealth, const struct FPwndDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.Died");

	APwndGameMode_Died_Params params;
	params.KilledPawn = KilledPawn;
	params.PreDeathHealth = PreDeathHealth;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.DestroyGameplayActors
// (Native, Event, Public, BlueprintEvent)

void APwndGameMode::DestroyGameplayActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.DestroyGameplayActors");

	APwndGameMode_DestroyGameplayActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.DamageTaken
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndDamageEvent        DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)

void APwndGameMode::DamageTaken(class AActor* DamagedActor, float Damage, class AController* EventInstigator, class AActor* DamageCauser, const struct FPwndDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.DamageTaken");

	APwndGameMode_DamageTaken_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.CreateTelemetryEvent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// struct FString                 Type                           (Parm, ZeroConstructor)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFullPSData                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndGameMode::CreateTelemetryEvent(const struct FString& Type, class APwndPlayerState* PS, bool bFullPSData)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CreateTelemetryEvent");

	APwndGameMode_CreateTelemetryEvent_Params params;
	params.Type = Type;
	params.PS = PS;
	params.bFullPSData = bFullPSData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeReviveDuration
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameMode::ComputeReviveDuration(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeReviveDuration");

	APwndGameMode_ComputeReviveDuration_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeReviveBountyRank
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ComputeReviveBountyRank(int Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeReviveBountyRank");

	APwndGameMode_ComputeReviveBountyRank_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeReviveBounty
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          RevivedChar                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ComputeReviveBounty(class APwndCharacter* RevivedChar, class APwndPlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeReviveBounty");

	APwndGameMode_ComputeReviveBounty_Params params;
	params.RevivedChar = RevivedChar;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeRespawnTime
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class APwndCharacter*          KilledChar                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            Bounty                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            StackSize                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndDamageEvent        DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameMode::ComputeRespawnTime(class APwndCharacter* KilledChar, class APwndPlayerState* PS, int Bounty, int StackSize, const struct FPwndDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeRespawnTime");

	APwndGameMode_ComputeRespawnTime_Params params;
	params.KilledChar = KilledChar;
	params.PS = PS;
	params.Bounty = Bounty;
	params.StackSize = StackSize;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputePwnageDuration
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameMode::ComputePwnageDuration(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputePwnageDuration");

	APwndGameMode_ComputePwnageDuration_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeKillBountyRank
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ComputeKillBountyRank(int Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeKillBountyRank");

	APwndGameMode_ComputeKillBountyRank_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeKillBounty
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          KilledChar                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ComputeKillBounty(class APwndCharacter* KilledChar, class APwndPlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeKillBounty");

	APwndGameMode_ComputeKillBounty_Params params;
	params.KilledChar = KilledChar;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeHumiliationDuration
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameMode::ComputeHumiliationDuration(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeHumiliationDuration");

	APwndGameMode_ComputeHumiliationDuration_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeCoreBountyRank
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ComputeCoreBountyRank(int Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeCoreBountyRank");

	APwndGameMode_ComputeCoreBountyRank_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeCoreBounty
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          KilledChar                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ComputeCoreBounty(class APwndCharacter* KilledChar, class APwndPlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeCoreBounty");

	APwndGameMode_ComputeCoreBounty_Params params;
	params.KilledChar = KilledChar;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ComputeBounty
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          KilledChar                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            StackSize                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ComputeBounty(class APwndCharacter* KilledChar, class APwndPlayerState* PS, int* StackSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ComputeBounty");

	APwndGameMode_ComputeBounty_Params params;
	params.KilledChar = KilledChar;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (StackSize != nullptr)
		*StackSize = params.StackSize;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CompleteReviveSelf
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             RevivedCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::CompleteReviveSelf(class AController* RevivedCtrl, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CompleteReviveSelf");

	APwndGameMode_CompleteReviveSelf_Params params;
	params.RevivedCtrl = RevivedCtrl;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CompleteRevive
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             ReviverCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::CompleteRevive(class AController* ReviverCtrl, class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CompleteRevive");

	APwndGameMode_CompleteRevive_Params params;
	params.ReviverCtrl = ReviverCtrl;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CompleteHumiliation
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             HumiliatorCtrl                 (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::CompleteHumiliation(class AController* HumiliatorCtrl, class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CompleteHumiliation");

	APwndGameMode_CompleteHumiliation_Params params;
	params.HumiliatorCtrl = HumiliatorCtrl;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CheckScores
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndTeamInfo*           ScoringTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        Scorer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::CheckScores(class APwndTeamInfo* ScoringTeam, class APwndPlayerState* Scorer, class AActor* ScoreActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CheckScores");

	APwndGameMode_CheckScores_Params params;
	params.ScoringTeam = ScoringTeam;
	params.Scorer = Scorer;
	params.ScoreActor = ScoreActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.CanStartRevive
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             ReviverCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::CanStartRevive(class AController* ReviverCtrl, class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CanStartRevive");

	APwndGameMode_CanStartRevive_Params params;
	params.ReviverCtrl = ReviverCtrl;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CanStartPwnage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             PwnerCtrl                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::CanStartPwnage(class AController* PwnerCtrl, class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CanStartPwnage");

	APwndGameMode_CanStartPwnage_Params params;
	params.PwnerCtrl = PwnerCtrl;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CanStartHumiliation
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             HumiliatorCtrl                 (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::CanStartHumiliation(class AController* HumiliatorCtrl, class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CanStartHumiliation");

	APwndGameMode_CanStartHumiliation_Params params;
	params.HumiliatorCtrl = HumiliatorCtrl;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CanStartCarry
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             CarrierCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::CanStartCarry(class AController* CarrierCtrl, class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CanStartCarry");

	APwndGameMode_CanStartCarry_Params params;
	params.CarrierCtrl = CarrierCtrl;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.CancelRevive
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AController*             ReviverCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDenial                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          DenyerPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndDamageEvent        DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>          AssistActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndGameMode::CancelRevive(class AController* ReviverCtrl, class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn, bool bDenial, class APwndCharacter* DenyerPawn, const struct FPwndDamageEvent& DamageEvent, TArray<class AActor*> AssistActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CancelRevive");

	APwndGameMode_CancelRevive_Params params;
	params.ReviverCtrl = ReviverCtrl;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;
	params.bDenial = bDenial;
	params.DenyerPawn = DenyerPawn;
	params.DamageEvent = DamageEvent;
	params.AssistActors = AssistActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.CancelPwnage
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AController*             PwnerCtrl                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndDamageEvent        DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>          AssistActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndGameMode::CancelPwnage(class AController* PwnerCtrl, class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, class APwndCharacter* SaverPawn, bool bSaved, const struct FPwndDamageEvent& DamageEvent, TArray<class AActor*> AssistActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CancelPwnage");

	APwndGameMode_CancelPwnage_Params params;
	params.PwnerCtrl = PwnerCtrl;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.SaverPawn = SaverPawn;
	params.bSaved = bSaved;
	params.DamageEvent = DamageEvent;
	params.AssistActors = AssistActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.CancelHumiliation
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AController*             HumiliatorCtrl                 (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndDamageEvent        DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>          AssistActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndGameMode::CancelHumiliation(class AController* HumiliatorCtrl, class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn, class APwndCharacter* SaverPawn, bool bSaved, const struct FPwndDamageEvent& DamageEvent, TArray<class AActor*> AssistActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CancelHumiliation");

	APwndGameMode_CancelHumiliation_Params params;
	params.HumiliatorCtrl = HumiliatorCtrl;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;
	params.SaverPawn = SaverPawn;
	params.bSaved = bSaved;
	params.DamageEvent = DamageEvent;
	params.AssistActors = AssistActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.CancelCarry
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AController*             CarrierCtrl                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarrierPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndDamageEvent        DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>          AssistActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void APwndGameMode::CancelCarry(class AController* CarrierCtrl, class APwndCharacter* CarrierPawn, class APwndCharacter* CarriedPawn, class APwndCharacter* SaverPawn, bool bSaved, float ThrowPower, const struct FPwndDamageEvent& DamageEvent, TArray<class AActor*> AssistActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.CancelCarry");

	APwndGameMode_CancelCarry_Params params;
	params.CarrierCtrl = CarrierCtrl;
	params.CarrierPawn = CarrierPawn;
	params.CarriedPawn = CarriedPawn;
	params.SaverPawn = SaverPawn;
	params.bSaved = bSaved;
	params.ThrowPower = ThrowPower;
	params.DamageEvent = DamageEvent;
	params.AssistActors = AssistActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.BuildMapGuidCommandline
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGuid                   MapGuid                        (Parm, IsPlainOldData)
// struct FGuid                   GameModeGuid                   (Parm, IsPlainOldData)
// struct FString                 PlayerName                     (Parm, ZeroConstructor)
// struct FPwndLoadout            SPPlayerLoadout                (Parm)
// int                            BotAutoFillSize                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeBotDifficulty>   Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString APwndGameMode::STATIC_BuildMapGuidCommandline(const struct FGuid& MapGuid, const struct FGuid& GameModeGuid, const struct FString& PlayerName, const struct FPwndLoadout& SPPlayerLoadout, int BotAutoFillSize, TEnumAsByte<EeBotDifficulty> Difficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.BuildMapGuidCommandline");

	APwndGameMode_BuildMapGuidCommandline_Params params;
	params.MapGuid = MapGuid;
	params.GameModeGuid = GameModeGuid;
	params.PlayerName = PlayerName;
	params.SPPlayerLoadout = SPPlayerLoadout;
	params.BotAutoFillSize = BotAutoFillSize;
	params.Difficulty = Difficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.BuildMapCommandline
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 MapName                        (Parm, ZeroConstructor)
// class UClass*                  GameModeClass                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PlayerName                     (Parm, ZeroConstructor)
// struct FPwndLoadout            SPPlayerLoadout                (Parm)
// int                            BotAutoFillSize                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeBotDifficulty>   Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString APwndGameMode::STATIC_BuildMapCommandline(const struct FString& MapName, class UClass* GameModeClass, const struct FString& PlayerName, const struct FPwndLoadout& SPPlayerLoadout, int BotAutoFillSize, TEnumAsByte<EeBotDifficulty> Difficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.BuildMapCommandline");

	APwndGameMode_BuildMapCommandline_Params params;
	params.MapName = MapName;
	params.GameModeClass = GameModeClass;
	params.PlayerName = PlayerName;
	params.SPPlayerLoadout = SPPlayerLoadout;
	params.BotAutoFillSize = BotAutoFillSize;
	params.Difficulty = Difficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AwardAccolades
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<class APwndPlayerState*> PSArr                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bTeamBased                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::AwardAccolades(TArray<class APwndPlayerState*> PSArr, bool bTeamBased)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AwardAccolades");

	APwndGameMode_AwardAccolades_Params params;
	params.PSArr = PSArr;
	params.bTeamBased = bTeamBased;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.AttemptEndGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EndGameReason>     Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        Winner                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameMode::AttemptEndGame(TEnumAsByte<EndGameReason> Reason, class APwndTeamInfo* WinningTeam, class APwndPlayerState* Winner, class AActor* ScoreActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AttemptEndGame");

	APwndGameMode_AttemptEndGame_Params params;
	params.Reason = Reason;
	params.WinningTeam = WinningTeam;
	params.Winner = Winner;
	params.ScoreActor = ScoreActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameMode.AreTeamsImbalanced
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           bHasEmptyTeam                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bLowTeamCount                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            NumDisconnected                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::AreTeamsImbalanced(bool* bHasEmptyTeam, bool* bLowTeamCount, int* NumDisconnected)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AreTeamsImbalanced");

	APwndGameMode_AreTeamsImbalanced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bHasEmptyTeam != nullptr)
		*bHasEmptyTeam = params.bHasEmptyTeam;
	if (bLowTeamCount != nullptr)
		*bLowTeamCount = params.bLowTeamCount;
	if (NumDisconnected != nullptr)
		*NumDisconnected = params.NumDisconnected;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ApplyScoreIncrement
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndTeamInfo*           ScoringTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ScoreIncrement                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ScoreType                      (Parm, ZeroConstructor)
// bool                           bCanEndGame                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ApplyScoreIncrement(class APwndTeamInfo* ScoringTeam, class APwndPlayerState* PS, int ScoreIncrement, class AActor* ScoreActor, const struct FString& ScoreType, bool bCanEndGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ApplyScoreIncrement");

	APwndGameMode_ApplyScoreIncrement_Params params;
	params.ScoringTeam = ScoringTeam;
	params.PS = PS;
	params.ScoreIncrement = ScoreIncrement;
	params.ScoreActor = ScoreActor;
	params.ScoreType = ScoreType;
	params.bCanEndGame = bCanEndGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ApplyReviveScore
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPlayerState*        ReviverPS                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        RevivedPS                      (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedChar                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ApplyReviveScore(class APwndPlayerState* ReviverPS, class APwndPlayerState* RevivedPS, class APwndCharacter* RevivedChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ApplyReviveScore");

	APwndGameMode_ApplyReviveScore_Params params;
	params.ReviverPS = ReviverPS;
	params.RevivedPS = RevivedPS;
	params.RevivedChar = RevivedChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ApplyPwnScore
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPlayerState*        PwnerPS                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            BountyScore                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ApplyPwnScore(class APwndPlayerState* PwnerPS, int BountyScore, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ApplyPwnScore");

	APwndGameMode_ApplyPwnScore_Params params;
	params.PwnerPS = PwnerPS;
	params.BountyScore = BountyScore;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.ApplyKillScore
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPlayerState*        KillerPS                       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        KilledPS                       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          KilledChar                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::ApplyKillScore(class APwndPlayerState* KillerPS, class APwndPlayerState* KilledPS, class APwndCharacter* KilledChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.ApplyKillScore");

	APwndGameMode_ApplyKillScore_Params params;
	params.KillerPS = KillerPS;
	params.KilledPS = KilledPS;
	params.KilledChar = KilledChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AnotherPlayerIsUsingPlayerStart
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerStart*            P                              (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::AnotherPlayerIsUsingPlayerStart(class APlayerStart* P, class AController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AnotherPlayerIsUsingPlayerStart");

	APwndGameMode_AnotherPlayerIsUsingPlayerStart_Params params;
	params.P = P;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AllowHeal
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  HealTypeClass                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_AllowHeal(class AActor* Attacker, class AActor* Target, class UClass* HealTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AllowHeal");

	APwndGameMode_AllowHeal_Params params;
	params.Attacker = Attacker;
	params.Target = Target;
	params.HealTypeClass = HealTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AllowDamage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::STATIC_AllowDamage(class AActor* Attacker, class AActor* Target, class UClass* DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AllowDamage");

	APwndGameMode_AllowDamage_Params params;
	params.Attacker = Attacker;
	params.Target = Target;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AddScoreForTeamNum
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  ScoringTeamNum                 (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ScoreIncrement                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ScoreType                      (Parm, ZeroConstructor)
// bool                           bCanEndGame                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::AddScoreForTeamNum(unsigned char ScoringTeamNum, class APwndPlayerState* PS, int ScoreIncrement, class AActor* ScoreActor, const struct FString& ScoreType, bool bCanEndGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AddScoreForTeamNum");

	APwndGameMode_AddScoreForTeamNum_Params params;
	params.ScoringTeamNum = ScoringTeamNum;
	params.PS = PS;
	params.ScoreIncrement = ScoreIncrement;
	params.ScoreActor = ScoreActor;
	params.ScoreType = ScoreType;
	params.bCanEndGame = bCanEndGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AddScoreForTeam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndTeamInfo*           ScoringTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ScoreIncrement                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ScoreType                      (Parm, ZeroConstructor)
// bool                           bCanEndGame                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::AddScoreForTeam(class APwndTeamInfo* ScoringTeam, class APwndPlayerState* PS, int ScoreIncrement, class AActor* ScoreActor, const struct FString& ScoreType, bool bCanEndGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AddScoreForTeam");

	APwndGameMode_AddScoreForTeam_Params params;
	params.ScoringTeam = ScoringTeam;
	params.PS = PS;
	params.ScoreIncrement = ScoreIncrement;
	params.ScoreActor = ScoreActor;
	params.ScoreType = ScoreType;
	params.bCanEndGame = bCanEndGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AddScore
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ScoreIncrement                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ScoreType                      (Parm, ZeroConstructor)
// bool                           bCanEndGame                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameMode::AddScore(class APwndPlayerState* PS, int ScoreIncrement, class AActor* ScoreActor, const struct FString& ScoreType, bool bCanEndGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AddScore");

	APwndGameMode_AddScore_Params params;
	params.PS = PS;
	params.ScoreIncrement = ScoreIncrement;
	params.ScoreActor = ScoreActor;
	params.ScoreType = ScoreType;
	params.bCanEndGame = bCanEndGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AddRespawn
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             Ctrl                           (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          OldChar                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Timer                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStartupSpawn                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameMode::AddRespawn(class AController* Ctrl, class APwndCharacter* OldChar, float Delay, float Timer, bool bStartupSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AddRespawn");

	APwndGameMode_AddRespawn_Params params;
	params.Ctrl = Ctrl;
	params.OldChar = OldChar;
	params.Delay = Delay;
	params.Timer = Timer;
	params.bStartupSpawn = bStartupSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameMode.AddBot
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)
// TEnumAsByte<EeBotDifficulty>   Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndAIControllerPlayer* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndAIControllerPlayer* APwndGameMode::AddBot(const struct FString& Char, TEnumAsByte<EeBotDifficulty> Difficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameMode.AddBot");

	APwndGameMode_AddBot_Params params;
	params.Char = Char;
	params.Difficulty = Difficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameplayEvents.LogActorLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Act                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSendTelemetry                 (Parm, ZeroConstructor, IsPlainOldData)

void UPwndGameplayEvents::LogActorLocation(class AActor* Act, bool bSendTelemetry)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameplayEvents.LogActorLocation");

	UPwndGameplayEvents_LogActorLocation_Params params;
	params.Act = Act;
	params.bSendTelemetry = bSendTelemetry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameplayEvents.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndGameplayEvents::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameplayEvents.GetServerTimeStamp");

	UPwndGameplayEvents_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameplayEvents.GetRelativeTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndGameplayEvents::GetRelativeTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameplayEvents.GetRelativeTimeStamp");

	UPwndGameplayEvents_GetRelativeTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.ShouldUsePSForTeamChecking
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::ShouldUsePSForTeamChecking(class UObject* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.ShouldUsePSForTeamChecking");

	APwndGameState_ShouldUsePSForTeamChecking_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.ShouldEndOfMatchSequenceShowWinningPwnText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::ShouldEndOfMatchSequenceShowWinningPwnText()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.ShouldEndOfMatchSequenceShowWinningPwnText");

	APwndGameState_ShouldEndOfMatchSequenceShowWinningPwnText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.ShouldEndOfMatchSequenceShowVictoryText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::ShouldEndOfMatchSequenceShowVictoryText()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.ShouldEndOfMatchSequenceShowVictoryText");

	APwndGameState_ShouldEndOfMatchSequenceShowVictoryText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.OnSameTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  A                              (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::OnSameTeam(class AActor* A, class AActor* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.OnSameTeam");

	APwndGameState_OnSameTeam_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.OnRep_ScoreboardWidgetClass
// (Native, Protected)

void APwndGameState::OnRep_ScoreboardWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.OnRep_ScoreboardWidgetClass");

	APwndGameState_OnRep_ScoreboardWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameState.OnRep_RepServerTimeStamp
// (Native, Protected)
// Parameters:
// float                          OldRepServerTimeStamp          (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameState::OnRep_RepServerTimeStamp(float OldRepServerTimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.OnRep_RepServerTimeStamp");

	APwndGameState_OnRep_RepServerTimeStamp_Params params;
	params.OldRepServerTimeStamp = OldRepServerTimeStamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameState.OnRep_MatchSubState
// (Native, Protected)

void APwndGameState::OnRep_MatchSubState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.OnRep_MatchSubState");

	APwndGameState_OnRep_MatchSubState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameState.OnRep_MatchState
// (Native, Protected)

void APwndGameState::OnRep_MatchState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.OnRep_MatchState");

	APwndGameState_OnRep_MatchState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameState.MultiCastGameEnded
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TEnumAsByte<EndGameReason>     Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        Winner                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameState::MultiCastGameEnded(TEnumAsByte<EndGameReason> Reason, class APwndTeamInfo* WinningTeam, class APwndPlayerState* Winner, class AActor* ScoreActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.MultiCastGameEnded");

	APwndGameState_MultiCastGameEnded_Params params;
	params.Reason = Reason;
	params.WinningTeam = WinningTeam;
	params.Winner = Winner;
	params.ScoreActor = ScoreActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameState.K2GetAllValidPlayerStarts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPlayerStart*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndPlayerStart*> APwndGameState::K2GetAllValidPlayerStarts()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllValidPlayerStarts");

	APwndGameState_K2GetAllValidPlayerStarts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllTargetDummies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndTargetDummy*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndTargetDummy*> APwndGameState::K2GetAllTargetDummies()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllTargetDummies");

	APwndGameState_K2GetAllTargetDummies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllShields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndShield*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndShield*> APwndGameState::K2GetAllShields()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllShields");

	APwndGameState_K2GetAllShields_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllPwnZones
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPwnZone*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndPwnZone*> APwndGameState::K2GetAllPwnZones()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllPwnZones");

	APwndGameState_K2GetAllPwnZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllProjectiles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndProjectile*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndProjectile*> APwndGameState::K2GetAllProjectiles()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllProjectiles");

	APwndGameState_K2GetAllProjectiles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllPlayerStarts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPlayerStart*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndPlayerStart*> APwndGameState::K2GetAllPlayerStarts()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllPlayerStarts");

	APwndGameState_K2GetAllPlayerStarts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllPickups
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPickup*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndPickup*> APwndGameState::K2GetAllPickups()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllPickups");

	APwndGameState_K2GetAllPickups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllPickupFactories
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPickupFactory*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndPickupFactory*> APwndGameState::K2GetAllPickupFactories()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllPickupFactories");

	APwndGameState_K2GetAllPickupFactories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllEnabledPlayerStarts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPlayerStart*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndPlayerStart*> APwndGameState::K2GetAllEnabledPlayerStarts()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllEnabledPlayerStarts");

	APwndGameState_K2GetAllEnabledPlayerStarts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllAOEs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndAOE*>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndAOE*> APwndGameState::K2GetAllAOEs()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllAOEs");

	APwndGameState_K2GetAllAOEs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.K2GetAllActivePwnZones
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPwnZone*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APwndPwnZone*> APwndGameState::K2GetAllActivePwnZones()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.K2GetAllActivePwnZones");

	APwndGameState_K2GetAllActivePwnZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsTeamBased
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsTeamBased()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsTeamBased");

	APwndGameState_IsTeamBased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsSafeToExitWithoutPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsSafeToExitWithoutPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsSafeToExitWithoutPenalty");

	APwndGameState_IsSafeToExitWithoutPenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsMatchInWarmup
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsMatchInWarmup()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsMatchInWarmup");

	APwndGameState_IsMatchInWarmup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsMatchInProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsMatchInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsMatchInProgress");

	APwndGameState_IsMatchInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsMatchGettingReadyToStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsMatchGettingReadyToStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsMatchGettingReadyToStart");

	APwndGameState_IsMatchGettingReadyToStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsLocalEnemyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsLocalEnemyTeam(unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsLocalEnemyTeam");

	APwndGameState_IsLocalEnemyTeam_Params params;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsLocalEnemy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsLocalEnemy(class UObject* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsLocalEnemy");

	APwndGameState_IsLocalEnemy_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsLocalAllyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsLocalAllyTeam(unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsLocalAllyTeam");

	APwndGameState_IsLocalAllyTeam_Params params;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsLocalAlly
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsLocalAlly(class UObject* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsLocalAlly");

	APwndGameState_IsLocalAlly_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsEnemyTeamInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndTeamInfo*           A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsEnemyTeamInfo(class APwndTeamInfo* A, class APwndTeamInfo* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsEnemyTeamInfo");

	APwndGameState_IsEnemyTeamInfo_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsEnemyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsEnemyTeam(unsigned char A, unsigned char B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsEnemyTeam");

	APwndGameState_IsEnemyTeam_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsEnemyPSTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsEnemyPSTeam(class APlayerState* A, unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsEnemyPSTeam");

	APwndGameState_IsEnemyPSTeam_Params params;
	params.A = A;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsEnemyPS
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsEnemyPS(class APlayerState* A, class APlayerState* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsEnemyPS");

	APwndGameState_IsEnemyPS_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsEnemy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsEnemy(class UObject* A, class UObject* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsEnemy");

	APwndGameState_IsEnemy_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsEndOfMatchSequenceInProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsEndOfMatchSequenceInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsEndOfMatchSequenceInProgress");

	APwndGameState_IsEndOfMatchSequenceInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsAllyTeamInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndTeamInfo*           A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsAllyTeamInfo(class APwndTeamInfo* A, class APwndTeamInfo* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsAllyTeamInfo");

	APwndGameState_IsAllyTeamInfo_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsAllyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsAllyTeam(unsigned char A, unsigned char B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsAllyTeam");

	APwndGameState_IsAllyTeam_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsAllyPSTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsAllyPSTeam(class APlayerState* A, unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsAllyPSTeam");

	APwndGameState_IsAllyPSTeam_Params params;
	params.A = A;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsAllyPS
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            A                              (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsAllyPS(class APlayerState* A, class APlayerState* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsAllyPS");

	APwndGameState_IsAllyPS_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.IsAlly
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 A                              (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 B                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::IsAlly(class UObject* A, class UObject* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.IsAlly");

	APwndGameState_IsAlly_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.HasMatchStarted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::HasMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.HasMatchStarted");

	APwndGameState_HasMatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.HasMatchEnded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::HasMatchEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.HasMatchEnded");

	APwndGameState_HasMatchEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetTimeSinceSafeToExitWithoutPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetTimeSinceSafeToExitWithoutPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetTimeSinceSafeToExitWithoutPenalty");

	APwndGameState_GetTimeSinceSafeToExitWithoutPenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetTeamByNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* APwndGameState::GetTeamByNum(unsigned char TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetTeamByNum");

	APwndGameState_GetTeamByNum_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* APwndGameState::GetTeam(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetTeam");

	APwndGameState_GetTeam_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetSpectatePlayerStateByIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* APwndGameState::GetSpectatePlayerStateByIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetSpectatePlayerStateByIndex");

	APwndGameState_GetSpectatePlayerStateByIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetServerTimeStamp");

	APwndGameState_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetScoreStatus
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerState*            ContextPS                      (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  AllyTeamNum                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// unsigned char                  EnemyTeamNum                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            OutGoalScore                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TArray<float>                  CurrentScores                  (Parm, OutParm, ZeroConstructor)
// TArray<float>                  PotentialScores                (Parm, OutParm, ZeroConstructor)
// TArray<float>                  PotentialScoreProgress         (Parm, OutParm, ZeroConstructor)
// TArray<float>                  AvailableScores                (Parm, OutParm, ZeroConstructor)
// bool                           bAllyScoreInProgress           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bAllyPotentialWin              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bAllyAvailableWin              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bAllyOneScoreToWin             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemyScoreInProgress          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemyPotentialWin             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemyAvailableWin             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemyOneScoreToWin            (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetScoreStatus(class APlayerState* ContextPS, unsigned char* AllyTeamNum, unsigned char* EnemyTeamNum, int* OutGoalScore, TArray<float>* CurrentScores, TArray<float>* PotentialScores, TArray<float>* PotentialScoreProgress, TArray<float>* AvailableScores, bool* bAllyScoreInProgress, bool* bAllyPotentialWin, bool* bAllyAvailableWin, bool* bAllyOneScoreToWin, bool* bEnemyScoreInProgress, bool* bEnemyPotentialWin, bool* bEnemyAvailableWin, bool* bEnemyOneScoreToWin)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetScoreStatus");

	APwndGameState_GetScoreStatus_Params params;
	params.ContextPS = ContextPS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AllyTeamNum != nullptr)
		*AllyTeamNum = params.AllyTeamNum;
	if (EnemyTeamNum != nullptr)
		*EnemyTeamNum = params.EnemyTeamNum;
	if (OutGoalScore != nullptr)
		*OutGoalScore = params.OutGoalScore;
	if (CurrentScores != nullptr)
		*CurrentScores = params.CurrentScores;
	if (PotentialScores != nullptr)
		*PotentialScores = params.PotentialScores;
	if (PotentialScoreProgress != nullptr)
		*PotentialScoreProgress = params.PotentialScoreProgress;
	if (AvailableScores != nullptr)
		*AvailableScores = params.AvailableScores;
	if (bAllyScoreInProgress != nullptr)
		*bAllyScoreInProgress = params.bAllyScoreInProgress;
	if (bAllyPotentialWin != nullptr)
		*bAllyPotentialWin = params.bAllyPotentialWin;
	if (bAllyAvailableWin != nullptr)
		*bAllyAvailableWin = params.bAllyAvailableWin;
	if (bAllyOneScoreToWin != nullptr)
		*bAllyOneScoreToWin = params.bAllyOneScoreToWin;
	if (bEnemyScoreInProgress != nullptr)
		*bEnemyScoreInProgress = params.bEnemyScoreInProgress;
	if (bEnemyPotentialWin != nullptr)
		*bEnemyPotentialWin = params.bEnemyPotentialWin;
	if (bEnemyAvailableWin != nullptr)
		*bEnemyAvailableWin = params.bEnemyAvailableWin;
	if (bEnemyOneScoreToWin != nullptr)
		*bEnemyOneScoreToWin = params.bEnemyOneScoreToWin;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetSafeToExitWithoutPenaltyTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetSafeToExitWithoutPenaltyTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetSafeToExitWithoutPenaltyTime");

	APwndGameState_GetSafeToExitWithoutPenaltyTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetPotentialScore
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetPotentialScore(unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetPotentialScore");

	APwndGameState_GetPotentialScore_Params params;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetNumTeams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameState::GetNumTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetNumTeams");

	APwndGameState_GetNumTeams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetMatchTimeRemaining
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bOvertime                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bPwnShotClock                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetMatchTimeRemaining(bool* bOvertime, bool* bPwnShotClock)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetMatchTimeRemaining");

	APwndGameState_GetMatchTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bOvertime != nullptr)
		*bOvertime = params.bOvertime;
	if (bPwnShotClock != nullptr)
		*bPwnShotClock = params.bPwnShotClock;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetMatchTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetMatchTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetMatchTimeElapsed");

	APwndGameState_GetMatchTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetMatchRelativeTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetMatchRelativeTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetMatchRelativeTimeStamp");

	APwndGameState_GetMatchRelativeTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetMatchDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetMatchDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetMatchDuration");

	APwndGameState_GetMatchDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetGoalScore
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndGameState::GetGoalScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetGoalScore");

	APwndGameState_GetGoalScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetEndOfMatchSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APwndEndOfMatchSequence* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndEndOfMatchSequence* APwndGameState::GetEndOfMatchSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetEndOfMatchSequence");

	APwndGameState_GetEndOfMatchSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetDisplayText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText APwndGameState::GetDisplayText()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetDisplayText");

	APwndGameState_GetDisplayText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetDisplayObjective
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText APwndGameState::GetDisplayObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetDisplayObjective");

	APwndGameState_GetDisplayObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetDisplayDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText APwndGameState::GetDisplayDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetDisplayDescription");

	APwndGameState_GetDisplayDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetChargingScore
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetChargingScore(unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetChargingScore");

	APwndGameState_GetChargingScore_Params params;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GetAvailableScore
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  teamIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndGameState::GetAvailableScore(unsigned char teamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GetAvailableScore");

	APwndGameState_GetAvailableScore_Params params;
	params.teamIndex = teamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.GameStateInitted
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndGameMode*           GameMode                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndGameState::GameStateInitted(class APwndGameMode* GameMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.GameStateInitted");

	APwndGameState_GameStateInitted_Params params;
	params.GameMode = GameMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameState.AllowRevive
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Reviver                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::AllowRevive(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.AllowRevive");

	APwndGameState_AllowRevive_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.AllowPwn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Pwner                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::AllowPwn(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.AllowPwn");

	APwndGameState_AllowPwn_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.AllowHumiliation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Humiliator                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::AllowHumiliation(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.AllowHumiliation");

	APwndGameState_AllowHumiliation_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.AllowHeal
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  HealTypeClass                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::AllowHeal(class AActor* Attacker, class AActor* Target, class UClass* HealTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.AllowHeal");

	APwndGameState_AllowHeal_Params params;
	params.Attacker = Attacker;
	params.Target = Target;
	params.HealTypeClass = HealTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.AllowDamage
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::AllowDamage(class AActor* Attacker, class AActor* Target, class UClass* DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.AllowDamage");

	APwndGameState_AllowDamage_Params params;
	params.Attacker = Attacker;
	params.Target = Target;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameState.AllowCarry
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          Carrier                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndGameState::AllowCarry(class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameState.AllowCarry");

	APwndGameState_AllowCarry_Params params;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameUserSettings.ValidateSettings
// (Native, Public, BlueprintCallable)

void UPwndGameUserSettings::ValidateSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameUserSettings.ValidateSettings");

	UPwndGameUserSettings_ValidateSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndGameUserSettings.GetAxisMappings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ActionName                     (Parm, ZeroConstructor)
// TArray<struct FInputAxisKeyMapping> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInputAxisKeyMapping> UPwndGameUserSettings::GetAxisMappings(const struct FString& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameUserSettings.GetAxisMappings");

	UPwndGameUserSettings_GetAxisMappings_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameUserSettings.GetActionMappings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ActionName                     (Parm, ZeroConstructor)
// TArray<struct FInputActionKeyMapping> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInputActionKeyMapping> UPwndGameUserSettings::GetActionMappings(const struct FString& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameUserSettings.GetActionMappings");

	UPwndGameUserSettings_GetActionMappings_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameUserSettings.ConvertSliderInputToRawValue
// (Final, Native, Public)
// Parameters:
// struct FSettingFloatData       Input                          (ConstParm, Parm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndGameUserSettings::ConvertSliderInputToRawValue(const struct FSettingFloatData& Input)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameUserSettings.ConvertSliderInputToRawValue");

	UPwndGameUserSettings_ConvertSliderInputToRawValue_Params params;
	params.Input = Input;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndGameUserSettings.ConvertRawValueToSliderInput
// (Final, Native, Public)
// Parameters:
// struct FSettingFloatData       Input                          (ConstParm, Parm, IsPlainOldData)
// float                          rawValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndGameUserSettings::ConvertRawValueToSliderInput(const struct FSettingFloatData& Input, float rawValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndGameUserSettings.ConvertRawValueToSliderInput");

	UPwndGameUserSettings_ConvertRawValueToSliderInput_Params params;
	params.Input = Input;
	params.rawValue = rawValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndHUD.ToggleDrawTeamIndicators
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawTeamIndicators()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawTeamIndicators");

	APwndHUD_ToggleDrawTeamIndicators_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ToggleDrawSpectatorHUD
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawSpectatorHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawSpectatorHUD");

	APwndHUD_ToggleDrawSpectatorHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ToggleDrawReticle
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawReticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawReticle");

	APwndHUD_ToggleDrawReticle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ToggleDrawPwnIcons
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawPwnIcons()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawPwnIcons");

	APwndHUD_ToggleDrawPwnIcons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ToggleDrawPopupText
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawPopupText()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawPopupText");

	APwndHUD_ToggleDrawPopupText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ToggleDrawNameplates
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawNameplates()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawNameplates");

	APwndHUD_ToggleDrawNameplates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ToggleDrawMonkeyBrains
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawMonkeyBrains()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawMonkeyBrains");

	APwndHUD_ToggleDrawMonkeyBrains_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ToggleDrawMiscFieldTags
// (Final, Exec, Native, Public)

void APwndHUD::ToggleDrawMiscFieldTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ToggleDrawMiscFieldTags");

	APwndHUD_ToggleDrawMiscFieldTags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.EnableAllDrawFieldTags
// (Final, Exec, Native, Public)

void APwndHUD::EnableAllDrawFieldTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.EnableAllDrawFieldTags");

	APwndHUD_EnableAllDrawFieldTags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.DisableAllDrawFieldTags
// (Final, Exec, Native, Public)

void APwndHUD::DisableAllDrawFieldTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.DisableAllDrawFieldTags");

	APwndHUD_DisableAllDrawFieldTags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.ClearProjectileDebugExplosions
// (Final, Exec, Native, Public)

void APwndHUD::ClearProjectileDebugExplosions()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.ClearProjectileDebugExplosions");

	APwndHUD_ClearProjectileDebugExplosions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.AddPopUpText3D
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (Parm, IsPlainOldData)
// struct FString                 Str                            (Parm, ZeroConstructor)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndHUD::AddPopUpText3D(const struct FVector& Pos, const struct FString& Str, const struct FColor& Color, class UFont* Font, float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.AddPopUpText3D");

	APwndHUD_AddPopUpText3D_Params params;
	params.Pos = Pos;
	params.Str = Str;
	params.Color = Color;
	params.Font = Font;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.AddPopUpScoreText
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (Parm, IsPlainOldData)
// int                            Score                          (Parm, ZeroConstructor, IsPlainOldData)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndHUD::AddPopUpScoreText(const struct FVector& Pos, int Score, class UFont* Font, float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.AddPopUpScoreText");

	APwndHUD_AddPopUpScoreText_Params params;
	params.Pos = Pos;
	params.Score = Score;
	params.Font = Font;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.AddPopUpHealText
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (Parm, IsPlainOldData)
// int                            AmountHealed                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  HealType                       (Parm, ZeroConstructor, IsPlainOldData)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndHUD::AddPopUpHealText(const struct FVector& Pos, int AmountHealed, class UClass* HealType, class UFont* Font, float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.AddPopUpHealText");

	APwndHUD_AddPopUpHealText_Params params;
	params.Pos = Pos;
	params.AmountHealed = AmountHealed;
	params.HealType = HealType;
	params.Font = Font;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndHUD.AddPopUpDamageText
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (Parm, IsPlainOldData)
// int                            DamageDone                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndHUD::AddPopUpDamageText(const struct FVector& Pos, int DamageDone, class UClass* DamageType, class UFont* Font, float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndHUD.AddPopUpDamageText");

	APwndHUD_AddPopUpDamageText_Params params;
	params.Pos = Pos;
	params.DamageDone = DamageDone;
	params.DamageType = DamageType;
	params.Font = Font;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndInventoryPerk.ModifyRepOwnPerkBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndPerkRepOwnerBaseAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndInventoryPerk*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndInventoryPerk* APwndInventoryPerk::ModifyRepOwnPerkBase(const struct FPwndPerkRepOwnerBaseAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventoryPerk.ModifyRepOwnPerkBase");

	APwndInventoryPerk_ModifyRepOwnPerkBase_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventoryPerk.K2ReadRepOwnerPerkBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndPerkRepOwnerBase   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndPerkRepOwnerBase APwndInventoryPerk::K2ReadRepOwnerPerkBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventoryPerk.K2ReadRepOwnerPerkBase");

	APwndInventoryPerk_K2ReadRepOwnerPerkBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventoryPerk.GetTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndInventoryPerk::GetTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventoryPerk.GetTimeRemaining");

	APwndInventoryPerk_GetTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndInventoryPerk.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndInventoryPerk::GetDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndInventoryPerk.GetDuration");

	APwndInventoryPerk_GetDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizer.SetUseSilhouette
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUseSilhouette                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetUseSilhouette(bool bUseSilhouette)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetUseSilhouette");

	APwndLoadoutVisualizer_SetUseSilhouette_Params params;
	params.bUseSilhouette = bUseSilhouette;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetRenderingInWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInWorld                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetRenderingInWorld(bool bInWorld)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetRenderingInWorld");

	APwndLoadoutVisualizer_SetRenderingInWorld_Params params;
	params.bInWorld = bInWorld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetRefRotationRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetRefRotationRate(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetRefRotationRate");

	APwndLoadoutVisualizer_SetRefRotationRate_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetRefRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetRefRotation(float Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetRefRotation");

	APwndLoadoutVisualizer_SetRefRotation_Params params;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetPrimary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsPrimary                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetPrimary(bool bIsPrimary)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetPrimary");

	APwndLoadoutVisualizer_SetPrimary_Params params;
	params.bIsPrimary = bIsPrimary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetPlayRevive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bPlayRevive                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetPlayRevive(bool bPlayRevive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetPlayRevive");

	APwndLoadoutVisualizer_SetPlayRevive_Params params;
	params.bPlayRevive = bPlayRevive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetPlayRarityFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bPlayRarityFX                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetPlayRarityFX(bool bPlayRarityFX)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetPlayRarityFX");

	APwndLoadoutVisualizer_SetPlayRarityFX_Params params;
	params.bPlayRarityFX = bPlayRarityFX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetPlayPwn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bPlayPwn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetPlayPwn(bool bPlayPwn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetPlayPwn");

	APwndLoadoutVisualizer_SetPlayPwn_Params params;
	params.bPlayPwn = bPlayPwn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.SetLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndLoadout            Loadout                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndLoadoutVisualizer::SetLoadout(const struct FPwndLoadout& Loadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetLoadout");

	APwndLoadoutVisualizer_SetLoadout_Params params;
	params.Loadout = Loadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizer.SetGenerateReflections
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bGenerate                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::SetGenerateReflections(bool bGenerate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.SetGenerateReflections");

	APwndLoadoutVisualizer_SetGenerateReflections_Params params;
	params.bGenerate = bGenerate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.PlayCustomPwnLine
// (Final, Native, Public, BlueprintCallable)

void APwndLoadoutVisualizer::PlayCustomPwnLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.PlayCustomPwnLine");

	APwndLoadoutVisualizer_PlayCustomPwnLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.OnSetRenderingInWorld
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bInWorld                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizer::OnSetRenderingInWorld(bool bInWorld)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.OnSetRenderingInWorld");

	APwndLoadoutVisualizer_OnSetRenderingInWorld_Params params;
	params.bInWorld = bInWorld;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.OnSetLoadout
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FPwndLoadout            Loadout                        (Parm)

void APwndLoadoutVisualizer::OnSetLoadout(const struct FPwndLoadout& Loadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.OnSetLoadout");

	APwndLoadoutVisualizer_OnSetLoadout_Params params;
	params.Loadout = Loadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizer.K2GetLightingChannels
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLightingChannels       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FLightingChannels APwndLoadoutVisualizer::K2GetLightingChannels()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.K2GetLightingChannels");

	APwndLoadoutVisualizer_K2GetLightingChannels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizer.IsReadyToShow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndLoadoutVisualizer::IsReadyToShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.IsReadyToShow");

	APwndLoadoutVisualizer_IsReadyToShow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizer.GetUIMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* APwndLoadoutVisualizer::GetUIMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.GetUIMaterial");

	APwndLoadoutVisualizer_GetUIMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizer.GetRefRotationRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndLoadoutVisualizer::GetRefRotationRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.GetRefRotationRate");

	APwndLoadoutVisualizer_GetRefRotationRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizer.GetRefRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndLoadoutVisualizer::GetRefRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizer.GetRefRotation");

	APwndLoadoutVisualizer_GetRefRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizerHelper.StopAsyncSetLoadout
// (Final, Native, Public, BlueprintCallable)

void APwndLoadoutVisualizerHelper::StopAsyncSetLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.StopAsyncSetLoadout");

	APwndLoadoutVisualizerHelper_StopAsyncSetLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetUseSilhouette
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUseSilhouette                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetUseSilhouette(bool bUseSilhouette)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetUseSilhouette");

	APwndLoadoutVisualizerHelper_SetUseSilhouette_Params params;
	params.bUseSilhouette = bUseSilhouette;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetRenderingInWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInWorld                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetRenderingInWorld(bool bInWorld)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetRenderingInWorld");

	APwndLoadoutVisualizerHelper_SetRenderingInWorld_Params params;
	params.bInWorld = bInWorld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetRefRotationRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetRefRotationRate(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetRefRotationRate");

	APwndLoadoutVisualizerHelper_SetRefRotationRate_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetRefRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetRefRotation(float Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetRefRotation");

	APwndLoadoutVisualizerHelper_SetRefRotation_Params params;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetPrimary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsPrimary                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetPrimary(bool bIsPrimary)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetPrimary");

	APwndLoadoutVisualizerHelper_SetPrimary_Params params;
	params.bIsPrimary = bIsPrimary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetPlayRevive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bPlayRevive                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetPlayRevive(bool bPlayRevive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetPlayRevive");

	APwndLoadoutVisualizerHelper_SetPlayRevive_Params params;
	params.bPlayRevive = bPlayRevive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetPlayRarityFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bPlayRarityFX                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetPlayRarityFX(bool bPlayRarityFX)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetPlayRarityFX");

	APwndLoadoutVisualizerHelper_SetPlayRarityFX_Params params;
	params.bPlayRarityFX = bPlayRarityFX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetPlayPwn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bPlayPwn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetPlayPwn(bool bPlayPwn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetPlayPwn");

	APwndLoadoutVisualizerHelper_SetPlayPwn_Params params;
	params.bPlayPwn = bPlayPwn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.SetGenerateReflections
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bGenerate                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndLoadoutVisualizerHelper::SetGenerateReflections(bool bGenerate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.SetGenerateReflections");

	APwndLoadoutVisualizerHelper_SetGenerateReflections_Params params;
	params.bGenerate = bGenerate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.PlayCustomPwnLine
// (Final, Native, Public, BlueprintCallable)

void APwndLoadoutVisualizerHelper::PlayCustomPwnLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.PlayCustomPwnLine");

	APwndLoadoutVisualizerHelper_PlayCustomPwnLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndLoadoutVisualizerHelper.IsAsyncLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndLoadoutVisualizerHelper::IsAsyncLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.IsAsyncLoading");

	APwndLoadoutVisualizerHelper_IsAsyncLoading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizerHelper.GetUIMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* APwndLoadoutVisualizerHelper::GetUIMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.GetUIMaterial");

	APwndLoadoutVisualizerHelper_GetUIMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizerHelper.GetRefRotationRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndLoadoutVisualizerHelper::GetRefRotationRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.GetRefRotationRate");

	APwndLoadoutVisualizerHelper_GetRefRotationRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizerHelper.GetRefRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndLoadoutVisualizerHelper::GetRefRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.GetRefRotation");

	APwndLoadoutVisualizerHelper_GetRefRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizerHelper.AsyncSetLoadoutSinglePiece
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   LoadoutPiece                   (Parm, IsPlainOldData)
// struct FPwndLoadout            FillerLoadout                  (Parm)
// bool                           bIncludeIcons                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndLoadoutVisualizerHelper::AsyncSetLoadoutSinglePiece(const struct FGuid& LoadoutPiece, const struct FPwndLoadout& FillerLoadout, bool bIncludeIcons)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.AsyncSetLoadoutSinglePiece");

	APwndLoadoutVisualizerHelper_AsyncSetLoadoutSinglePiece_Params params;
	params.LoadoutPiece = LoadoutPiece;
	params.FillerLoadout = FillerLoadout;
	params.bIncludeIcons = bIncludeIcons;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLoadoutVisualizerHelper.AsyncSetLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndLoadout            Loadout                        (Parm)
// bool                           bIncludeIcons                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndLoadoutVisualizerHelper::AsyncSetLoadout(const struct FPwndLoadout& Loadout, bool bIncludeIcons)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLoadoutVisualizerHelper.AsyncSetLoadout");

	APwndLoadoutVisualizerHelper_AsyncSetLoadout_Params params;
	params.Loadout = Loadout;
	params.bIncludeIcons = bIncludeIcons;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLocalInventory.GetCachedGoldAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndLocalInventory::GetCachedGoldAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLocalInventory.GetCachedGoldAmount");

	UPwndLocalInventory_GetCachedGoldAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndLocalInventory.GetCachedCreditsAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndLocalInventory::GetCachedCreditsAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndLocalInventory.GetCachedCreditsAmount");

	UPwndLocalInventory_GetCachedCreditsAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndMovableActor.SetRotationAllowed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsAllowed                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndMovableActor::SetRotationAllowed(bool IsAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndMovableActor.SetRotationAllowed");

	APwndMovableActor_SetRotationAllowed_Params params;
	params.IsAllowed = IsAllowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndMovableActor.SetMovementAllowed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsAllowed                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndMovableActor::SetMovementAllowed(bool IsAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndMovableActor.SetMovementAllowed");

	APwndMovableActor_SetMovementAllowed_Params params;
	params.IsAllowed = IsAllowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndNetworkManager.ReprocessInProgressNotifications
// (Final, Native, Public, BlueprintCallable)

void UPwndNetworkManager::ReprocessInProgressNotifications()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndNetworkManager.ReprocessInProgressNotifications");

	UPwndNetworkManager_ReprocessInProgressNotifications_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndNetworkManager.IsPlatformConnected
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPwndGameInstance*       GameInst                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndNetworkManager::STATIC_IsPlatformConnected(class UPwndGameInstance* GameInst)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndNetworkManager.IsPlatformConnected");

	UPwndNetworkManager_IsPlatformConnected_Params params;
	params.GameInst = GameInst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndNetworkManager.IsCustomMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndNetworkManager::IsCustomMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndNetworkManager.IsCustomMatch");

	UPwndNetworkManager_IsCustomMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndNetworkManager.DeletePlayerNotification
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   notificationID                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndNetworkManager::DeletePlayerNotification(const struct FGuid& notificationID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndNetworkManager.DeletePlayerNotification");

	UPwndNetworkManager_DeletePlayerNotification_Params params;
	params.notificationID = notificationID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickup.UseSpawnCollision
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPickup::UseSpawnCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.UseSpawnCollision");

	APwndPickup_UseSpawnCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickup.SetSpawningFactory
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickupFactory*      Factory                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickup::SetSpawningFactory(class APwndPickupFactory* Factory)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.SetSpawningFactory");

	APwndPickup_SetSpawningFactory_Params params;
	params.Factory = Factory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickup.SetDropVelocity
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 vel                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndPickup::SetDropVelocity(const struct FVector& vel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.SetDropVelocity");

	APwndPickup_SetDropVelocity_Params params;
	params.vel = vel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickup.Pickup
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickup::Pickup(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.Pickup");

	APwndPickup_Pickup_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickup.OnRep_bPickedUp
// (Native, Protected)

void APwndPickup::OnRep_bPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.OnRep_bPickedUp");

	APwndPickup_OnRep_bPickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickup.OnPickedUp
// (Event, Public, BlueprintEvent)

void APwndPickup::OnPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.OnPickedUp");

	APwndPickup_OnPickedUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickup.OnBeginOverlap
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndPickup::OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.OnBeginOverlap");

	APwndPickup_OnBeginOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickup.IsPickedUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPickup::IsPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.IsPickedUp");

	APwndPickup_IsPickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickup.GetSpawningFactory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndPickupFactory*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndPickupFactory* APwndPickup::GetSpawningFactory()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.GetSpawningFactory");

	APwndPickup_GetSpawningFactory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickup.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPickup::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.GetServerTimeStamp");

	APwndPickup_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickup.GetDefaultDropVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndPickup::GetDefaultDropVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.GetDefaultDropVelocity");

	APwndPickup_GetDefaultDropVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickup.AllowPickup
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPickup::AllowPickup(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.AllowPickup");

	APwndPickup_AllowPickup_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickup.AddDroppedFrom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Act                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickup::AddDroppedFrom(class AActor* Act)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickup.AddDroppedFrom");

	APwndPickup_AddDroppedFrom_Params params;
	params.Act = Act;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupFactoryGUTS.K2ReadRepNonePickupFactoryBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndPickupFactoryRepNonBase ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndPickupFactoryRepNonBase APwndPickupFactoryGUTS::K2ReadRepNonePickupFactoryBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactoryGUTS.K2ReadRepNonePickupFactoryBase");

	APwndPickupFactoryGUTS_K2ReadRepNonePickupFactoryBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactoryGUTS.K2ReadRepAllPickupFactoryBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndPickupFactoryRepAllBase ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndPickupFactoryRepAllBase APwndPickupFactoryGUTS::K2ReadRepAllPickupFactoryBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactoryGUTS.K2ReadRepAllPickupFactoryBase");

	APwndPickupFactoryGUTS_K2ReadRepAllPickupFactoryBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactory.TimeUntilRespawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPickupFactory::TimeUntilRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.TimeUntilRespawn");

	APwndPickupFactory_TimeUntilRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactory.StartRespawn
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndPickupFactory::StartRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.StartRespawn");

	APwndPickupFactory_StartRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupFactory.SpawnPickup
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class APwndPickup*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndPickup* APwndPickupFactory::SpawnPickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.SpawnPickup");

	APwndPickupFactory_SpawnPickup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactory.PickedUp
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APwndPickup*             Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  PickedUpBy                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickupFactory::PickedUp(class APwndPickup* Pickup, class AActor* PickedUpBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.PickedUp");

	APwndPickupFactory_PickedUp_Params params;
	params.Pickup = Pickup;
	params.PickedUpBy = PickedUpBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupFactory.OnRep_bEnabled
// (Native, Protected)

void APwndPickupFactory::OnRep_bEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.OnRep_bEnabled");

	APwndPickupFactory_OnRep_bEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupFactory.IsValidGame
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPickupFactory::IsValidGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.IsValidGame");

	APwndPickupFactory_IsValidGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactory.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPickupFactory::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.GetServerTimeStamp");

	APwndPickupFactory_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactory.GetRespawnPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPickupFactory::GetRespawnPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.GetRespawnPercent");

	APwndPickupFactory_GetRespawnPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactory.CanSpawnPickup
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPickupFactory::CanSpawnPickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.CanSpawnPickup");

	APwndPickupFactory_CanSpawnPickup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupFactory.CancelRespawn
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APwndPickupFactory::CancelRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupFactory.CancelRespawn");

	APwndPickupFactory_CancelRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupInventory.SpawnPickupFX
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class APwndFX*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndFX* APwndPickupInventory::SpawnPickupFX()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupInventory.SpawnPickupFX");

	APwndPickupInventory_SpawnPickupFX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPickupInventory.OnRepPickupFXClass
// (Native, Protected)
// Parameters:
// class UClass*                  OldPickupFXClass               (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickupInventory::OnRepPickupFXClass(class UClass* OldPickupFXClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupInventory.OnRepPickupFXClass");

	APwndPickupInventory_OnRepPickupFXClass_Params params;
	params.OldPickupFXClass = OldPickupFXClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupInventory.OnInventoryGiven
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickupInventory::OnInventoryGiven(class APwndCharacter* Other, class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupInventory.OnInventoryGiven");

	APwndPickupInventory_OnInventoryGiven_Params params;
	params.Other = Other;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupInventory.AddInventoryClass
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InvClass                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUnique                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickupInventory::AddInventoryClass(class UClass* InvClass, bool bUnique)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupInventory.AddInventoryClass");

	APwndPickupInventory_AddInventoryClass_Params params;
	params.InvClass = InvClass;
	params.bUnique = bUnique;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPickupInventory.AddInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// class APwndInventory*          Inv                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPickupInventory::AddInventory(class APwndInventory* Inv)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPickupInventory.AddInventory");

	APwndPickupInventory_AddInventory_Params params;
	params.Inv = Inv;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.UpdateUI
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Changed                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::UpdateUI(class UObject* Changed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.UpdateUI");

	APwndPlayerController_UpdateUI_Params params;
	params.Changed = Changed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ToggleSpectateFromDynamicTeam
// (Final, Exec, Native, Public)

void APwndPlayerController::ToggleSpectateFromDynamicTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ToggleSpectateFromDynamicTeam");

	APwndPlayerController_ToggleSpectateFromDynamicTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ToggleReadyForMatchStart
// (Final, Native, Public, BlueprintCallable)

void APwndPlayerController::ToggleReadyForMatchStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ToggleReadyForMatchStart");

	APwndPlayerController_ToggleReadyForMatchStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ToggleFPWeapon
// (Final, Exec, Native, Public)

void APwndPlayerController::ToggleFPWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ToggleFPWeapon");

	APwndPlayerController_ToggleFPWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ToggleDrawRadiusIndicator
// (Final, Exec, Native, Public)

void APwndPlayerController::ToggleDrawRadiusIndicator()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ToggleDrawRadiusIndicator");

	APwndPlayerController_ToggleDrawRadiusIndicator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ToggleDebugDisplayAmbientSounds
// (Final, Exec, Native, Public)

void APwndPlayerController::ToggleDebugDisplayAmbientSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ToggleDebugDisplayAmbientSounds");

	APwndPlayerController_ToggleDebugDisplayAmbientSounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ToggleAutoDash
// (Final, Exec, Native, Public)

void APwndPlayerController::ToggleAutoDash()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ToggleAutoDash");

	APwndPlayerController_ToggleAutoDash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SwitchTeams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SwitchTeams(int TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SwitchTeams");

	APwndPlayerController_SwitchTeams_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.Suicide
// (Final, Exec, Native, Public)

void APwndPlayerController::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.Suicide");

	APwndPlayerController_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.StuntAwarded
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Stunt                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            RatingAwarded                  (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 RatingInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StuntType                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::StuntAwarded(class UClass* Stunt, int RatingAwarded, class UObject* RatingInstigator, class UObject* Other, const struct FName& StuntType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.StuntAwarded");

	APwndPlayerController_StuntAwarded_Params params;
	params.Stunt = Stunt;
	params.RatingAwarded = RatingAwarded;
	params.RatingInstigator = RatingInstigator;
	params.Other = Other;
	params.StuntType = StuntType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.StartInteractionWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  AttackerWidget                 (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  TargetWidget                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::StartInteractionWidgets(class UClass* AttackerWidget, class UClass* TargetWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.StartInteractionWidgets");

	APwndPlayerController_StartInteractionWidgets_Params params;
	params.AttackerWidget = AttackerWidget;
	params.TargetWidget = TargetWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ShutdownInteractionWidgets
// (Final, Native, Public, BlueprintCallable)

void APwndPlayerController::ShutdownInteractionWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ShutdownInteractionWidgets");

	APwndPlayerController_ShutdownInteractionWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ShowUMG
// (Final, Exec, Native, Public)

void APwndPlayerController::ShowUMG()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ShowUMG");

	APwndPlayerController_ShowUMG_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ShouldSpectateFromDynamicTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerController::ShouldSpectateFromDynamicTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ShouldSpectateFromDynamicTeam");

	APwndPlayerController_ShouldSpectateFromDynamicTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.SetReadyForMatchStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsReady                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetReadyForMatchStart(bool bIsReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetReadyForMatchStart");

	APwndPlayerController_SetReadyForMatchStart_Params params;
	params.bIsReady = bIsReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetPwndCinematicMode
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInCinematicMode               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAffectUMG                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHidePlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAffectsHUD                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShowHUDHealth                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAffectsMovement               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAffectsTurning                (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetPwndCinematicMode(bool bInCinematicMode, bool bAffectUMG, bool bHidePlayer, bool bAffectsHUD, bool bShowHUDHealth, bool bAffectsMovement, bool bAffectsTurning)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetPwndCinematicMode");

	APwndPlayerController_SetPwndCinematicMode_Params params;
	params.bInCinematicMode = bInCinematicMode;
	params.bAffectUMG = bAffectUMG;
	params.bHidePlayer = bHidePlayer;
	params.bAffectsHUD = bAffectsHUD;
	params.bShowHUDHealth = bShowHUDHealth;
	params.bAffectsMovement = bAffectsMovement;
	params.bAffectsTurning = bAffectsTurning;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetProjectileDebugExplosionTime
// (Final, Exec, Native, Public)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetProjectileDebugExplosionTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetProjectileDebugExplosionTime");

	APwndPlayerController_SetProjectileDebugExplosionTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextWeaponSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextWeaponSkin(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextWeaponSkin");

	APwndPlayerController_SetNextWeaponSkin_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextWeapon(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextWeapon");

	APwndPlayerController_SetNextWeapon_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextSecondaryAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextSecondaryAbility(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextSecondaryAbility");

	APwndPlayerController_SetNextSecondaryAbility_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextRevive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextRevive(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextRevive");

	APwndPlayerController_SetNextRevive_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextPwnStamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextPwnStamp(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextPwnStamp");

	APwndPlayerController_SetNextPwnStamp_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextPWN
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextPWN(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextPWN");

	APwndPlayerController_SetNextPWN_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextPrimaryAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextPrimaryAbility(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextPrimaryAbility");

	APwndPlayerController_SetNextPrimaryAbility_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextPerk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextPerk(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextPerk");

	APwndPlayerController_SetNextPerk_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextCharacterSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextCharacterSkin(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextCharacterSkin");

	APwndPlayerController_SetNextCharacterSkin_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetNextCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetNextCharacter(int Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetNextCharacter");

	APwndPlayerController_SetNextCharacter_Params params;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetDebugTargetLoc
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TargetLoc                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndPlayerController::SetDebugTargetLoc(const struct FVector& TargetLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetDebugTargetLoc");

	APwndPlayerController_SetDebugTargetLoc_Params params;
	params.TargetLoc = TargetLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetControlRotationReplicated
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                NewRotation                    (Parm, IsPlainOldData)

void APwndPlayerController::SetControlRotationReplicated(const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetControlRotationReplicated");

	APwndPlayerController_SetControlRotationReplicated_Params params;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetCharacterByStr
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)

void APwndPlayerController::SetCharacterByStr(const struct FString& Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetCharacterByStr");

	APwndPlayerController_SetCharacterByStr_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetCameraRoll
// (Final, Exec, Native, Public)
// Parameters:
// float                          Roll                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::SetCameraRoll(float Roll)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetCameraRoll");

	APwndPlayerController_SetCameraRoll_Params params;
	params.Roll = Roll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetCameraModeSpectateThirdPerson
// (Native, Public, BlueprintCallable)

void APwndPlayerController::SetCameraModeSpectateThirdPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetCameraModeSpectateThirdPerson");

	APwndPlayerController_SetCameraModeSpectateThirdPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetCameraModeSpectateOrbit
// (Native, Public, BlueprintCallable)

void APwndPlayerController::SetCameraModeSpectateOrbit()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetCameraModeSpectateOrbit");

	APwndPlayerController_SetCameraModeSpectateOrbit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetCameraModeSpectateFixedTracking
// (Native, Public, BlueprintCallable)

void APwndPlayerController::SetCameraModeSpectateFixedTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetCameraModeSpectateFixedTracking");

	APwndPlayerController_SetCameraModeSpectateFixedTracking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetCameraModeSpectateFixed
// (Native, Public, BlueprintCallable)

void APwndPlayerController::SetCameraModeSpectateFixed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetCameraModeSpectateFixed");

	APwndPlayerController_SetCameraModeSpectateFixed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.SetCameraModeDefault
// (Native, Public, BlueprintCallable)

void APwndPlayerController::SetCameraModeDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.SetCameraModeDefault");

	APwndPlayerController_SetCameraModeDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerSetProjectileDebugExplosionTime
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerSetProjectileDebugExplosionTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerSetProjectileDebugExplosionTime");

	APwndPlayerController_ServerSetProjectileDebugExplosionTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerSetControlRotation
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                NewRotation                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void APwndPlayerController::ServerSetControlRotation(const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerSetControlRotation");

	APwndPlayerController_ServerSetControlRotation_Params params;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerSetClientReadyForSpawning
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void APwndPlayerController::ServerSetClientReadyForSpawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerSetClientReadyForSpawning");

	APwndPlayerController_ServerSetClientReadyForSpawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerSetClientLeavingMatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void APwndPlayerController::ServerSetClientLeavingMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerSetClientLeavingMatch");

	APwndPlayerController_ServerSetClientLeavingMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerSetAutoDash
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerSetAutoDash(bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerSetAutoDash");

	APwndPlayerController_ServerSetAutoDash_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerDebugWeapons
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerDebugWeapons(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerDebugWeapons");

	APwndPlayerController_ServerDebugWeapons_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatToggleRegeneration
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatToggleRegeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatToggleRegeneration");

	APwndPlayerController_ServerCheatToggleRegeneration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatSpectate
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatSpectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatSpectate");

	APwndPlayerController_ServerCheatSpectate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatSpawnPwnable
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            StackSize                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OverrideBounty                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemy                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverrideDuration               (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatSpawnPwnable(int StackSize, int OverrideBounty, bool bEnemy, float OverrideDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatSpawnPwnable");

	APwndPlayerController_ServerCheatSpawnPwnable_Params params;
	params.StackSize = StackSize;
	params.OverrideBounty = OverrideBounty;
	params.bEnemy = bEnemy;
	params.OverrideDuration = OverrideDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatSkipWarmup
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatSkipWarmup()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatSkipWarmup");

	APwndPlayerController_ServerCheatSkipWarmup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatSetTeamScore
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            Score                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatSetTeamScore(int Score)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatSetTeamScore");

	APwndPlayerController_ServerCheatSetTeamScore_Params params;
	params.Score = Score;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatSetMatchTimeRemaining
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Time                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatSetMatchTimeRemaining(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatSetMatchTimeRemaining");

	APwndPlayerController_ServerCheatSetMatchTimeRemaining_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatSetHealth
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            Health                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatSetHealth(int Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatSetHealth");

	APwndPlayerController_ServerCheatSetHealth_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatReviveDurationMul
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatReviveDurationMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatReviveDurationMul");

	APwndPlayerController_ServerCheatReviveDurationMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatRespawn
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatRespawn");

	APwndPlayerController_ServerCheatRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatResetRank
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatResetRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatResetRank");

	APwndPlayerController_ServerCheatResetRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatRemovePwnStamps
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatRemovePwnStamps()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatRemovePwnStamps");

	APwndPlayerController_ServerCheatRemovePwnStamps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatRemoveBot
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)

void APwndPlayerController::ServerCheatRemoveBot(const struct FString& Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatRemoveBot");

	APwndPlayerController_ServerCheatRemoveBot_Params params;
	params.Char = Char;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatPwnRespawnTimeMul
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatPwnRespawnTimeMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatPwnRespawnTimeMul");

	APwndPlayerController_ServerCheatPwnRespawnTimeMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatPwnageDurationMul
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Mul                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatPwnageDurationMul(float Mul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatPwnageDurationMul");

	APwndPlayerController_ServerCheatPwnageDurationMul_Params params;
	params.Mul = Mul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatKickPlayer
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 PlayerName                     (Parm, ZeroConstructor)

void APwndPlayerController::ServerCheatKickPlayer(const struct FString& PlayerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatKickPlayer");

	APwndPlayerController_ServerCheatKickPlayer_Params params;
	params.PlayerName = PlayerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatInvertShieldTeam
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatInvertShieldTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatInvertShieldTeam");

	APwndPlayerController_ServerCheatInvertShieldTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatGodMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatGodMode");

	APwndPlayerController_ServerCheatGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatFinishCooldowns
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatFinishCooldowns()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatFinishCooldowns");

	APwndPlayerController_ServerCheatFinishCooldowns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatEndGame
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatEndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatEndGame");

	APwndPlayerController_ServerCheatEndGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatAwardRating
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            Rating                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatAwardRating(int Rating)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatAwardRating");

	APwndPlayerController_ServerCheatAwardRating_Params params;
	params.Rating = Rating;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatAwardRank
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void APwndPlayerController::ServerCheatAwardRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatAwardRank");

	APwndPlayerController_ServerCheatAwardRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerCheatAddBot
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)
// TEnumAsByte<EeBotDifficulty>   Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ServerCheatAddBot(const struct FString& Char, TEnumAsByte<EeBotDifficulty> Difficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerCheatAddBot");

	APwndPlayerController_ServerCheatAddBot_Params params;
	params.Char = Char;
	params.Difficulty = Difficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ServerAdmin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void APwndPlayerController::ServerAdmin(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ServerAdmin");

	APwndPlayerController_ServerAdmin_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.PostEventTrigger
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bGoUpClassTree                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerController::PostEventTrigger(const struct FPostedEventTrigger& Trig, bool bGoUpClassTree)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.PostEventTrigger");

	APwndPlayerController_PostEventTrigger_Params params;
	params.Trig = Trig;
	params.bGoUpClassTree = bGoUpClassTree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.OnReviveStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnReviveStarted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnReviveStarted");

	APwndPlayerController_OnReviveStarted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnReviveCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnReviveCompleted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnReviveCompleted");

	APwndPlayerController_OnReviveCompleted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnReviveCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDenied                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          DenyerPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnReviveCancelled(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn, bool bDenied, class APwndCharacter* DenyerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnReviveCancelled");

	APwndPlayerController_OnReviveCancelled_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;
	params.bDenied = bDenied;
	params.DenyerPawn = DenyerPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnRespawnStart
// (Event, Protected, BlueprintEvent)

void APwndPlayerController::OnRespawnStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnRespawnStart");

	APwndPlayerController_OnRespawnStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnRep_RespawnTarget
// (Native, Protected)
// Parameters:
// class AActor*                  OldRespawnTarget               (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnRep_RespawnTarget(class AActor* OldRespawnTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnRep_RespawnTarget");

	APwndPlayerController_OnRep_RespawnTarget_Params params;
	params.OldRespawnTarget = OldRespawnTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnPwnageStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnPwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnPwnageStarted");

	APwndPlayerController_OnPwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnPwnageScored
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnPwnageScored(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnPwnageScored");

	APwndPlayerController_OnPwnageScored_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnPwnageCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnPwnageCancelled(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, bool bSaved, class APwndCharacter* SaverPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnPwnageCancelled");

	APwndPlayerController_OnPwnageCancelled_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.bSaved = bSaved;
	params.SaverPawn = SaverPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnPreReviveStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnPreReviveStarted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnPreReviveStarted");

	APwndPlayerController_OnPreReviveStarted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnPrePwnageStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnPrePwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnPrePwnageStarted");

	APwndPlayerController_OnPrePwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnPawnCompletedActionStateUpdated
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnActionState> State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndCharacterActionCompletion ActionCompleted                (ConstParm, Parm, OutParm, ReferenceParm)

void APwndPlayerController::OnPawnCompletedActionStateUpdated(class APwndCharacter* Char, TEnumAsByte<EePawnActionState> State, bool bSuccess, const struct FPwndCharacterActionCompletion& ActionCompleted)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnPawnCompletedActionStateUpdated");

	APwndPlayerController_OnPawnCompletedActionStateUpdated_Params params;
	params.Char = Char;
	params.State = State;
	params.bSuccess = bSuccess;
	params.ActionCompleted = ActionCompleted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnPawnActionStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Char                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EePawnActionState> OldState                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnPawnActionStateUpdated(class APwndCharacter* Char, TEnumAsByte<EePawnActionState> NewState, TEnumAsByte<EePawnActionState> OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnPawnActionStateUpdated");

	APwndPlayerController_OnPawnActionStateUpdated_Params params;
	params.Char = Char;
	params.NewState = NewState;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnHumiliationStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnHumiliationStarted(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnHumiliationStarted");

	APwndPlayerController_OnHumiliationStarted_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnHumiliationCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnHumiliationCompleted(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnHumiliationCompleted");

	APwndPlayerController_OnHumiliationCompleted_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnHumiliationCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnHumiliationCancelled(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnHumiliationCancelled");

	APwndPlayerController_OnHumiliationCancelled_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnCarryStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnCarryStarted(class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnCarryStarted");

	APwndPlayerController_OnCarryStarted_Params params;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.OnCarryCancelled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::OnCarryCancelled(class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn, bool bSaved, float ThrowPower, class APwndCharacter* SaverPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.OnCarryCancelled");

	APwndPlayerController_OnCarryCancelled_Params params;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;
	params.bSaved = bSaved;
	params.ThrowPower = ThrowPower;
	params.SaverPawn = SaverPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ListFriends
// (Final, Exec, Native, Public)

void APwndPlayerController::ListFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ListFriends");

	APwndPlayerController_ListFriends_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.IsHUDHealthBarShowing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerController::IsHUDHealthBarShowing()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.IsHUDHealthBarShowing");

	APwndPlayerController_IsHUDHealthBarShowing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.InviteFriend
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 FriendDisplayName              (Parm, ZeroConstructor)

void APwndPlayerController::InviteFriend(const struct FString& FriendDisplayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.InviteFriend");

	APwndPlayerController_InviteFriend_Params params;
	params.FriendDisplayName = FriendDisplayName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.HideUMG
// (Final, Exec, Native, Public)

void APwndPlayerController::HideUMG()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.HideUMG");

	APwndPlayerController_HideUMG_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.GetTeamStatus
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bIsAllyPwnParty                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bIsEnemyPwnParty               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bAllEnemiesDown                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bAllAlliesDown                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bLastManStanding               (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::GetTeamStatus(bool* bIsAllyPwnParty, bool* bIsEnemyPwnParty, bool* bAllEnemiesDown, bool* bAllAlliesDown, bool* bLastManStanding)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.GetTeamStatus");

	APwndPlayerController_GetTeamStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bIsAllyPwnParty != nullptr)
		*bIsAllyPwnParty = params.bIsAllyPwnParty;
	if (bIsEnemyPwnParty != nullptr)
		*bIsEnemyPwnParty = params.bIsEnemyPwnParty;
	if (bAllEnemiesDown != nullptr)
		*bAllEnemiesDown = params.bAllEnemiesDown;
	if (bAllAlliesDown != nullptr)
		*bAllAlliesDown = params.bAllAlliesDown;
	if (bLastManStanding != nullptr)
		*bLastManStanding = params.bLastManStanding;
}


// Function PWND.PwndPlayerController.GetTeamPotentialScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<float>                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<float> APwndPlayerController::GetTeamPotentialScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.GetTeamPotentialScore");

	APwndPlayerController_GetTeamPotentialScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.GetTeamChargingScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<float>                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<float> APwndPlayerController::GetTeamChargingScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.GetTeamChargingScore");

	APwndPlayerController_GetTeamChargingScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPlayerController::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.GetServerTimeStamp");

	APwndPlayerController_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.GetRespawnDelayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPlayerController::GetRespawnDelayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.GetRespawnDelayTime");

	APwndPlayerController_GetRespawnDelayTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.GetForceRespawnTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPlayerController::GetForceRespawnTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.GetForceRespawnTime");

	APwndPlayerController_GetForceRespawnTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.GetDamageHistory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndDamageHistoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPwndDamageHistoryComponent* APwndPlayerController::GetDamageHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.GetDamageHistory");

	APwndPlayerController_GetDamageHistory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerController.ForceRespawn
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Timer                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStartupSpawn                  (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ForceRespawn(float Delay, float Timer, bool bStartupSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ForceRespawn");

	APwndPlayerController_ForceRespawn_Params params;
	params.Delay = Delay;
	params.Timer = Timer;
	params.bStartupSpawn = bStartupSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.DebugWeapons
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::DebugWeapons(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.DebugWeapons");

	APwndPlayerController_DebugWeapons_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.DebugShowInput
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::DebugShowInput(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.DebugShowInput");

	APwndPlayerController_DebugShowInput_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientStuntAwarded
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class UClass*                  Stunt                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            RatingAwarded                  (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 RatingInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StuntType                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientStuntAwarded(class UClass* Stunt, int RatingAwarded, class UObject* RatingInstigator, class UObject* Other, const struct FName& StuntType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientStuntAwarded");

	APwndPlayerController_ClientStuntAwarded_Params params;
	params.Stunt = Stunt;
	params.RatingAwarded = RatingAwarded;
	params.RatingInstigator = RatingInstigator;
	params.Other = Other;
	params.StuntType = StuntType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientSetEndGameInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TEnumAsByte<EndGameReason>     Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bVictory                       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        Winner                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ScoreActor                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientSetEndGameInfo(TEnumAsByte<EndGameReason> Reason, bool bVictory, class APwndTeamInfo* WinningTeam, class APwndPlayerState* Winner, class AActor* ScoreActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientSetEndGameInfo");

	APwndPlayerController_ClientSetEndGameInfo_Params params;
	params.Reason = Reason;
	params.bVictory = bVictory;
	params.WinningTeam = WinningTeam;
	params.Winner = Winner;
	params.ScoreActor = ScoreActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientScoreUpdated
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndTeamInfo*           ScoringTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            Score                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ScoreIncrement                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          MatchRelativeTimeStamp         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientScoreUpdated(class APwndTeamInfo* ScoringTeam, int Score, int ScoreIncrement, float MatchRelativeTimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientScoreUpdated");

	APwndPlayerController_ClientScoreUpdated_Params params;
	params.ScoringTeam = ScoringTeam;
	params.Score = Score;
	params.ScoreIncrement = ScoreIncrement;
	params.MatchRelativeTimeStamp = MatchRelativeTimeStamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientReviveStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientReviveStarted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientReviveStarted");

	APwndPlayerController_ClientReviveStarted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientReviveCompleted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientReviveCompleted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientReviveCompleted");

	APwndPlayerController_ClientReviveCompleted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientReviveCancelled
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDenied                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          DenyerPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientReviveCancelled(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn, bool bDenied, class APwndCharacter* DenyerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientReviveCancelled");

	APwndPlayerController_ClientReviveCancelled_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;
	params.bDenied = bDenied;
	params.DenyerPawn = DenyerPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientPwnageStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientPwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientPwnageStarted");

	APwndPlayerController_ClientPwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientPwnageScored
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientPwnageScored(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientPwnageScored");

	APwndPlayerController_ClientPwnageScored_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientPwnageCancelled
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientPwnageCancelled(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn, bool bSaved, class APwndCharacter* SaverPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientPwnageCancelled");

	APwndPlayerController_ClientPwnageCancelled_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;
	params.bSaved = bSaved;
	params.SaverPawn = SaverPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientPreReviveStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          RevivedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientPreReviveStarted(class APwndCharacter* Reviver, class APwndCharacter* RevivedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientPreReviveStarted");

	APwndPlayerController_ClientPreReviveStarted_Params params;
	params.Reviver = Reviver;
	params.RevivedPawn = RevivedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientPrePwnageStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Pwner                          (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          PwndPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientPrePwnageStarted(class APwndCharacter* Pwner, class APwndCharacter* PwndPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientPrePwnageStarted");

	APwndPlayerController_ClientPrePwnageStarted_Params params;
	params.Pwner = Pwner;
	params.PwndPawn = PwndPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientHumiliationStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientHumiliationStarted(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientHumiliationStarted");

	APwndPlayerController_ClientHumiliationStarted_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientHumiliationCompleted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientHumiliationCompleted(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientHumiliationCompleted");

	APwndPlayerController_ClientHumiliationCompleted_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientHumiliationCancelled
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Humiliator                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          HumiliatedPawn                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientHumiliationCancelled(class APwndCharacter* Humiliator, class APwndCharacter* HumiliatedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientHumiliationCancelled");

	APwndPlayerController_ClientHumiliationCancelled_Params params;
	params.Humiliator = Humiliator;
	params.HumiliatedPawn = HumiliatedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientEventTriggerPosted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, ReferenceParm)

void APwndPlayerController::ClientEventTriggerPosted(const struct FPostedEventTrigger& Trig)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientEventTriggerPosted");

	APwndPlayerController_ClientEventTriggerPosted_Params params;
	params.Trig = Trig;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientDrawDebugString
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                 TextLocation                   (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FString                 Text                           (Parm, ZeroConstructor)
// class AActor*                  TestBaseActor                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  TextColor                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDrawShadow                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientDrawDebugString(const struct FVector& TextLocation, const struct FString& Text, class AActor* TestBaseActor, const struct FColor& TextColor, float Duration, bool bDrawShadow)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientDrawDebugString");

	APwndPlayerController_ClientDrawDebugString_Params params;
	params.TextLocation = TextLocation;
	params.Text = Text;
	params.TestBaseActor = TestBaseActor;
	params.TextColor = TextColor;
	params.Duration = Duration;
	params.bDrawShadow = bDrawShadow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientCheatSpectate
// (Final, Net, NetReliable, Native, Event, Private, NetClient)

void APwndPlayerController::ClientCheatSpectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientCheatSpectate");

	APwndPlayerController_ClientCheatSpectate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientCarryStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientCarryStarted(class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientCarryStarted");

	APwndPlayerController_ClientCarryStarted_Params params;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientCarryCancelled
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APwndCharacter*          Carrier                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          CarriedPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSaved                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ThrowPower                     (Parm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          SaverPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::ClientCarryCancelled(class APwndCharacter* Carrier, class APwndCharacter* CarriedPawn, bool bSaved, float ThrowPower, class APwndCharacter* SaverPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientCarryCancelled");

	APwndPlayerController_ClientCarryCancelled_Params params;
	params.Carrier = Carrier;
	params.CarriedPawn = CarriedPawn;
	params.bSaved = bSaved;
	params.ThrowPower = ThrowPower;
	params.SaverPawn = SaverPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ClientAddProjectileDebugExplosion
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FProjectileDebugExplosion DebugExpl                      (ConstParm, Parm, ReferenceParm)

void APwndPlayerController::ClientAddProjectileDebugExplosion(const struct FProjectileDebugExplosion& DebugExpl)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ClientAddProjectileDebugExplosion");

	APwndPlayerController_ClientAddProjectileDebugExplosion_Params params;
	params.DebugExpl = DebugExpl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.ChangeLocalization
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Target                         (Parm, ZeroConstructor)

void APwndPlayerController::ChangeLocalization(const struct FString& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.ChangeLocalization");

	APwndPlayerController_ChangeLocalization_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeTurnAtRate
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeTurnAtRate(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeTurnAtRate");

	APwndPlayerController_CameraModeTurnAtRate_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeMoveUp
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeMoveUp(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeMoveUp");

	APwndPlayerController_CameraModeMoveUp_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeMoveRight
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeMoveRight(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeMoveRight");

	APwndPlayerController_CameraModeMoveRight_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeMoveForward
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeMoveForward(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeMoveForward");

	APwndPlayerController_CameraModeMoveForward_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeMoveFarther
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeMoveFarther(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeMoveFarther");

	APwndPlayerController_CameraModeMoveFarther_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeLookUpAtRate
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeLookUpAtRate(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeLookUpAtRate");

	APwndPlayerController_CameraModeLookUpAtRate_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeAddYawInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeAddYawInput(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeAddYawInput");

	APwndPlayerController_CameraModeAddYawInput_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeAddRollInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeAddRollInput(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeAddRollInput");

	APwndPlayerController_CameraModeAddRollInput_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.CameraModeAddPitchInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          val                            (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerController::CameraModeAddPitchInput(float val)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.CameraModeAddPitchInput");

	APwndPlayerController_CameraModeAddPitchInput_Params params;
	params.val = val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerController.Admin
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void APwndPlayerController::Admin(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerController.Admin");

	APwndPlayerController_Admin_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerStart.SetTeamNum
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  InTeamNum                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerStart::SetTeamNum(unsigned char InTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerStart.SetTeamNum");

	APwndPlayerStart_SetTeamNum_Params params;
	params.InTeamNum = InTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerStart.SetEnabled
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsEnabled                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerStart::SetEnabled(bool bIsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerStart.SetEnabled");

	APwndPlayerStart_SetEnabled_Params params;
	params.bIsEnabled = bIsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerStart.OnRep_bEnabled
// (Final, Native, Protected)

void APwndPlayerStart::OnRep_bEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerStart.OnRep_bEnabled");

	APwndPlayerStart_OnRep_bEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerStart.IsValidGame
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerStart::IsValidGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerStart.IsValidGame");

	APwndPlayerStart_IsValidGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.SetTeam
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndTeamInfo*           NewTeam                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::SetTeam(class APwndTeamInfo* NewTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.SetTeam");

	APwndPlayerState_SetTeam_Params params;
	params.NewTeam = NewTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerToggleReadyForMatchStart
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void APwndPlayerState::ServerToggleReadyForMatchStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerToggleReadyForMatchStart");

	APwndPlayerState_ServerToggleReadyForMatchStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSwitchTeams
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSwitchTeams(int TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSwitchTeams");

	APwndPlayerState_ServerSwitchTeams_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetWeaponSkin
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   WeaponSkin                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetWeaponSkin(const struct FGuid& WeaponSkin, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetWeaponSkin");

	APwndPlayerState_ServerSetWeaponSkin_Params params;
	params.WeaponSkin = WeaponSkin;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   Weapon                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetWeapon(const struct FGuid& Weapon, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetWeapon");

	APwndPlayerState_ServerSetWeapon_Params params;
	params.Weapon = Weapon;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetSecondaryAbility
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   Ability                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetSecondaryAbility(const struct FGuid& Ability, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetSecondaryAbility");

	APwndPlayerState_ServerSetSecondaryAbility_Params params;
	params.Ability = Ability;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetRevive
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   Revive                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetRevive(const struct FGuid& Revive, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetRevive");

	APwndPlayerState_ServerSetRevive_Params params;
	params.Revive = Revive;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetReadyForMatchStart
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bReady                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetReadyForMatchStart(bool bReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetReadyForMatchStart");

	APwndPlayerState_ServerSetReadyForMatchStart_Params params;
	params.bReady = bReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetPwnStamp
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   PwnStamp                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetPwnStamp(const struct FGuid& PwnStamp, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetPwnStamp");

	APwndPlayerState_ServerSetPwnStamp_Params params;
	params.PwnStamp = PwnStamp;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetPWN
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   PWN                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetPWN(const struct FGuid& PWN, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetPWN");

	APwndPlayerState_ServerSetPWN_Params params;
	params.PWN = PWN;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetPrimaryAbility
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   Ability                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetPrimaryAbility(const struct FGuid& Ability, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetPrimaryAbility");

	APwndPlayerState_ServerSetPrimaryAbility_Params params;
	params.Ability = Ability;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetPerk
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   Perk                           (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetPerk(const struct FGuid& Perk, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetPerk");

	APwndPlayerState_ServerSetPerk_Params params;
	params.Perk = Perk;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextWeaponSkin
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextWeaponSkin(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextWeaponSkin");

	APwndPlayerState_ServerSetNextWeaponSkin_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextWeapon(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextWeapon");

	APwndPlayerState_ServerSetNextWeapon_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextSecondaryAbility
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextSecondaryAbility(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextSecondaryAbility");

	APwndPlayerState_ServerSetNextSecondaryAbility_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextRevive
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextRevive(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextRevive");

	APwndPlayerState_ServerSetNextRevive_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextPwnStamp
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextPwnStamp(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextPwnStamp");

	APwndPlayerState_ServerSetNextPwnStamp_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextPWN
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextPWN(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextPWN");

	APwndPlayerState_ServerSetNextPWN_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextPrimaryAbility
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextPrimaryAbility(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextPrimaryAbility");

	APwndPlayerState_ServerSetNextPrimaryAbility_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextPerk
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextPerk(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextPerk");

	APwndPlayerState_ServerSetNextPerk_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextCharacterSkin
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextCharacterSkin(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextCharacterSkin");

	APwndPlayerState_ServerSetNextCharacterSkin_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetNextCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetNextCharacter(int Dir, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetNextCharacter");

	APwndPlayerState_ServerSetNextCharacter_Params params;
	params.Dir = Dir;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetMonkeyMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            NewMonkeyMode                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeBotDifficulty>   NewMonkeyModeDifficulty        (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetMonkeyMode(int NewMonkeyMode, TEnumAsByte<EeBotDifficulty> NewMonkeyModeDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetMonkeyMode");

	APwndPlayerState_ServerSetMonkeyMode_Params params;
	params.NewMonkeyMode = NewMonkeyMode;
	params.NewMonkeyModeDifficulty = NewMonkeyModeDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetLoadout
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FPwndLoadout            Loadout                        (ConstParm, Parm, ReferenceParm)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetLoadout(const struct FPwndLoadout& Loadout, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetLoadout");

	APwndPlayerState_ServerSetLoadout_Params params;
	params.Loadout = Loadout;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetCharacterSkin
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   CharacterSkin                  (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetCharacterSkin(const struct FGuid& CharacterSkin, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetCharacterSkin");

	APwndPlayerState_ServerSetCharacterSkin_Params params;
	params.CharacterSkin = CharacterSkin;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetCharacterByStr
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FString                 Char                           (Parm, ZeroConstructor)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetCharacterByStr(const struct FString& Char, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetCharacterByStr");

	APwndPlayerState_ServerSetCharacterByStr_Params params;
	params.Char = Char;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ServerSetCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FGuid                   Character                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// bool                           bApplyImmediately              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ServerSetCharacter(const struct FGuid& Character, bool bApplyImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ServerSetCharacter");

	APwndPlayerState_ServerSetCharacter_Params params;
	params.Character = Character;
	params.bApplyImmediately = bApplyImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ResetRank
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndPlayerState::ResetRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ResetRank");

	APwndPlayerState_ResetRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.PostEventTrigger
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bGoUpClassTree                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerState::PostEventTrigger(const struct FPostedEventTrigger& Trig, bool bGoUpClassTree)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.PostEventTrigger");

	APwndPlayerState_PostEventTrigger_Params params;
	params.Trig = Trig;
	params.bGoUpClassTree = bGoUpClassTree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.OverrideWeaponMaterials
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      MatIfc                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bThirdPerson                   (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::OverrideWeaponMaterials(class UMaterialInterface* MatIfc, bool bFirstPerson, bool bThirdPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.OverrideWeaponMaterials");

	APwndPlayerState_OverrideWeaponMaterials_Params params;
	params.MatIfc = MatIfc;
	params.bFirstPerson = bFirstPerson;
	params.bThirdPerson = bThirdPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.OnRep_RepStats
// (Native, Protected)

void APwndPlayerState::OnRep_RepStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.OnRep_RepStats");

	APwndPlayerState_OnRep_RepStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.OnRep_ReplicatedRatingByType
// (Native, Protected)

void APwndPlayerState::OnRep_ReplicatedRatingByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.OnRep_ReplicatedRatingByType");

	APwndPlayerState_OnRep_ReplicatedRatingByType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.OnRep_bIsConnected
// (Native, Protected)

void APwndPlayerState::OnRep_bIsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.OnRep_bIsConnected");

	APwndPlayerState_OnRep_bIsConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.MulticastAwardRank
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class APwndPlayerState*        PS                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewRank                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewRating                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewNextRankRating              (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::MulticastAwardRank(class APwndPlayerState* PS, int NewRank, float NewRating, float NewNextRankRating)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.MulticastAwardRank");

	APwndPlayerState_MulticastAwardRank_Params params;
	params.PS = PS;
	params.NewRank = NewRank;
	params.NewRating = NewRating;
	params.NewNextRankRating = NewNextRankRating;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ItemStats_Subtract
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 _Item                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ItemStats_Subtract(class UObject* _Item, const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ItemStats_Subtract");

	APwndPlayerState_ItemStats_Subtract_Params params;
	params._Item = _Item;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ItemStats_Min
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 _Item                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ItemStats_Min(class UObject* _Item, const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ItemStats_Min");

	APwndPlayerState_ItemStats_Min_Params params;
	params._Item = _Item;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ItemStats_Max
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 _Item                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ItemStats_Max(class UObject* _Item, const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ItemStats_Max");

	APwndPlayerState_ItemStats_Max_Params params;
	params._Item = _Item;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ItemStats_Add
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 _Item                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ItemStats_Add(class UObject* _Item, const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ItemStats_Add");

	APwndPlayerState_ItemStats_Add_Params params;
	params._Item = _Item;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.ItemStats_Accumulate
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 _Item                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::ItemStats_Accumulate(class UObject* _Item, const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.ItemStats_Accumulate");

	APwndPlayerState_ItemStats_Accumulate_Params params;
	params._Item = _Item;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.IsSmartMonkey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerState::IsSmartMonkey()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.IsSmartMonkey");

	APwndPlayerState_IsSmartMonkey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.IsReadyForMatchStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerState::IsReadyForMatchStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.IsReadyForMatchStart");

	APwndPlayerState_IsReadyForMatchStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.IsMonkey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerState::IsMonkey()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.IsMonkey");

	APwndPlayerState_IsMonkey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndPlayerState::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.IsConnected");

	APwndPlayerState_IsConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPlayerState::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetServerTimeStamp");

	APwndPlayerState_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetRankPercent
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            outRank                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPlayerState::GetRankPercent(int* outRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetRankPercent");

	APwndPlayerState_GetRankPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outRank != nullptr)
		*outRank = params.outRank;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetRankForNameplate
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndPlayerState::GetRankForNameplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetRankForNameplate");

	APwndPlayerState_GetRankForNameplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetPwnerWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndPlayerState::GetPwnerWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetPwnerWidget");

	APwndPlayerState_GetPwnerWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetPlayerReviveSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndPlayerState::GetPlayerReviveSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetPlayerReviveSelection");

	APwndPlayerState_GetPlayerReviveSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetPlayerPwnStampSelectionInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPwndPwnStamp*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndPwnStamp* APwndPlayerState::GetPlayerPwnStampSelectionInst()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetPlayerPwnStampSelectionInst");

	APwndPlayerState_GetPlayerPwnStampSelectionInst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetPlayerPwnStampSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndPlayerState::GetPlayerPwnStampSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetPlayerPwnStampSelection");

	APwndPlayerState_GetPlayerPwnStampSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetPlayerPWNSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* APwndPlayerState::GetPlayerPWNSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetPlayerPWNSelection");

	APwndPlayerState_GetPlayerPWNSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetMonkeyModeDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EeBotDifficulty>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeBotDifficulty> APwndPlayerState::GetMonkeyModeDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetMonkeyModeDifficulty");

	APwndPlayerState_GetMonkeyModeDifficulty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetMonkeyMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndPlayerState::GetMonkeyMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetMonkeyMode");

	APwndPlayerState_GetMonkeyMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetKDR
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndPlayerState::GetKDR()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetKDR");

	APwndPlayerState_GetKDR_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GetDecoratedPlayerName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bOnLeft                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString APwndPlayerState::GetDecoratedPlayerName(bool bOnLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GetDecoratedPlayerName");

	APwndPlayerState_GetDecoratedPlayerName_Params params;
	params.bOnLeft = bOnLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.GameStats_UseItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::GameStats_UseItem(class UObject* Item, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.GameStats_UseItem");

	APwndPlayerState_GameStats_UseItem_Params params;
	params.Item = Item;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CommonStats_Subtract
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CommonStats_Subtract(const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CommonStats_Subtract");

	APwndPlayerState_CommonStats_Subtract_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CommonStats_Set
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CommonStats_Set(const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CommonStats_Set");

	APwndPlayerState_CommonStats_Set_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CommonStats_Min
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CommonStats_Min(const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CommonStats_Min");

	APwndPlayerState_CommonStats_Min_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CommonStats_Max
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CommonStats_Max(const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CommonStats_Max");

	APwndPlayerState_CommonStats_Max_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CommonStats_Add
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CommonStats_Add(const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CommonStats_Add");

	APwndPlayerState_CommonStats_Add_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CommonStats_Accumulate
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CommonStats_Accumulate(const struct FName& _PropertyName, float _Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CommonStats_Accumulate");

	APwndPlayerState_CommonStats_Accumulate_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CombatStats_Subtract
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Weap                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CombatStats_Subtract(const struct FName& _PropertyName, float _Value, class UObject* Weap)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CombatStats_Subtract");

	APwndPlayerState_CombatStats_Subtract_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;
	params.Weap = Weap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CombatStats_Min
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Weap                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CombatStats_Min(const struct FName& _PropertyName, float _Value, class UObject* Weap)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CombatStats_Min");

	APwndPlayerState_CombatStats_Min_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;
	params.Weap = Weap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CombatStats_Max
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Weap                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CombatStats_Max(const struct FName& _PropertyName, float _Value, class UObject* Weap)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CombatStats_Max");

	APwndPlayerState_CombatStats_Max_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;
	params.Weap = Weap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CombatStats_Add
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Weap                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CombatStats_Add(const struct FName& _PropertyName, float _Value, class UObject* Weap)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CombatStats_Add");

	APwndPlayerState_CombatStats_Add_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;
	params.Weap = Weap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.CombatStats_Accumulate
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   _PropertyName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          _Value                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Weap                           (Parm, ZeroConstructor, IsPlainOldData)

void APwndPlayerState::CombatStats_Accumulate(const struct FName& _PropertyName, float _Value, class UObject* Weap)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.CombatStats_Accumulate");

	APwndPlayerState_CombatStats_Accumulate_Params params;
	params._PropertyName = _PropertyName;
	params._Value = _Value;
	params.Weap = Weap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndPlayerState.AwardRatingValue
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeRatingType>      Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            inRating                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          inMod                          (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 RatingInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPwndStuntSequence*      Stunt                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StuntType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceReplication              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndPlayerState::AwardRatingValue(TEnumAsByte<EeRatingType> Type, int inRating, float inMod, class UObject* RatingInstigator, class UObject* Other, class UPwndStuntSequence* Stunt, const struct FName& StuntType, bool bForceReplication)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.AwardRatingValue");

	APwndPlayerState_AwardRatingValue_Params params;
	params.Type = Type;
	params.inRating = inRating;
	params.inMod = inMod;
	params.RatingInstigator = RatingInstigator;
	params.Other = Other;
	params.Stunt = Stunt;
	params.StuntType = StuntType;
	params.bForceReplication = bForceReplication;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPlayerState.AwardRank
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndPlayerState::AwardRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPlayerState.AwardRank");

	APwndPlayerState_AwardRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectileGUTS.OnTuneProjectile
// (Event, Protected, BlueprintEvent)

void APwndProjectileGUTS::OnTuneProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.OnTuneProjectile");

	APwndProjectileGUTS_OnTuneProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectileGUTS.OnPostTuneProjectile
// (Event, Protected, BlueprintEvent)

void APwndProjectileGUTS::OnPostTuneProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.OnPostTuneProjectile");

	APwndProjectileGUTS_OnPostTuneProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonSticky
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonStickyAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonSticky(const struct FPwndProjectileRepNonStickyAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonSticky");

	APwndProjectileGUTS_ModifyRepNonSticky_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonSpeed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonSpeedAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonSpeed(const struct FPwndProjectileRepNonSpeedAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonSpeed");

	APwndProjectileGUTS_ModifyRepNonSpeed_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonSpawnProj
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonSpawnProjAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonSpawnProj(const struct FPwndProjectileRepNonSpawnProjAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonSpawnProj");

	APwndProjectileGUTS_ModifyRepNonSpawnProj_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonRange
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonRangeAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonRange(const struct FPwndProjectileRepNonRangeAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonRange");

	APwndProjectileGUTS_ModifyRepNonRange_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonHealRing
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileHealRingAttribute Attr                           (Parm)
// int                            Ring                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonHealRing(const struct FPwndProjectileHealRingAttribute& Attr, int Ring, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonHealRing");

	APwndProjectileGUTS_ModifyRepNonHealRing_Params params;
	params.Attr = Attr;
	params.Ring = Ring;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonGuidance
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonGuidanceAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonGuidance(const struct FPwndProjectileRepNonGuidanceAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonGuidance");

	APwndProjectileGUTS_ModifyRepNonGuidance_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonDirectHitHeal
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndHealEventAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonDirectHitHeal(const struct FPwndHealEventAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonDirectHitHeal");

	APwndProjectileGUTS_ModifyRepNonDirectHitHeal_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonDirectHitDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndDamageEventAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonDirectHitDamage(const struct FPwndDamageEventAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonDirectHitDamage");

	APwndProjectileGUTS_ModifyRepNonDirectHitDamage_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonDamageRing
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileDamageRingAttribute Attr                           (Parm)
// int                            Ring                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonDamageRing(const struct FPwndProjectileDamageRingAttribute& Attr, int Ring, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonDamageRing");

	APwndProjectileGUTS_ModifyRepNonDamageRing_Params params;
	params.Attr = Attr;
	params.Ring = Ring;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonCollision
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonCollisionAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonCollision(const struct FPwndProjectileRepNonCollisionAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonCollision");

	APwndProjectileGUTS_ModifyRepNonCollision_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonChargeAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonCharge(const struct FPwndProjectileRepNonChargeAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonCharge");

	APwndProjectileGUTS_ModifyRepNonCharge_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonBounce
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonBounceAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonBounce(const struct FPwndProjectileRepNonBounceAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonBounce");

	APwndProjectileGUTS_ModifyRepNonBounce_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepNonArming
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepNonArmingAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepNonArming(const struct FPwndProjectileRepNonArmingAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepNonArming");

	APwndProjectileGUTS_ModifyRepNonArming_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepAllSticky
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepAllStickyAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepAllSticky(const struct FPwndProjectileRepAllStickyAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepAllSticky");

	APwndProjectileGUTS_ModifyRepAllSticky_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepAllSpeed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepAllSpeedAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepAllSpeed(const struct FPwndProjectileRepAllSpeedAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepAllSpeed");

	APwndProjectileGUTS_ModifyRepAllSpeed_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepAllGuidance
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepAllGuidanceAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepAllGuidance(const struct FPwndProjectileRepAllGuidanceAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepAllGuidance");

	APwndProjectileGUTS_ModifyRepAllGuidance_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepAllFlightPath
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepAllFlightPathAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepAllFlightPath(const struct FPwndProjectileRepAllFlightPathAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepAllFlightPath");

	APwndProjectileGUTS_ModifyRepAllFlightPath_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepAllCollision
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepAllCollisionAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepAllCollision(const struct FPwndProjectileRepAllCollisionAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepAllCollision");

	APwndProjectileGUTS_ModifyRepAllCollision_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepAllBounce
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepAllBounceAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepAllBounce(const struct FPwndProjectileRepAllBounceAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepAllBounce");

	APwndProjectileGUTS_ModifyRepAllBounce_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.ModifyRepAllArming
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndProjectileRepAllArmingAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndProjectileGUTS*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectileGUTS* APwndProjectileGUTS::ModifyRepAllArming(const struct FPwndProjectileRepAllArmingAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.ModifyRepAllArming");

	APwndProjectileGUTS_ModifyRepAllArming_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileSticky
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonSticky ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonSticky APwndProjectileGUTS::K2ReadRepNoneProjectileSticky()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileSticky");

	APwndProjectileGUTS_K2ReadRepNoneProjectileSticky_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileSpeed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonSpeed ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonSpeed APwndProjectileGUTS::K2ReadRepNoneProjectileSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileSpeed");

	APwndProjectileGUTS_K2ReadRepNoneProjectileSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileSpawnProj
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonSpawnProj ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonSpawnProj APwndProjectileGUTS::K2ReadRepNoneProjectileSpawnProj()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileSpawnProj");

	APwndProjectileGUTS_K2ReadRepNoneProjectileSpawnProj_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileRange
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonRange ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonRange APwndProjectileGUTS::K2ReadRepNoneProjectileRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileRange");

	APwndProjectileGUTS_K2ReadRepNoneProjectileRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileGuidance
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonGuidance ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonGuidance APwndProjectileGUTS::K2ReadRepNoneProjectileGuidance()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileGuidance");

	APwndProjectileGUTS_K2ReadRepNoneProjectileGuidance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileCollision
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonCollision ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonCollision APwndProjectileGUTS::K2ReadRepNoneProjectileCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileCollision");

	APwndProjectileGUTS_K2ReadRepNoneProjectileCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonCharge ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonCharge APwndProjectileGUTS::K2ReadRepNoneProjectileCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileCharge");

	APwndProjectileGUTS_K2ReadRepNoneProjectileCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileBounce
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonBounce ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonBounce APwndProjectileGUTS::K2ReadRepNoneProjectileBounce()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileBounce");

	APwndProjectileGUTS_K2ReadRepNoneProjectileBounce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileArming
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepNonArming ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepNonArming APwndProjectileGUTS::K2ReadRepNoneProjectileArming()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepNoneProjectileArming");

	APwndProjectileGUTS_K2ReadRepNoneProjectileArming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileSticky
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepAllSticky ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepAllSticky APwndProjectileGUTS::K2ReadRepAllProjectileSticky()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileSticky");

	APwndProjectileGUTS_K2ReadRepAllProjectileSticky_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepAllSpeed ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepAllSpeed APwndProjectileGUTS::K2ReadRepAllProjectileSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileSpeed");

	APwndProjectileGUTS_K2ReadRepAllProjectileSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileGuidance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepAllGuidance ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepAllGuidance APwndProjectileGUTS::K2ReadRepAllProjectileGuidance()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileGuidance");

	APwndProjectileGUTS_K2ReadRepAllProjectileGuidance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileFlightPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepAllFlightPath ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepAllFlightPath APwndProjectileGUTS::K2ReadRepAllProjectileFlightPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileFlightPath");

	APwndProjectileGUTS_K2ReadRepAllProjectileFlightPath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileCollision
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepAllCollision ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepAllCollision APwndProjectileGUTS::K2ReadRepAllProjectileCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileCollision");

	APwndProjectileGUTS_K2ReadRepAllProjectileCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileBounce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepAllBounce ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepAllBounce APwndProjectileGUTS::K2ReadRepAllProjectileBounce()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileBounce");

	APwndProjectileGUTS_K2ReadRepAllProjectileBounce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileArming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndProjectileRepAllArming ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndProjectileRepAllArming APwndProjectileGUTS::K2ReadRepAllProjectileArming()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileGUTS.K2ReadRepAllProjectileArming");

	APwndProjectileGUTS_K2ReadRepAllProjectileArming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectile.OnTeamUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::OnTeamUpdated(unsigned char NewTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnTeamUpdated");

	APwndProjectile_OnTeamUpdated_Params params;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnStuck
// (Event, Public, BlueprintEvent)

void APwndProjectile::OnStuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnStuck");

	APwndProjectile_OnStuck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_TeamNum
// (Native, Protected)
// Parameters:
// unsigned char                  OldTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::OnRep_TeamNum(unsigned char OldTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_TeamNum");

	APwndProjectile_OnRep_TeamNum_Params params;
	params.OldTeamNum = OldTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_StuckInfo
// (Native, Protected)

void APwndProjectile::OnRep_StuckInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_StuckInfo");

	APwndProjectile_OnRep_StuckInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_SeekingTargetLoc
// (Native, Protected)

void APwndProjectile::OnRep_SeekingTargetLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_SeekingTargetLoc");

	APwndProjectile_OnRep_SeekingTargetLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_Seeking
// (Native, Protected)

void APwndProjectile::OnRep_Seeking()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_Seeking");

	APwndProjectile_OnRep_Seeking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_Health
// (Native, Protected)
// Parameters:
// int                            OldHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::OnRep_Health(int OldHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_Health");

	APwndProjectile_OnRep_Health_Params params;
	params.OldHealth = OldHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_bReplicatedDetonated
// (Native, Protected)
// Parameters:
// bool                           bOldReplicatedDetonated        (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::OnRep_bReplicatedDetonated(bool bOldReplicatedDetonated)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_bReplicatedDetonated");

	APwndProjectile_OnRep_bReplicatedDetonated_Params params;
	params.bOldReplicatedDetonated = bOldReplicatedDetonated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_bArmed
// (Native, Protected)

void APwndProjectile::OnRep_bArmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_bArmed");

	APwndProjectile_OnRep_bArmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnRep_ArmTimeStamp
// (Native, Protected)

void APwndProjectile::OnRep_ArmTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnRep_ArmTimeStamp");

	APwndProjectile_OnRep_ArmTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnProjectileHidden
// (Event, Public, BlueprintEvent)

void APwndProjectile::OnProjectileHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnProjectileHidden");

	APwndProjectile_OnProjectileHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnEndOverlap
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnEndOverlap");

	APwndProjectile_OnEndOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnDetonate
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bDestroy                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::OnDetonate(const struct FVector& Location, const struct FHitResult& Hit, bool bDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnDetonate");

	APwndProjectile_OnDetonate_Params params;
	params.Location = Location;
	params.Hit = Hit;
	params.bDestroy = bDestroy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnBounce
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndProjectile::OnBounce(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnBounce");

	APwndProjectile_OnBounce_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnBeginOverlap
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndProjectile::OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnBeginOverlap");

	APwndProjectile_OnBeginOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnBeginArming
// (Event, Public, BlueprintEvent)

void APwndProjectile::OnBeginArming()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnBeginArming");

	APwndProjectile_OnBeginArming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.OnArmedUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsArmed                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::OnArmedUpdated(bool bIsArmed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.OnArmedUpdated");

	APwndProjectile_OnArmedUpdated_Params params;
	params.bIsArmed = bIsArmed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.HideProjectile
// (Native, Public, BlueprintCallable)

void APwndProjectile::HideProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.HideProjectile");

	APwndProjectile_HideProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndProjectile::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.GetServerTimeStamp");

	APwndProjectile_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectile.ForceDetonate
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bDestroy                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndProjectile::ForceDetonate(bool bDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.ForceDetonate");

	APwndProjectile_ForceDetonate_Params params;
	params.bDestroy = bDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndProjectile.FireProjectile
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  ProjectileClass                (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              SpawnTransform                 (Parm, IsPlainOldData)
// class UObject*                 FiringObject                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverrideChargePct              (Parm, ZeroConstructor, IsPlainOldData)
// int                            OverrideTeamNum                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OverrideVelocity               (Parm, IsPlainOldData)
// class APwndProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectile* APwndProjectile::STATIC_FireProjectile(class UClass* ProjectileClass, const struct FTransform& SpawnTransform, class UObject* FiringObject, float OverrideChargePct, int OverrideTeamNum, const struct FVector& OverrideVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectile.FireProjectile");

	APwndProjectile_FireProjectile_Params params;
	params.ProjectileClass = ProjectileClass;
	params.SpawnTransform = SpawnTransform;
	params.FiringObject = FiringObject;
	params.OverrideChargePct = OverrideChargePct;
	params.OverrideTeamNum = OverrideTeamNum;
	params.OverrideVelocity = OverrideVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndProjectileMovementComponent.GetPwndProjectileOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectile* UPwndProjectileMovementComponent::GetPwndProjectileOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndProjectileMovementComponent.GetPwndProjectileOwner");

	UPwndProjectileMovementComponent_GetPwndProjectileOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndPwnStampDecal.OnRep_DecalInfo
// (Native, Protected)
// Parameters:
// struct FDecalCreationInfo      OldDecalInfo                   (Parm)

void APwndPwnStampDecal::OnRep_DecalInfo(const struct FDecalCreationInfo& OldDecalInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndPwnStampDecal.OnRep_DecalInfo");

	APwndPwnStampDecal_OnRep_DecalInfo_Params params;
	params.OldDecalInfo = OldDecalInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRichTextBlock.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   InText                         (Parm)

void UPwndRichTextBlock::SetText(const struct FText& InText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRichTextBlock.SetText");

	UPwndRichTextBlock_SetText_Params params;
	params.InText = InText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.UpdateRope
// (Final, Native, Public, BlueprintCallable)

void APwndRopeActor::UpdateRope()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.UpdateRope");

	APwndRopeActor_UpdateRope_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.SetStraightEx
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Target                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndRopeActor::SetStraightEx(const struct FVector& Start, const struct FVector& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.SetStraightEx");

	APwndRopeActor_SetStraightEx_Params params;
	params.Start = Start;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.SetStraight
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Target                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndRopeActor::SetStraight(const struct FVector& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.SetStraight");

	APwndRopeActor_SetStraight_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.SetSineWaveEx
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Target                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Cycles                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndRopeActor::SetSineWaveEx(const struct FVector& Start, const struct FVector& Target, float Height, float Width, float Cycles)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.SetSineWaveEx");

	APwndRopeActor_SetSineWaveEx_Params params;
	params.Start = Start;
	params.Target = Target;
	params.Height = Height;
	params.Width = Width;
	params.Cycles = Cycles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.SetSineWave
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Target                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Cycles                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndRopeActor::SetSineWave(const struct FVector& Target, float Height, float Width, float Cycles)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.SetSineWave");

	APwndRopeActor_SetSineWave_Params params;
	params.Target = Target;
	params.Height = Height;
	params.Width = Width;
	params.Cycles = Cycles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.SetPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Point                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndRopeActor::SetPoint(int Index, const struct FVector& Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.SetPoint");

	APwndRopeActor_SetPoint_Params params;
	params.Index = Index;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.SetMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ElementIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      Material                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndRopeActor::SetMaterial(int ElementIndex, class UMaterialInterface* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.SetMaterial");

	APwndRopeActor_SetMaterial_Params params;
	params.ElementIndex = ElementIndex;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndRopeActor.GetPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector APwndRopeActor::GetPoint(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndRopeActor.GetPoint");

	APwndRopeActor_GetPoint_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.Retune
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndShieldGUTS::Retune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.Retune");

	APwndShieldGUTS_Retune_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldGUTS.OnRetune
// (Event, Protected, BlueprintEvent)

void APwndShieldGUTS::OnRetune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.OnRetune");

	APwndShieldGUTS_OnRetune_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldGUTS.ModifyRepNonPanel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepNonPanelAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepNonPanel(const struct FPwndShieldRepNonPanelAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepNonPanel");

	APwndShieldGUTS_ModifyRepNonPanel_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepNonHPS
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepNonHPSAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepNonHPS(const struct FPwndShieldRepNonHPSAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepNonHPS");

	APwndShieldGUTS_ModifyRepNonHPS_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepNonDPS
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepNonDPSAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepNonDPS(const struct FPwndShieldRepNonDPSAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepNonDPS");

	APwndShieldGUTS_ModifyRepNonDPS_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepNonDamageRamp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepNonDamageRampAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepNonDamageRamp(const struct FPwndShieldRepNonDamageRampAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepNonDamageRamp");

	APwndShieldGUTS_ModifyRepNonDamageRamp_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepNonCollisionEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepNonCollisionEnemyAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepNonCollisionEnemy(const struct FPwndShieldRepNonCollisionEnemyAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepNonCollisionEnemy");

	APwndShieldGUTS_ModifyRepNonCollisionEnemy_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepNonCollisionAlly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepNonCollisionAllyAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepNonCollisionAlly(const struct FPwndShieldRepNonCollisionAllyAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepNonCollisionAlly");

	APwndShieldGUTS_ModifyRepNonCollisionAlly_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepNonBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepNonBaseAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepNonBase(const struct FPwndShieldRepNonBaseAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepNonBase");

	APwndShieldGUTS_ModifyRepNonBase_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepAllCollisionEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepAllCollisionEnemyAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepAllCollisionEnemy(const struct FPwndShieldRepAllCollisionEnemyAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepAllCollisionEnemy");

	APwndShieldGUTS_ModifyRepAllCollisionEnemy_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.ModifyRepAllCollisionAlly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndShieldRepAllCollisionAllyAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndShieldGUTS*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndShieldGUTS* APwndShieldGUTS::ModifyRepAllCollisionAlly(const struct FPwndShieldRepAllCollisionAllyAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.ModifyRepAllCollisionAlly");

	APwndShieldGUTS_ModifyRepAllCollisionAlly_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldPanel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepNonPanel  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepNonPanel APwndShieldGUTS::K2ReadRepNoneShieldPanel()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldPanel");

	APwndShieldGUTS_K2ReadRepNoneShieldPanel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldHPS
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepNonHPS    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepNonHPS APwndShieldGUTS::K2ReadRepNoneShieldHPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldHPS");

	APwndShieldGUTS_K2ReadRepNoneShieldHPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldDPS
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepNonDPS    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepNonDPS APwndShieldGUTS::K2ReadRepNoneShieldDPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldDPS");

	APwndShieldGUTS_K2ReadRepNoneShieldDPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldDamageRamp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepNonDamageRamp ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepNonDamageRamp APwndShieldGUTS::K2ReadRepNoneShieldDamageRamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldDamageRamp");

	APwndShieldGUTS_K2ReadRepNoneShieldDamageRamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldCollisionEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepNonCollisionEnemy ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepNonCollisionEnemy APwndShieldGUTS::K2ReadRepNoneShieldCollisionEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldCollisionEnemy");

	APwndShieldGUTS_K2ReadRepNoneShieldCollisionEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldCollisionAlly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepNonCollisionAlly ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepNonCollisionAlly APwndShieldGUTS::K2ReadRepNoneShieldCollisionAlly()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldCollisionAlly");

	APwndShieldGUTS_K2ReadRepNoneShieldCollisionAlly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepNonBase   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepNonBase APwndShieldGUTS::K2ReadRepNoneShieldBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepNoneShieldBase");

	APwndShieldGUTS_K2ReadRepNoneShieldBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepAllShieldCollisionEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepAllCollisionEnemy ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepAllCollisionEnemy APwndShieldGUTS::K2ReadRepAllShieldCollisionEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepAllShieldCollisionEnemy");

	APwndShieldGUTS_K2ReadRepAllShieldCollisionEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldGUTS.K2ReadRepAllShieldCollisionAlly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndShieldRepAllCollisionAlly ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndShieldRepAllCollisionAlly APwndShieldGUTS::K2ReadRepAllShieldCollisionAlly()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldGUTS.K2ReadRepAllShieldCollisionAlly");

	APwndShieldGUTS_K2ReadRepAllShieldCollisionAlly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShield.ShutdownShield
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Damager                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ScaledDamageAmount             (Parm, ZeroConstructor, IsPlainOldData)
// int                            RawDamageAmount                (Parm, ZeroConstructor, IsPlainOldData)

void APwndShield::ShutdownShield(class AController* Damager, class UClass* DamageType, int ScaledDamageAmount, int RawDamageAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.ShutdownShield");

	APwndShield_ShutdownShield_Params params;
	params.Damager = Damager;
	params.DamageType = DamageType;
	params.ScaledDamageAmount = ScaledDamageAmount;
	params.RawDamageAmount = RawDamageAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.SetShieldActive
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           _bActive                       (Parm, ZeroConstructor, IsPlainOldData)

void APwndShield::SetShieldActive(bool _bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.SetShieldActive");

	APwndShield_SetShieldActive_Params params;
	params._bActive = _bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.Retune
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndShield::Retune()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.Retune");

	APwndShield_Retune_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.OnTeamUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndShield::OnTeamUpdated(unsigned char NewTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.OnTeamUpdated");

	APwndShield_OnTeamUpdated_Params params;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.OnRep_TeamNum
// (Native, Protected)
// Parameters:
// unsigned char                  OldTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndShield::OnRep_TeamNum(unsigned char OldTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.OnRep_TeamNum");

	APwndShield_OnRep_TeamNum_Params params;
	params.OldTeamNum = OldTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.OnRep_Active
// (Native, Protected)
// Parameters:
// bool                           OldActive                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndShield::OnRep_Active(bool OldActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.OnRep_Active");

	APwndShield_OnRep_Active_Params params;
	params.OldActive = OldActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.OnEndOverlap
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void APwndShield::OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.OnEndOverlap");

	APwndShield_OnEndOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.OnBeginOverlap
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APwndShield::OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.OnBeginOverlap");

	APwndShield_OnBeginOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShield.InitShield
// (BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           _bFromProjectile               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 _SpawnNormal                   (Parm, IsPlainOldData)
// struct FVector                 _ReverseProjDir                (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndShield::InitShield(bool _bFromProjectile, const struct FVector& _SpawnNormal, const struct FVector& _ReverseProjDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.InitShield");

	APwndShield_InitShield_Params params;
	params._bFromProjectile = _bFromProjectile;
	params._SpawnNormal = _SpawnNormal;
	params._ReverseProjDir = _ReverseProjDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShield.GetShieldTimerPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndShield::GetShieldTimerPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.GetShieldTimerPct");

	APwndShield_GetShieldTimerPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShield.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndShield::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.GetServerTimeStamp");

	APwndShield_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShield.GetBestSpawnInfo
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 InLocation                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                InRotation                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 OutLocation                    (Parm, OutParm, IsPlainOldData)
// struct FRotator                OutRotation                    (Parm, OutParm, IsPlainOldData)

void APwndShield::GetBestSpawnInfo(const struct FVector& InLocation, const struct FRotator& InRotation, struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShield.GetBestSpawnInfo");

	APwndShield_GetBestSpawnInfo_Params params;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
}


// Function PWND.PwndShieldPanelComponent.SetHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void UPwndShieldPanelComponent::SetHealth(int NewHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.SetHealth");

	UPwndShieldPanelComponent_SetHealth_Params params;
	params.NewHealth = NewHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnRep_LastDamageTimeStamp
// (Native, Protected)

void UPwndShieldPanelComponent::OnRep_LastDamageTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnRep_LastDamageTimeStamp");

	UPwndShieldPanelComponent_OnRep_LastDamageTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnRep_Health
// (Native, Protected)
// Parameters:
// int                            OldHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void UPwndShieldPanelComponent::OnRep_Health(int OldHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnRep_Health");

	UPwndShieldPanelComponent_OnRep_Health_Params params;
	params.OldHealth = OldHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnRep_bPanelDestroyed
// (Native, Protected)
// Parameters:
// bool                           OldbPanelDestroyed             (Parm, ZeroConstructor, IsPlainOldData)

void UPwndShieldPanelComponent::OnRep_bPanelDestroyed(bool OldbPanelDestroyed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnRep_bPanelDestroyed");

	UPwndShieldPanelComponent_OnRep_bPanelDestroyed_Params params;
	params.OldbPanelDestroyed = OldbPanelDestroyed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnRep_bPanelActive
// (Native, Protected)
// Parameters:
// bool                           OldbPanelActive                (Parm, ZeroConstructor, IsPlainOldData)

void UPwndShieldPanelComponent::OnRep_bPanelActive(bool OldbPanelActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnRep_bPanelActive");

	UPwndShieldPanelComponent_OnRep_bPanelActive_Params params;
	params.OldbPanelActive = OldbPanelActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnPanelSetActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void UPwndShieldPanelComponent::OnPanelSetActive(bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnPanelSetActive");

	UPwndShieldPanelComponent_OnPanelSetActive_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnPanelHealthChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            OldHealth                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrentHealthPct               (Parm, ZeroConstructor, IsPlainOldData)

void UPwndShieldPanelComponent::OnPanelHealthChanged(int OldHealth, int NewHealth, float CurrentHealthPct)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnPanelHealthChanged");

	UPwndShieldPanelComponent_OnPanelHealthChanged_Params params;
	params.OldHealth = OldHealth;
	params.NewHealth = NewHealth;
	params.CurrentHealthPct = CurrentHealthPct;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnPanelDestroyed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDestroyed                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndShieldPanelComponent::OnPanelDestroyed(bool bDestroyed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnPanelDestroyed");

	UPwndShieldPanelComponent_OnPanelDestroyed_Params params;
	params.bDestroyed = bDestroyed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.OnPanelDamaged
// (Event, Public, BlueprintEvent)

void UPwndShieldPanelComponent::OnPanelDamaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.OnPanelDamaged");

	UPwndShieldPanelComponent_OnPanelDamaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndShieldPanelComponent.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndShieldPanelComponent::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.GetMaxHealth");

	UPwndShieldPanelComponent_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndShieldPanelComponent.GetHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndShieldPanelComponent::GetHealthPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndShieldPanelComponent.GetHealthPct");

	UPwndShieldPanelComponent_GetHealthPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndSkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight_NotFinal
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InBoneName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          PhysicsBlendWeight             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSkipCustomPhysicsType         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeSelf                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndSkeletalMeshComponent::SetAllBodiesBelowPhysicsBlendWeight_NotFinal(const struct FName& InBoneName, float PhysicsBlendWeight, bool bSkipCustomPhysicsType, bool bIncludeSelf)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndSkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight_NotFinal");

	UPwndSkeletalMeshComponent_SetAllBodiesBelowPhysicsBlendWeight_NotFinal_Params params;
	params.InBoneName = InBoneName;
	params.PhysicsBlendWeight = PhysicsBlendWeight;
	params.bSkipCustomPhysicsType = bSkipCustomPhysicsType;
	params.bIncludeSelf = bIncludeSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndSkeletalMeshComponent.K2IsPhysicsStateCreated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndSkeletalMeshComponent::K2IsPhysicsStateCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndSkeletalMeshComponent.K2IsPhysicsStateCreated");

	UPwndSkeletalMeshComponent_K2IsPhysicsStateCreated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndSpectatorPawn.SetSpectateCameraMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESpectateCameraMode            NewMode                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndSpectatorPawn::SetSpectateCameraMode(ESpectateCameraMode NewMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndSpectatorPawn.SetSpectateCameraMode");

	APwndSpectatorPawn_SetSpectateCameraMode_Params params;
	params.NewMode = NewMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndSpectatorPawn.GetSpectateCameraMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESpectateCameraMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESpectateCameraMode APwndSpectatorPawn::GetSpectateCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndSpectatorPawn.GetSpectateCameraMode");

	APwndSpectatorPawn_GetSpectateCameraMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.ValidateStats
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// class APwndGameMode*           GameMode                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 OutErrorMessage                (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndStatRecorder::ValidateStats(class APwndGameMode* GameMode, struct FString* OutErrorMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.ValidateStats");

	APwndStatRecorder_ValidateStats_Params params;
	params.GameMode = GameMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutErrorMessage != nullptr)
		*OutErrorMessage = params.OutErrorMessage;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.SetSingle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::SetSingle(const struct FName& StatName, float Value, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.SetSingle");

	APwndStatRecorder_SetSingle_Params params;
	params.StatName = StatName;
	params.Value = Value;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.SendTelemetryEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)

void APwndStatRecorder::STATIC_SendTelemetryEvent(struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.SendTelemetryEvent");

	APwndStatRecorder_SendTelemetryEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;
}


// Function PWND.PwndStatRecorder.SendTelemetry
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndStatRecorder::SendTelemetry()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.SendTelemetry");

	APwndStatRecorder_SendTelemetry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.SendSimpleTelemetryEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Type                           (Parm, ZeroConstructor)

void APwndStatRecorder::STATIC_SendSimpleTelemetryEvent(const struct FString& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.SendSimpleTelemetryEvent");

	APwndStatRecorder_SendSimpleTelemetryEvent_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.ResetStats
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndStatRecorder::ResetStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.ResetStats");

	APwndStatRecorder_ResetStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.ResetSingle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::ResetSingle(const struct FName& StatName, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.ResetSingle");

	APwndStatRecorder_ResetSingle_Params params;
	params.StatName = StatName;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.ResetAccumulator
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::ResetAccumulator(const struct FName& StatName, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.ResetAccumulator");

	APwndStatRecorder_ResetAccumulator_Params params;
	params.StatName = StatName;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.MinSingle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::MinSingle(const struct FName& StatName, float Value, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.MinSingle");

	APwndStatRecorder_MinSingle_Params params;
	params.StatName = StatName;
	params.Value = Value;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.MaxSingle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::MaxSingle(const struct FName& StatName, float Value, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.MaxSingle");

	APwndStatRecorder_MaxSingle_Params params;
	params.StatName = StatName;
	params.Value = Value;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.GetSingleInt
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRound                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndStatRecorder::GetSingleInt(const struct FName& StatName, bool bRound)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetSingleInt");

	APwndStatRecorder_GetSingleInt_Params params;
	params.StatName = StatName;
	params.bRound = bRound;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.GetSingleFloat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndStatRecorder::GetSingleFloat(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetSingleFloat");

	APwndStatRecorder_GetSingleFloat_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.GetAccumulatorTotal
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndStatRecorder::GetAccumulatorTotal(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetAccumulatorTotal");

	APwndStatRecorder_GetAccumulatorTotal_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.GetAccumulatorMin
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndStatRecorder::GetAccumulatorMin(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetAccumulatorMin");

	APwndStatRecorder_GetAccumulatorMin_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.GetAccumulatorMax
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndStatRecorder::GetAccumulatorMax(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetAccumulatorMax");

	APwndStatRecorder_GetAccumulatorMax_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.GetAccumulatorCurrent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndStatRecorder::GetAccumulatorCurrent(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetAccumulatorCurrent");

	APwndStatRecorder_GetAccumulatorCurrent_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.GetAccumulatorCount
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndStatRecorder::GetAccumulatorCount(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetAccumulatorCount");

	APwndStatRecorder_GetAccumulatorCount_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.GetAccumulatorAverage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndStatRecorder::GetAccumulatorAverage(const struct FName& StatName)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.GetAccumulatorAverage");

	APwndStatRecorder_GetAccumulatorAverage_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.CreateTelemetryEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Type                           (Parm, ZeroConstructor)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_CreateTelemetryEvent(const struct FString& Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.CreateTelemetryEvent");

	APwndStatRecorder_CreateTelemetryEvent_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryVector
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Name                           (Parm, ZeroConstructor)
// struct FVector                 Value                          (Parm, IsPlainOldData)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryVector(const struct FString& Name, const struct FVector& Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryVector");

	APwndStatRecorder_AddTelemetryVector_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryString
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Name                           (Parm, ZeroConstructor)
// struct FString                 Value                          (Parm, ZeroConstructor)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryString(const struct FString& Name, const struct FString& Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryString");

	APwndStatRecorder_AddTelemetryString_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryRotator
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Name                           (Parm, ZeroConstructor)
// struct FRotator                Value                          (Parm, IsPlainOldData)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryRotator(const struct FString& Name, const struct FRotator& Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryRotator");

	APwndStatRecorder_AddTelemetryRotator_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryLoadoutInst
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Prefix                         (Parm, ZeroConstructor)
// struct FPwndLoadoutInst        Value                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryLoadoutInst(const struct FString& Prefix, const struct FPwndLoadoutInst& Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryLoadoutInst");

	APwndStatRecorder_AddTelemetryLoadoutInst_Params params;
	params.Prefix = Prefix;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryLoadout
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Prefix                         (Parm, ZeroConstructor)
// struct FPwndLoadout            Value                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryLoadout(const struct FString& Prefix, const struct FPwndLoadout& Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryLoadout");

	APwndStatRecorder_AddTelemetryLoadout_Params params;
	params.Prefix = Prefix;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryInt
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Name                           (Parm, ZeroConstructor)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryInt(const struct FString& Name, int Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryInt");

	APwndStatRecorder_AddTelemetryInt_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryGuid
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Name                           (Parm, ZeroConstructor)
// struct FGuid                   Value                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryGuid(const struct FString& Name, const struct FGuid& Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryGuid");

	APwndStatRecorder_AddTelemetryGuid_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryFloat
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Name                           (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryFloat(const struct FString& Name, float Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryFloat");

	APwndStatRecorder_AddTelemetryFloat_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddTelemetryBool
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPwndTelemetryEvent     Event                          (Parm, OutParm, ReferenceParm)
// struct FString                 Name                           (Parm, ZeroConstructor)
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FPwndTelemetryEvent     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTelemetryEvent APwndStatRecorder::STATIC_AddTelemetryBool(const struct FString& Name, bool Value, struct FPwndTelemetryEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddTelemetryBool");

	APwndStatRecorder_AddTelemetryBool_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

	return params.ReturnValue;
}


// Function PWND.PwndStatRecorder.AddSingle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::AddSingle(const struct FName& StatName, float Value, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AddSingle");

	APwndStatRecorder_AddSingle_Params params;
	params.StatName = StatName;
	params.Value = Value;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.AccumulateIncrementalFinish
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::AccumulateIncrementalFinish(const struct FName& StatName, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AccumulateIncrementalFinish");

	APwndStatRecorder_AccumulateIncrementalFinish_Params params;
	params.StatName = StatName;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.AccumulateIncremental
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::AccumulateIncremental(const struct FName& StatName, float Value, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.AccumulateIncremental");

	APwndStatRecorder_AccumulateIncremental_Params params;
	params.StatName = StatName;
	params.Value = Value;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStatRecorder.Accumulate
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCreate                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndStatRecorder::Accumulate(const struct FName& StatName, float Value, bool bCreate)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStatRecorder.Accumulate");

	APwndStatRecorder_Accumulate_Params params;
	params.StatName = StatName;
	params.Value = Value;
	params.bCreate = bCreate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStuntManager.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndStuntManager::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntManager.GetServerTimeStamp");

	APwndStuntManager_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.OnTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UPwndStuntSequence::OnTick(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.OnTick");

	UPwndStuntSequence_OnTick_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStuntSequence.OnPostEventTrigger
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Trigger                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Count                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UPwndStuntSequence::OnPostEventTrigger(TEnumAsByte<EeEventTrigger> Trigger, float Count, TArray<class UObject*> Others)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.OnPostEventTrigger");

	UPwndStuntSequence_OnPostEventTrigger_Params params;
	params.Trigger = Trigger;
	params.Count = Count;
	params.Others = Others;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndStuntSequence.IsSelf
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndStuntSequence::IsSelf(class UObject* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.IsSelf");

	UPwndStuntSequence_IsSelf_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.IsOwnedAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndStuntSequence::IsOwnedAI(class UObject* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.IsOwnedAI");

	UPwndStuntSequence_IsOwnedAI_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.IsEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndStuntSequence::IsEnemy(class UObject* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.IsEnemy");

	UPwndStuntSequence_IsEnemy_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.IsAlly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndStuntSequence::IsAlly(class UObject* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.IsAlly");

	UPwndStuntSequence_IsAlly_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetStuntAwardText
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            Rating                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 RatingInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StuntType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndStuntSequence::GetStuntAwardText(int Rating, class UObject* RatingInstigator, class UObject* Other, const struct FName& StuntType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetStuntAwardText");

	UPwndStuntSequence_GetStuntAwardText_Params params;
	params.Rating = Rating;
	params.RatingInstigator = RatingInstigator;
	params.Other = Other;
	params.StuntType = StuntType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndStuntSequence::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetServerTimeStamp");

	UPwndStuntSequence_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetPwndPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndPlayerState*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndPlayerState* UPwndStuntSequence::GetPwndPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetPwndPlayerState");

	UPwndStuntSequence_GetPwndPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetPwndCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APwndCharacter*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndCharacter* UPwndStuntSequence::GetPwndCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetPwndCharacter");

	UPwndStuntSequence_GetPwndCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* UPwndStuntSequence::GetPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetPlayerState");

	UPwndStuntSequence_GetPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UPwndStuntSequence::GetPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetPawn");

	UPwndStuntSequence_GetPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* UPwndStuntSequence::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetController");

	UPwndStuntSequence_GetController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetAwardText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Rating                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 RatingInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StuntType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndStuntSequence::GetAwardText(int Rating, class UObject* RatingInstigator, class UObject* Other, const struct FName& StuntType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetAwardText");

	UPwndStuntSequence_GetAwardText_Params params;
	params.Rating = Rating;
	params.RatingInstigator = RatingInstigator;
	params.Other = Other;
	params.StuntType = StuntType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.GetAwardString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Rating                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 RatingInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StuntType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndStuntSequence::GetAwardString(int Rating, class UObject* RatingInstigator, class UObject* Other, const struct FName& StuntType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.GetAwardString");

	UPwndStuntSequence_GetAwardString_Params params;
	params.Rating = Rating;
	params.RatingInstigator = RatingInstigator;
	params.Other = Other;
	params.StuntType = StuntType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndStuntSequence.AwardRatingValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeRatingType>      Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            inRating                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          inMod                          (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 RatingInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StuntType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceReplication              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPostEvent                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndStuntSequence::AwardRatingValue(TEnumAsByte<EeRatingType> Type, int inRating, float inMod, class UObject* RatingInstigator, class UObject* Other, const struct FName& StuntType, bool bForceReplication, bool bPostEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndStuntSequence.AwardRatingValue");

	UPwndStuntSequence_AwardRatingValue_Params params;
	params.Type = Type;
	params.inRating = inRating;
	params.inMod = inMod;
	params.RatingInstigator = RatingInstigator;
	params.Other = Other;
	params.StuntType = StuntType;
	params.bForceReplication = bForceReplication;
	params.bPostEvent = bPostEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTargetDummy.SetTeamNum
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndTargetDummy::SetTeamNum(unsigned char NewTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTargetDummy.SetTeamNum");

	APwndTargetDummy_SetTeamNum_Params params;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTargetDummy.OnTeamUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndTargetDummy::OnTeamUpdated(unsigned char NewTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTargetDummy.OnTeamUpdated");

	APwndTargetDummy_OnTeamUpdated_Params params;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTargetDummy.OnRep_TeamNum
// (Native, Protected)
// Parameters:
// unsigned char                  OldTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void APwndTargetDummy::OnRep_TeamNum(unsigned char OldTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTargetDummy.OnRep_TeamNum");

	APwndTargetDummy_OnRep_TeamNum_Params params;
	params.OldTeamNum = OldTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTargetDummy.OnRep_Health
// (Native, Protected)
// Parameters:
// int                            OldHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndTargetDummy::OnRep_Health(int OldHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTargetDummy.OnRep_Health");

	APwndTargetDummy_OnRep_Health_Params params;
	params.OldHealth = OldHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTargetDummy.OnHealthUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            OldHealth                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void APwndTargetDummy::OnHealthUpdated(int OldHealth, int NewHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTargetDummy.OnHealthUpdated");

	APwndTargetDummy_OnHealthUpdated_Params params;
	params.OldHealth = OldHealth;
	params.NewHealth = NewHealth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTargetDummy.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndTargetDummy::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTargetDummy.GetServerTimeStamp");

	APwndTargetDummy_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTargetDummy.GetHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndTargetDummy::GetHealthPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTargetDummy.GetHealthPct");

	APwndTargetDummy_GetHealthPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTeamInfo.SetScore
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          inScore                        (Parm, ZeroConstructor, IsPlainOldData)

void APwndTeamInfo::SetScore(float inScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.SetScore");

	APwndTeamInfo_SetScore_Params params;
	params.inScore = inScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTeamInfo.RemoveMember
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndPlayerState*        Member                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndTeamInfo::RemoveMember(class APwndPlayerState* Member)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.RemoveMember");

	APwndTeamInfo_RemoveMember_Params params;
	params.Member = Member;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTeamInfo.RemoveAllMembers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APwndTeamInfo::RemoveAllMembers()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.RemoveAllMembers");

	APwndTeamInfo_RemoveAllMembers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTeamInfo.IsWinningTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APwndTeamInfo::IsWinningTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.IsWinningTeam");

	APwndTeamInfo_IsWinningTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTeamInfo.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bPlayersOnly                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConnectedOnly                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndTeamInfo::GetSize(bool bPlayersOnly, bool bConnectedOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.GetSize");

	APwndTeamInfo_GetSize_Params params;
	params.bPlayersOnly = bPlayersOnly;
	params.bConnectedOnly = bConnectedOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTeamInfo.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndTeamInfo::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.GetServerTimeStamp");

	APwndTeamInfo_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTeamInfo.GetMembers
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APwndPlayerState*> OutMembers                     (Parm, OutParm, ZeroConstructor)
// bool                           bPlayersOnly                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConnectedOnly                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APwndTeamInfo::GetMembers(bool bPlayersOnly, bool bConnectedOnly, TArray<class APwndPlayerState*>* OutMembers)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.GetMembers");

	APwndTeamInfo_GetMembers_Params params;
	params.bPlayersOnly = bPlayersOnly;
	params.bConnectedOnly = bConnectedOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMembers != nullptr)
		*OutMembers = params.OutMembers;

	return params.ReturnValue;
}


// Function PWND.PwndTeamInfo.GetMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            I                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPlayersOnly                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConnectedOnly                 (Parm, ZeroConstructor, IsPlainOldData)
// class APwndPlayerState*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndPlayerState* APwndTeamInfo::GetMember(int I, bool bPlayersOnly, bool bConnectedOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.GetMember");

	APwndTeamInfo_GetMember_Params params;
	params.I = I;
	params.bPlayersOnly = bPlayersOnly;
	params.bConnectedOnly = bConnectedOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTeamInfo.GetConnectedPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bPlayersOnly                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APwndTeamInfo::GetConnectedPct(bool bPlayersOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.GetConnectedPct");

	APwndTeamInfo_GetConnectedPct_Params params;
	params.bPlayersOnly = bPlayersOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTeamInfo.AddMember
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APwndPlayerState*        Member                         (Parm, ZeroConstructor, IsPlainOldData)

void APwndTeamInfo::AddMember(class APwndPlayerState* Member)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTeamInfo.AddMember");

	APwndTeamInfo_AddMember_Params params;
	params.Member = Member;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndTimeBubble.ModifyRepAllDilation
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FPwndTimeBubbleRepAllDilationAttribute Attr                           (Parm)
// float                          PreMul                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Add                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PostMul                        (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTimeBubble*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTimeBubble* APwndTimeBubble::ModifyRepAllDilation(const struct FPwndTimeBubbleRepAllDilationAttribute& Attr, float PreMul, float Add, float PostMul)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTimeBubble.ModifyRepAllDilation");

	APwndTimeBubble_ModifyRepAllDilation_Params params;
	params.Attr = Attr;
	params.PreMul = PreMul;
	params.Add = Add;
	params.PostMul = PostMul;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndTimeBubble.K2ReadRepAllTimeBubbleDilation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPwndTimeBubbleRepAllDilation ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPwndTimeBubbleRepAllDilation APwndTimeBubble::K2ReadRepAllTimeBubbleDilation()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndTimeBubble.K2ReadRepAllTimeBubbleDilation");

	APwndTimeBubble_K2ReadRepAllTimeBubbleDilation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.VRLerp
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 A                              (Parm, IsPlainOldData)
// struct FVector                 B                              (Parm, IsPlainOldData)
// float                          Interp                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Pivot                          (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_VRLerp(const struct FVector& A, const struct FVector& B, float Interp, const struct FVector& Pivot)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.VRLerp");

	UPwndUtil_VRLerp_Params params;
	params.A = A;
	params.B = B;
	params.Interp = Interp;
	params.Pivot = Pivot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ValidateClass
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  SearchClass                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ValidClasses                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UClass*>          InvalidClasses                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ValidateClass(class UClass* SearchClass, TArray<class UClass*> ValidClasses, TArray<class UClass*> InvalidClasses)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ValidateClass");

	UPwndUtil_ValidateClass_Params params;
	params.SearchClass = SearchClass;
	params.ValidClasses = ValidClasses;
	params.InvalidClasses = InvalidClasses;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.TickSpringFloat
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSpringFloat            Spring                         (Parm, OutParm, ReferenceParm)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_TickSpringFloat(float DeltaSeconds, struct FSpringFloat* Spring)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.TickSpringFloat");

	UPwndUtil_TickSpringFloat_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spring != nullptr)
		*Spring = params.Spring;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.TickFloatOscillator
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FFloatOscillator        Oscillator                     (Parm, OutParm, ReferenceParm)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_TickFloatOscillator(float DeltaSeconds, struct FFloatOscillator* Oscillator)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.TickFloatOscillator");

	UPwndUtil_TickFloatOscillator_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Oscillator != nullptr)
		*Oscillator = params.Oscillator;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.SyncLoadIconByGUID
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPwndUtil::STATIC_SyncLoadIconByGUID(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.SyncLoadIconByGUID");

	UPwndUtil_SyncLoadIconByGUID_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.SyncLoadClassByGUID
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndUtil::STATIC_SyncLoadClassByGUID(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.SyncLoadClassByGUID");

	UPwndUtil_SyncLoadClassByGUID_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.SpawnFOVIndependentEmitterAttached
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*         EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   LocationType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UPwndFOVIndependentParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPwndFOVIndependentParticleSystemComponent* UPwndUtil::STATIC_SpawnFOVIndependentEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.SpawnFOVIndependentEmitterAttached");

	UPwndUtil_SpawnFOVIndependentEmitterAttached_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ShouldPostEventTriggerToClient
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Trig                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ShouldPostEventTriggerToClient(TEnumAsByte<EeEventTrigger> Trig)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ShouldPostEventTriggerToClient");

	UPwndUtil_ShouldPostEventTriggerToClient_Params params;
	params.Trig = Trig;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.SetAxis
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FMatrix                 Mat                            (Parm, OutParm, IsPlainOldData)
// int                            I                              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Axis                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPwndUtil::STATIC_SetAxis(int I, const struct FVector& Axis, struct FMatrix* Mat)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.SetAxis");

	UPwndUtil_SetAxis_Params params;
	params.I = I;
	params.Axis = Axis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Mat != nullptr)
		*Mat = params.Mat;
}


// Function PWND.PwndUtil.ScanCollisionSphere
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      ArcImpactInfo                  (Parm, OutParm, ZeroConstructor)
// int                            NearestIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 BaseVector                     (Parm, IsPlainOldData)
// struct FVector                 Axis                           (Parm, IsPlainOldData)
// int                            NumChecks                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            NumRings                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxDist                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// bool                           bClipToNearest                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDebug                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_ScanCollisionSphere(class UObject* WorldContextObject, TEnumAsByte<ECollisionChannel> TraceChannel, TArray<class AActor*> ActorsToIgnore, const struct FVector& Origin, const struct FVector& BaseVector, const struct FVector& Axis, int NumChecks, int NumRings, float MaxDist, const struct FVector& Extent, bool bClipToNearest, bool bDebug, TArray<struct FHitResult>* ArcImpactInfo, int* NearestIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ScanCollisionSphere");

	UPwndUtil_ScanCollisionSphere_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TraceChannel = TraceChannel;
	params.ActorsToIgnore = ActorsToIgnore;
	params.Origin = Origin;
	params.BaseVector = BaseVector;
	params.Axis = Axis;
	params.NumChecks = NumChecks;
	params.NumRings = NumRings;
	params.MaxDist = MaxDist;
	params.Extent = Extent;
	params.bClipToNearest = bClipToNearest;
	params.bDebug = bDebug;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ArcImpactInfo != nullptr)
		*ArcImpactInfo = params.ArcImpactInfo;
	if (NearestIndex != nullptr)
		*NearestIndex = params.NearestIndex;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ScanCollisionAxis
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      ArcImpactInfo                  (Parm, OutParm, ZeroConstructor)
// int                            NearestIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 BaseVector                     (Parm, IsPlainOldData)
// struct FVector                 Axis                           (Parm, IsPlainOldData)
// int                            NumChecks                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxDist                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// bool                           bClipToNearest                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDebug                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSkipBaseVectors               (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_ScanCollisionAxis(class UObject* WorldContextObject, TEnumAsByte<ECollisionChannel> TraceChannel, TArray<class AActor*> ActorsToIgnore, const struct FVector& Origin, const struct FVector& BaseVector, const struct FVector& Axis, int NumChecks, float MaxDist, const struct FVector& Extent, bool bClipToNearest, bool bDebug, bool bSkipBaseVectors, TArray<struct FHitResult>* ArcImpactInfo, int* NearestIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ScanCollisionAxis");

	UPwndUtil_ScanCollisionAxis_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TraceChannel = TraceChannel;
	params.ActorsToIgnore = ActorsToIgnore;
	params.Origin = Origin;
	params.BaseVector = BaseVector;
	params.Axis = Axis;
	params.NumChecks = NumChecks;
	params.MaxDist = MaxDist;
	params.Extent = Extent;
	params.bClipToNearest = bClipToNearest;
	params.bDebug = bDebug;
	params.bSkipBaseVectors = bSkipBaseVectors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ArcImpactInfo != nullptr)
		*ArcImpactInfo = params.ArcImpactInfo;
	if (NearestIndex != nullptr)
		*NearestIndex = params.NearestIndex;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ResetQVectorExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQVectorExp             QVectorExp                     (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQVectorExp(struct FQVectorExp* QVectorExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQVectorExp");

	UPwndUtil_ResetQVectorExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVectorExp != nullptr)
		*QVectorExp = params.QVectorExp;
}


// Function PWND.PwndUtil.ResetQVector2DExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQVector2DExp           QVector2DExp                   (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQVector2DExp(struct FQVector2DExp* QVector2DExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQVector2DExp");

	UPwndUtil_ResetQVector2DExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVector2DExp != nullptr)
		*QVector2DExp = params.QVector2DExp;
}


// Function PWND.PwndUtil.ResetQVector2D
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQVector2D              QVector2D                      (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQVector2D(struct FQVector2D* QVector2D)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQVector2D");

	UPwndUtil_ResetQVector2D_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVector2D != nullptr)
		*QVector2D = params.QVector2D;
}


// Function PWND.PwndUtil.ResetQVector
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQVector                QVector                        (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQVector(struct FQVector* QVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQVector");

	UPwndUtil_ResetQVector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVector != nullptr)
		*QVector = params.QVector;
}


// Function PWND.PwndUtil.ResetQRotatorExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQRotatorExp            QRotatorExp                    (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQRotatorExp(struct FQRotatorExp* QRotatorExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQRotatorExp");

	UPwndUtil_ResetQRotatorExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QRotatorExp != nullptr)
		*QRotatorExp = params.QRotatorExp;
}


// Function PWND.PwndUtil.ResetQRotator
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQRotator               QRotator                       (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQRotator(struct FQRotator* QRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQRotator");

	UPwndUtil_ResetQRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QRotator != nullptr)
		*QRotator = params.QRotator;
}


// Function PWND.PwndUtil.ResetQIntExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQIntExp                QIntExp                        (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQIntExp(struct FQIntExp* QIntExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQIntExp");

	UPwndUtil_ResetQIntExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QIntExp != nullptr)
		*QIntExp = params.QIntExp;
}


// Function PWND.PwndUtil.ResetQInt
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQInt                   QInt                           (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQInt(struct FQInt* QInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQInt");

	UPwndUtil_ResetQInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QInt != nullptr)
		*QInt = params.QInt;
}


// Function PWND.PwndUtil.ResetQFloatExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQFloatExp              QFloatExp                      (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQFloatExp(struct FQFloatExp* QFloatExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQFloatExp");

	UPwndUtil_ResetQFloatExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QFloatExp != nullptr)
		*QFloatExp = params.QFloatExp;
}


// Function PWND.PwndUtil.ResetQFloat
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQFloat                 QFloat                         (Parm, OutParm, ReferenceParm)

void UPwndUtil::STATIC_ResetQFloat(struct FQFloat* QFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetQFloat");

	UPwndUtil_ResetQFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QFloat != nullptr)
		*QFloat = params.QFloat;
}


// Function PWND.PwndUtil.ResetFloatOscillator
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FFloatOscillator        Oscillator                     (Parm, OutParm, ReferenceParm)
// bool                           bRandom                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_ResetFloatOscillator(bool bRandom, struct FFloatOscillator* Oscillator)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ResetFloatOscillator");

	UPwndUtil_ResetFloatOscillator_Params params;
	params.bRandom = bRandom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Oscillator != nullptr)
		*Oscillator = params.Oscillator;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.QuatFromAxisAndAngle
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Axis                           (Parm, IsPlainOldData)
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FQuat UPwndUtil::STATIC_QuatFromAxisAndAngle(const struct FVector& Axis, float Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.QuatFromAxisAndAngle");

	UPwndUtil_QuatFromAxisAndAngle_Params params;
	params.Axis = Axis;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PushPointOutOfPawns
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 RetVal                         (Parm, OutParm, IsPlainOldData)
// struct FVector                 DesiredPos                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          CollRadius                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          CollHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bKeepInWorld                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ExtraRadiusBuffer              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_PushPointOutOfPawns(class UObject* WorldContextObject, const struct FVector& DesiredPos, float CollRadius, float CollHeight, bool bKeepInWorld, float ExtraRadiusBuffer, struct FVector* RetVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PushPointOutOfPawns");

	UPwndUtil_PushPointOutOfPawns_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DesiredPos = DesiredPos;
	params.CollRadius = CollRadius;
	params.CollHeight = CollHeight;
	params.bKeepInWorld = bKeepInWorld;
	params.ExtraRadiusBuffer = ExtraRadiusBuffer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RetVal != nullptr)
		*RetVal = params.RetVal;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PushPointOutOfComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     Comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 Point                          (Parm, IsPlainOldData)
// struct FVector                 Axis                           (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_PushPointOutOfComponent(class UPrimitiveComponent* Comp, const struct FVector& Point, const struct FVector& Axis)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PushPointOutOfComponent");

	UPwndUtil_PushPointOutOfComponent_Params params;
	params.Comp = Comp;
	params.Point = Point;
	params.Axis = Axis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PushPointIntoWorld
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 RetVal                         (Parm, OutParm, IsPlainOldData)
// struct FVector                 DesiredPos                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          CollRadius                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          CollHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_PushPointIntoWorld(class UObject* WorldContextObject, const struct FVector& DesiredPos, float CollRadius, float CollHeight, struct FVector* RetVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PushPointIntoWorld");

	UPwndUtil_PushPointIntoWorld_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DesiredPos = DesiredPos;
	params.CollRadius = CollRadius;
	params.CollHeight = CollHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RetVal != nullptr)
		*RetVal = params.RetVal;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PredictTravel
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// struct FVector                 vel                            (Parm, IsPlainOldData)
// float                          MaxTime                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Act                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCollide                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnCollision               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnFloor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeResolution                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_PredictTravel(const struct FVector& Loc, const struct FVector& vel, float MaxTime, class AActor* Act, bool bCollide, bool bStopOnCollision, bool bStopOnFloor, float TimeResolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PredictTravel");

	UPwndUtil_PredictTravel_Params params;
	params.Loc = Loc;
	params.vel = vel;
	params.MaxTime = MaxTime;
	params.Act = Act;
	params.bCollide = bCollide;
	params.bStopOnCollision = bStopOnCollision;
	params.bStopOnFloor = bStopOnFloor;
	params.TimeResolution = TimeResolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PredictProjectileTravel
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  ProjClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Firer                          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeOffset                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCollide                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnCollision               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnFloor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeResolution                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          SpeedMultiplier                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_PredictProjectileTravel(class UClass* ProjClass, class AActor* Firer, class AActor* Target, float TimeOffset, bool bCollide, bool bStopOnCollision, bool bStopOnFloor, float TimeResolution, float SpeedMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PredictProjectileTravel");

	UPwndUtil_PredictProjectileTravel_Params params;
	params.ProjClass = ProjClass;
	params.Firer = Firer;
	params.Target = Target;
	params.TimeOffset = TimeOffset;
	params.bCollide = bCollide;
	params.bStopOnCollision = bStopOnCollision;
	params.bStopOnFloor = bStopOnFloor;
	params.TimeResolution = TimeResolution;
	params.SpeedMultiplier = SpeedMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PredictActorTravel
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Act                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxTime                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCollide                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnCollision               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopOnFloor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeResolution                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_PredictActorTravel(class AActor* Act, float MaxTime, bool bCollide, bool bStopOnCollision, bool bStopOnFloor, float TimeResolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PredictActorTravel");

	UPwndUtil_PredictActorTravel_Params params;
	params.Act = Act;
	params.MaxTime = MaxTime;
	params.bCollide = bCollide;
	params.bStopOnCollision = bStopOnCollision;
	params.bStopOnFloor = bStopOnFloor;
	params.TimeResolution = TimeResolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PostEventTriggerToInline
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeEventTrigger>    Trig                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          TrigCount                      (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other1                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other2                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other3                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other4                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other5                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_PostEventTriggerToInline(class UObject* Obj, TEnumAsByte<EeEventTrigger> Trig, float TrigCount, class UObject* Other1, class UObject* Other2, class UObject* Other3, class UObject* Other4, class UObject* Other5, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PostEventTriggerToInline");

	UPwndUtil_PostEventTriggerToInline_Params params;
	params.Obj = Obj;
	params.Trig = Trig;
	params.TrigCount = TrigCount;
	params.Other1 = Other1;
	params.Other2 = Other2;
	params.Other3 = Other3;
	params.Other4 = Other4;
	params.Other5 = Other5;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PostEventTriggerTo
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_PostEventTriggerTo(class UObject* Obj, const struct FPostedEventTrigger& Trig, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PostEventTriggerTo");

	UPwndUtil_PostEventTriggerTo_Params params;
	params.Obj = Obj;
	params.Trig = Trig;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PostEventTriggerArrTo
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FPostedEventTrigger> Trigs                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_PostEventTriggerArrTo(class UObject* Obj, TArray<struct FPostedEventTrigger> Trigs, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PostEventTriggerArrTo");

	UPwndUtil_PostEventTriggerArrTo_Params params;
	params.Obj = Obj;
	params.Trigs = Trigs;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.PerformMath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeMathOperation>   Op                             (Parm, ZeroConstructor, IsPlainOldData)
// float                          A                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_PerformMath(TEnumAsByte<EeMathOperation> Op, float A, float B)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.PerformMath");

	UPwndUtil_PerformMath_Params params;
	params.Op = Op;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_SpecialMovement
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Char                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_SpecialMovement(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Char)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_SpecialMovement");

	UPwndUtil_ParseEventTrigger_SpecialMovement_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Char != nullptr)
		*Char = params.Char;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Spawned_Shield_Encompass
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APawn*                   Instigator                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatorController           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  EncompassedActor               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Spawned_Shield_Encompass(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield, class APawn** Instigator, class AController** InstigatorController, class UClass** WeaponClass, class AActor** EncompassedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Spawned_Shield_Encompass");

	UPwndUtil_ParseEventTrigger_Spawned_Shield_Encompass_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;
	if (Instigator != nullptr)
		*Instigator = params.Instigator;
	if (InstigatorController != nullptr)
		*InstigatorController = params.InstigatorController;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;
	if (EncompassedActor != nullptr)
		*EncompassedActor = params.EncompassedActor;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Spawned_Shield
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APawn*                   Instigator                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatorController           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Spawned_Shield(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield, class APawn** Instigator, class AController** InstigatorController, class UClass** WeaponClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Spawned_Shield");

	UPwndUtil_ParseEventTrigger_Spawned_Shield_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;
	if (Instigator != nullptr)
		*Instigator = params.Instigator;
	if (InstigatorController != nullptr)
		*InstigatorController = params.InstigatorController;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Shield_Protected
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Protected                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Shield_Protected(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield, class AActor** Protected, class AController** EventInstigator, class AActor** DamageCauser, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Shield_Protected");

	UPwndUtil_ParseEventTrigger_Shield_Protected_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;
	if (Protected != nullptr)
		*Protected = params.Protected;
	if (EventInstigator != nullptr)
		*EventInstigator = params.EventInstigator;
	if (DamageCauser != nullptr)
		*DamageCauser = params.DamageCauser;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Shield_PanelDestroyed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Shield_PanelDestroyed(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield, class AController** EventInstigator, class AActor** DamageCauser, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Shield_PanelDestroyed");

	UPwndUtil_ParseEventTrigger_Shield_PanelDestroyed_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;
	if (EventInstigator != nullptr)
		*EventInstigator = params.EventInstigator;
	if (DamageCauser != nullptr)
		*DamageCauser = params.DamageCauser;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Shield_Destroyed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Shield_Destroyed(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield, class AController** EventInstigator, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Shield_Destroyed");

	UPwndUtil_ParseEventTrigger_Shield_Destroyed_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;
	if (EventInstigator != nullptr)
		*EventInstigator = params.EventInstigator;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Shield_Deactivated
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Shield_Deactivated(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Shield_Deactivated");

	UPwndUtil_ParseEventTrigger_Shield_Deactivated_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Shield_Damaged
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Shield_Damaged(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield, class AController** EventInstigator, class AActor** DamageCauser, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Shield_Damaged");

	UPwndUtil_ParseEventTrigger_Shield_Damaged_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;
	if (EventInstigator != nullptr)
		*EventInstigator = params.EventInstigator;
	if (DamageCauser != nullptr)
		*DamageCauser = params.DamageCauser;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_ScorePoints
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Scorer                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ScoredObject                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_ScorePoints(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class UObject** Scorer, class UObject** ScoredObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_ScorePoints");

	UPwndUtil_ParseEventTrigger_ScorePoints_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Scorer != nullptr)
		*Scorer = params.Scorer;
	if (ScoredObject != nullptr)
		*ScoredObject = params.ScoredObject;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_RocketJump_Etc
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Char                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  JumpOffActor                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     JumpOffComponent               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_RocketJump_Etc(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Char, class AActor** JumpOffActor, class UPrimitiveComponent** JumpOffComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_RocketJump_Etc");

	UPwndUtil_ParseEventTrigger_RocketJump_Etc_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Char != nullptr)
		*Char = params.Char;
	if (JumpOffActor != nullptr)
		*JumpOffActor = params.JumpOffActor;
	if (JumpOffComponent != nullptr)
		*JumpOffComponent = params.JumpOffComponent;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Revive_Started
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Reviver                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Revived                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Revive_Started(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Reviver, class APwndCharacter** Revived)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Revive_Started");

	UPwndUtil_ParseEventTrigger_Revive_Started_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Reviver != nullptr)
		*Reviver = params.Reviver;
	if (Revived != nullptr)
		*Revived = params.Revived;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Revive_Denied_Assist
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Assister                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Killer                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Reviver                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Revived                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Revive_Denied_Assist(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class UObject** Assister, class UObject** Killer, class APwndCharacter** Reviver, class APwndCharacter** Revived)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Revive_Denied_Assist");

	UPwndUtil_ParseEventTrigger_Revive_Denied_Assist_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Assister != nullptr)
		*Assister = params.Assister;
	if (Killer != nullptr)
		*Killer = params.Killer;
	if (Reviver != nullptr)
		*Reviver = params.Reviver;
	if (Revived != nullptr)
		*Revived = params.Revived;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Revive_Denied
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Reviver                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Revived                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Denier                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Revive_Denied(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Reviver, class APwndCharacter** Revived, class UObject** Denier, class UClass** WeaponClass, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Revive_Denied");

	UPwndUtil_ParseEventTrigger_Revive_Denied_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Reviver != nullptr)
		*Reviver = params.Reviver;
	if (Revived != nullptr)
		*Revived = params.Revived;
	if (Denier != nullptr)
		*Denier = params.Denier;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Revive_Completed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Reviver                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Revived                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Revive_Completed(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Reviver, class APwndCharacter** Revived)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Revive_Completed");

	UPwndUtil_ParseEventTrigger_Revive_Completed_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Reviver != nullptr)
		*Reviver = params.Reviver;
	if (Revived != nullptr)
		*Revived = params.Revived;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Revive_Cancelled
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Reviver                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Revived                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Revive_Cancelled(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Reviver, class APwndCharacter** Revived)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Revive_Cancelled");

	UPwndUtil_ParseEventTrigger_Revive_Cancelled_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Reviver != nullptr)
		*Reviver = params.Reviver;
	if (Revived != nullptr)
		*Revived = params.Revived;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_PwnParty
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Pwner                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwnee                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_PwnParty(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Pwner, class APwndCharacter** Pwnee)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_PwnParty");

	UPwndUtil_ParseEventTrigger_PwnParty_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Pwner != nullptr)
		*Pwner = params.Pwner;
	if (Pwnee != nullptr)
		*Pwnee = params.Pwnee;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_PWN_Started_Etc
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Pwner                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwnee                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bStack                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_PWN_Started_Etc(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Pwner, class APwndCharacter** Pwnee, bool* bStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_PWN_Started_Etc");

	UPwndUtil_ParseEventTrigger_PWN_Started_Etc_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Pwner != nullptr)
		*Pwner = params.Pwner;
	if (Pwnee != nullptr)
		*Pwnee = params.Pwnee;
	if (bStack != nullptr)
		*bStack = params.bStack;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_PWN_Denied_Etc
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Pwner                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwnee                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Saver                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bStack                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_PWN_Denied_Etc(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Pwner, class APwndCharacter** Pwnee, class UObject** Saver, class UClass** WeaponClass, class UClass** DamageType, bool* bStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_PWN_Denied_Etc");

	UPwndUtil_ParseEventTrigger_PWN_Denied_Etc_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Pwner != nullptr)
		*Pwner = params.Pwner;
	if (Pwnee != nullptr)
		*Pwnee = params.Pwnee;
	if (Saver != nullptr)
		*Saver = params.Saver;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;
	if (bStack != nullptr)
		*bStack = params.bStack;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_PWN_Denied_Assist
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Assister                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Killer                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwner                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwnee                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_PWN_Denied_Assist(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class UObject** Assister, class UObject** Killer, class APwndCharacter** Pwner, class APwndCharacter** Pwnee)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_PWN_Denied_Assist");

	UPwndUtil_ParseEventTrigger_PWN_Denied_Assist_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Assister != nullptr)
		*Assister = params.Assister;
	if (Killer != nullptr)
		*Killer = params.Killer;
	if (Pwner != nullptr)
		*Pwner = params.Pwner;
	if (Pwnee != nullptr)
		*Pwnee = params.Pwnee;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_PWN_Completed_Etc
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Pwner                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwnee                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bStack                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_PWN_Completed_Etc(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Pwner, class APwndCharacter** Pwnee, bool* bInstant, bool* bStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_PWN_Completed_Etc");

	UPwndUtil_ParseEventTrigger_PWN_Completed_Etc_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Pwner != nullptr)
		*Pwner = params.Pwner;
	if (Pwnee != nullptr)
		*Pwnee = params.Pwnee;
	if (bInstant != nullptr)
		*bInstant = params.bInstant;
	if (bStack != nullptr)
		*bStack = params.bStack;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_PWN_Cancelled_Etc
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Pwner                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Pwnee                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bStack                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_PWN_Cancelled_Etc(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Pwner, class APwndCharacter** Pwnee, bool* bStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_PWN_Cancelled_Etc");

	UPwndUtil_ParseEventTrigger_PWN_Cancelled_Etc_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Pwner != nullptr)
		*Pwner = params.Pwner;
	if (Pwnee != nullptr)
		*Pwnee = params.Pwnee;
	if (bStack != nullptr)
		*bStack = params.bStack;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Overheated_Etc
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Char                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bCooledOff                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Overheated_Etc(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Char, bool* bCooledOff)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Overheated_Etc");

	UPwndUtil_ParseEventTrigger_Overheated_Etc_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Char != nullptr)
		*Char = params.Char;
	if (bCooledOff != nullptr)
		*bCooledOff = params.bCooledOff;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_KillAssist
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Assister                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Killer                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Killed                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_KillAssist(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class UObject** Assister, class UObject** Killer, class UObject** Killed)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_KillAssist");

	UPwndUtil_ParseEventTrigger_KillAssist_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Assister != nullptr)
		*Assister = params.Assister;
	if (Killer != nullptr)
		*Killer = params.Killer;
	if (Killed != nullptr)
		*Killed = params.Killed;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Kill
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Killer                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Killed                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Kill(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class UObject** Killer, class UObject** Killed, class UClass** WeaponClass, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Kill");

	UPwndUtil_ParseEventTrigger_Kill_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Killer != nullptr)
		*Killer = params.Killer;
	if (Killed != nullptr)
		*Killed = params.Killed;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_EnterExit_Shield
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndShield*             Shield                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Actor                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bEnter                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_EnterExit_Shield(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndShield** Shield, class AActor** Actor, bool* bEnter)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_EnterExit_Shield");

	UPwndUtil_ParseEventTrigger_EnterExit_Shield_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Shield != nullptr)
		*Shield = params.Shield;
	if (Actor != nullptr)
		*Actor = params.Actor;
	if (bEnter != nullptr)
		*bEnter = params.bEnter;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_EnterExit_PwnZone
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndPwnZone*            PwnZone                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Actor                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bEnter                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_EnterExit_PwnZone(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndPwnZone** PwnZone, class AActor** Actor, bool* bEnter)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_EnterExit_PwnZone");

	UPwndUtil_ParseEventTrigger_EnterExit_PwnZone_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PwnZone != nullptr)
		*PwnZone = params.PwnZone;
	if (Actor != nullptr)
		*Actor = params.Actor;
	if (bEnter != nullptr)
		*bEnter = params.bEnter;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_EnemyTeamDown
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Killer                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Killed                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_EnemyTeamDown(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class UObject** Killer, class UObject** Killed, class UClass** WeaponClass, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_EnemyTeamDown");

	UPwndUtil_ParseEventTrigger_EnemyTeamDown_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Killer != nullptr)
		*Killer = params.Killer;
	if (Killed != nullptr)
		*Killed = params.Killed;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Damage_Etc
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Damager                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Damaged                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bHeat                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Damage_Etc(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class UObject** Damager, class UObject** Damaged, class UClass** WeaponClass, class UClass** DamageType, bool* bHeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Damage_Etc");

	UPwndUtil_ParseEventTrigger_Damage_Etc_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Damager != nullptr)
		*Damager = params.Damager;
	if (Damaged != nullptr)
		*Damaged = params.Damaged;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;
	if (bHeat != nullptr)
		*bHeat = params.bHeat;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Carry_Pickup
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Carrier                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Carried                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Carry_Pickup(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Carrier, class APwndCharacter** Carried)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Carry_Pickup");

	UPwndUtil_ParseEventTrigger_Carry_Pickup_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Carrier != nullptr)
		*Carrier = params.Carrier;
	if (Carried != nullptr)
		*Carried = params.Carried;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Carry_Drop
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Carrier                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Carried                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Carry_Drop(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Carrier, class APwndCharacter** Carried)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Carry_Drop");

	UPwndUtil_ParseEventTrigger_Carry_Drop_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Carrier != nullptr)
		*Carrier = params.Carrier;
	if (Carried != nullptr)
		*Carried = params.Carried;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ParseEventTrigger_Carry_Denied
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         Others                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class APwndCharacter*          Carrier                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APwndCharacter*          Carried                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Denier                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WeaponClass                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ParseEventTrigger_Carry_Denied(TEnumAsByte<EeEventTrigger> Type, TArray<class UObject*> Others, class APwndCharacter** Carrier, class APwndCharacter** Carried, class UObject** Denier, class UClass** WeaponClass, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ParseEventTrigger_Carry_Denied");

	UPwndUtil_ParseEventTrigger_Carry_Denied_Params params;
	params.Type = Type;
	params.Others = Others;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Carrier != nullptr)
		*Carrier = params.Carrier;
	if (Carried != nullptr)
		*Carried = params.Carried;
	if (Denier != nullptr)
		*Denier = params.Denier;
	if (WeaponClass != nullptr)
		*WeaponClass = params.WeaponClass;
	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.OrthoRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 X                              (Parm, IsPlainOldData)
// struct FVector                 Y                              (Parm, IsPlainOldData)
// struct FVector                 Z                              (Parm, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndUtil::STATIC_OrthoRotation(const struct FVector& X, const struct FVector& Y, const struct FVector& Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.OrthoRotation");

	UPwndUtil_OrthoRotation_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.OrientToNormal
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Normal                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EAxis>             OrientAxis                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                InRotation                     (Parm, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndUtil::STATIC_OrientToNormal(const struct FVector& Normal, TEnumAsByte<EAxis> OrientAxis, const struct FRotator& InRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.OrientToNormal");

	UPwndUtil_OrientToNormal_Params params;
	params.Normal = Normal;
	params.OrientAxis = OrientAxis;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsValidGameFor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsValidGameFor(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsValidGameFor");

	UPwndUtil_IsValidGameFor_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsSpectatingReplay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsSpectatingReplay(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsSpectatingReplay");

	UPwndUtil_IsSpectatingReplay_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsSpectatingFromDynamicTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsSpectatingFromDynamicTeam(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsSpectatingFromDynamicTeam");

	UPwndUtil_IsSpectatingFromDynamicTeam_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsSpectating
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsSpectating(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsSpectating");

	UPwndUtil_IsSpectating_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsPlayInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsPlayInEditor(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsPlayInEditor");

	UPwndUtil_IsPlayInEditor_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludePlayerBots             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsPlayer(class UObject* Obj, bool bIncludePlayerBots, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsPlayer");

	UPwndUtil_IsPlayer_Params params;
	params.Obj = Obj;
	params.bIncludePlayerBots = bIncludePlayerBots;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsOnlySpectating
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsOnlySpectating(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsOnlySpectating");

	UPwndUtil_IsOnlySpectating_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsLocalPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*            PS                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsLocalPS(class APlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsLocalPS");

	UPwndUtil_IsLocalPS_Params params;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsLocalPC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*       PC                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsLocalPC(class APlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsLocalPC");

	UPwndUtil_IsLocalPC_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsLocalPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                   P                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsLocalPawn(class APawn* P)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsLocalPawn");

	UPwndUtil_IsLocalPawn_Params params;
	params.P = P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsAssetGuid
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bUseLoadingFallback            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsAssetGuid(const struct FGuid& Guid, bool bUseLoadingFallback)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsAssetGuid");

	UPwndUtil_IsAssetGuid_Params params;
	params.Guid = Guid;
	params.bUseLoadingFallback = bUseLoadingFallback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.IsAMDGPU
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_IsAMDGPU()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.IsAMDGPU");

	UPwndUtil_IsAMDGPU_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasLosToPoint
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetPos                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSimple                        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasLosToPoint(class AActor* Eyes, const struct FVector& TargetPos, class AActor* Target, bool bSimple, TEnumAsByte<ECollisionChannel> Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasLosToPoint");

	UPwndUtil_HasLosToPoint_Params params;
	params.Eyes = Eyes;
	params.TargetPos = TargetPos;
	params.Target = Target;
	params.bSimple = bSimple;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasLosPointToPoint
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 EyePos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 TargetPos                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasLosPointToPoint(const struct FVector& EyePos, const struct FVector& TargetPos, class AActor* Eyes, class AActor* Target, TEnumAsByte<ECollisionChannel> Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasLosPointToPoint");

	UPwndUtil_HasLosPointToPoint_Params params;
	params.EyePos = EyePos;
	params.TargetPos = TargetPos;
	params.Eyes = Eyes;
	params.Target = Target;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasLOS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSimple                        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasLOS(class AActor* Eyes, class AActor* Target, bool bSimple, TEnumAsByte<ECollisionChannel> Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasLOS");

	UPwndUtil_HasLOS_Params params;
	params.Eyes = Eyes;
	params.Target = Target;
	params.bSimple = bSimple;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasInteractLosToPoint
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetPos                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSimple                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasInteractLosToPoint(class AActor* Eyes, const struct FVector& TargetPos, class AActor* Target, bool bSimple)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasInteractLosToPoint");

	UPwndUtil_HasInteractLosToPoint_Params params;
	params.Eyes = Eyes;
	params.TargetPos = TargetPos;
	params.Target = Target;
	params.bSimple = bSimple;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasInteractLosPointToPoint
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 EyePos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 TargetPos                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasInteractLosPointToPoint(const struct FVector& EyePos, const struct FVector& TargetPos, class AActor* Eyes, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasInteractLosPointToPoint");

	UPwndUtil_HasInteractLosPointToPoint_Params params;
	params.EyePos = EyePos;
	params.TargetPos = TargetPos;
	params.Eyes = Eyes;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasInteractLos
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSimple                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasInteractLos(class AActor* Eyes, class AActor* Target, bool bSimple)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasInteractLos");

	UPwndUtil_HasInteractLos_Params params;
	params.Eyes = Eyes;
	params.Target = Target;
	params.bSimple = bSimple;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasDamageLosToPoint
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetPos                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSimple                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasDamageLosToPoint(class AActor* Eyes, const struct FVector& TargetPos, class AActor* Target, bool bSimple)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasDamageLosToPoint");

	UPwndUtil_HasDamageLosToPoint_Params params;
	params.Eyes = Eyes;
	params.TargetPos = TargetPos;
	params.Target = Target;
	params.bSimple = bSimple;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasDamageLosPointToPoint
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 EyePos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 TargetPos                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasDamageLosPointToPoint(const struct FVector& EyePos, const struct FVector& TargetPos, class AActor* Eyes, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasDamageLosPointToPoint");

	UPwndUtil_HasDamageLosPointToPoint_Params params;
	params.EyePos = EyePos;
	params.TargetPos = TargetPos;
	params.Eyes = Eyes;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.HasDamageLos
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Eyes                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSimple                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_HasDamageLos(class AActor* Eyes, class AActor* Target, bool bSimple)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.HasDamageLos");

	UPwndUtil_HasDamageLos_Params params;
	params.Eyes = Eyes;
	params.Target = Target;
	params.bSimple = bSimple;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetWorldFromContextObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UWorld*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UWorld* UPwndUtil::STATIC_GetWorldFromContextObject(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetWorldFromContextObject");

	UPwndUtil_GetWorldFromContextObject_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetWeaponArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowPawnEquippedWeapon       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndUtil::STATIC_GetWeaponArchetype(class UObject* Obj, bool bAllowPawnEquippedWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetWeaponArchetype");

	UPwndUtil_GetWeaponArchetype_Params params;
	params.Obj = Obj;
	params.bAllowPawnEquippedWeapon = bAllowPawnEquippedWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetWeapon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DesiredWeapArchetype           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowPawnEquippedWeapon       (Parm, ZeroConstructor, IsPlainOldData)
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* UPwndUtil::STATIC_GetWeapon(class UObject* Obj, class UClass* DesiredWeapArchetype, bool bAllowPawnEquippedWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetWeapon");

	UPwndUtil_GetWeapon_Params params;
	params.Obj = Obj;
	params.DesiredWeapArchetype = DesiredWeapArchetype;
	params.bAllowPawnEquippedWeapon = bAllowPawnEquippedWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetVisualGeometryFromHit
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          BelowDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          AboveDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FHitResult UPwndUtil::STATIC_GetVisualGeometryFromHit(class UObject* WorldContextObject, const struct FHitResult& HitInfo, float BelowDistance, float AboveDistance, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetVisualGeometryFromHit");

	UPwndUtil_GetVisualGeometryFromHit_Params params;
	params.WorldContextObject = WorldContextObject;
	params.HitInfo = HitInfo;
	params.BelowDistance = BelowDistance;
	params.AboveDistance = AboveDistance;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetVisualGeometry
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FHitResult UPwndUtil::STATIC_GetVisualGeometry(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetVisualGeometry");

	UPwndUtil_GetVisualGeometry_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Start = Start;
	params.End = End;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetVersionString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndUtil::STATIC_GetVersionString()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetVersionString");

	UPwndUtil_GetVersionString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetTeamRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPlayersOnly                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConnectedOnly                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_GetTeamRatio(class UObject* Obj, bool bPlayersOnly, bool bConnectedOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetTeamRatio");

	UPwndUtil_GetTeamRatio_Params params;
	params.Obj = Obj;
	params.bPlayersOnly = bPlayersOnly;
	params.bConnectedOnly = bConnectedOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetTeamNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UPwndUtil::STATIC_GetTeamNum(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetTeamNum");

	UPwndUtil_GetTeamNum_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetTeamByNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* UPwndUtil::STATIC_GetTeamByNum(unsigned char TeamNum, class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetTeamByNum");

	UPwndUtil_GetTeamByNum_Params params;
	params.TeamNum = TeamNum;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* UPwndUtil::STATIC_GetTeam(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetTeam");

	UPwndUtil_GetTeam_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetStaticMeshBounds
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMesh*             Mesh                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// struct FRotator                Rot                            (Parm, IsPlainOldData)
// struct FVector                 Scale                          (Parm, IsPlainOldData)
// struct FBoxSphereBounds        ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FBoxSphereBounds UPwndUtil::STATIC_GetStaticMeshBounds(class UStaticMesh* Mesh, const struct FVector& Loc, const struct FRotator& Rot, const struct FVector& Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetStaticMeshBounds");

	UPwndUtil_GetStaticMeshBounds_Params params;
	params.Mesh = Mesh;
	params.Loc = Loc;
	params.Rot = Rot;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetServerTimeStamp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_GetServerTimeStamp(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetServerTimeStamp");

	UPwndUtil_GetServerTimeStamp_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRVectorExp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRVectorExp             RVectorExp                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_GetRVectorExp(const struct FRVectorExp& RVectorExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRVectorExp");

	UPwndUtil_GetRVectorExp_Params params;
	params.RVectorExp = RVectorExp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRVector2DExp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRVector2DExp           RVector2DExp                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UPwndUtil::STATIC_GetRVector2DExp(const struct FRVector2DExp& RVector2DExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRVector2DExp");

	UPwndUtil_GetRVector2DExp_Params params;
	params.RVector2DExp = RVector2DExp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRVector2D
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRVector2D              RVector2D                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UPwndUtil::STATIC_GetRVector2D(const struct FRVector2D& RVector2D)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRVector2D");

	UPwndUtil_GetRVector2D_Params params;
	params.RVector2D = RVector2D;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRVector
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRVector                RVector                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_GetRVector(const struct FRVector& RVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRVector");

	UPwndUtil_GetRVector_Params params;
	params.RVector = RVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRRotatorExp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRRotatorExp            RRotatorExp                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndUtil::STATIC_GetRRotatorExp(const struct FRRotatorExp& RRotatorExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRRotatorExp");

	UPwndUtil_GetRRotatorExp_Params params;
	params.RRotatorExp = RRotatorExp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRRotator
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRRotator               RRotator                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndUtil::STATIC_GetRRotator(const struct FRRotator& RRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRRotator");

	UPwndUtil_GetRRotator_Params params;
	params.RRotator = RRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRIntExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRIntExp                RIntExp                        (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GetRIntExp(const struct FRIntExp& RIntExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRIntExp");

	UPwndUtil_GetRIntExp_Params params;
	params.RIntExp = RIntExp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRInt
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRInt                   RInt                           (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GetRInt(const struct FRInt& RInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRInt");

	UPwndUtil_GetRInt_Params params;
	params.RInt = RInt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRFloatExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRFloatExp              RFloatExp                      (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_GetRFloatExp(const struct FRFloatExp& RFloatExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRFloatExp");

	UPwndUtil_GetRFloatExp_Params params;
	params.RFloatExp = RFloatExp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRFloat
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRFloat                 RFloat                         (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_GetRFloat(const struct FRFloat& RFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRFloat");

	UPwndUtil_GetRFloat_Params params;
	params.RFloat = RFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRepDmgWeaponArchetype
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndUtil::STATIC_GetRepDmgWeaponArchetype(const struct FPwndReplicatedDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRepDmgWeaponArchetype");

	UPwndUtil_GetRepDmgWeaponArchetype_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRepDmgWeapon
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* UPwndUtil::STATIC_GetRepDmgWeapon(const struct FPwndReplicatedDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRepDmgWeapon");

	UPwndUtil_GetRepDmgWeapon_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRepDmgDefender
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetRepDmgDefender(const struct FPwndReplicatedDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRepDmgDefender");

	UPwndUtil_GetRepDmgDefender_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRepDmgAttacker
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndReplicatedDamageEvent DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetRepDmgAttacker(const struct FPwndReplicatedDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRepDmgAttacker");

	UPwndUtil_GetRepDmgAttacker_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRealmStr
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndUtil::STATIC_GetRealmStr()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRealmStr");

	UPwndUtil_GetRealmStr_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetRealm
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeRealm>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeRealm> UPwndUtil::STATIC_GetRealm()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetRealm");

	UPwndUtil_GetRealm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQVectorExp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQVectorExp             QVectorExp                     (Parm, OutParm, ReferenceParm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_GetQVectorExp(struct FQVectorExp* QVectorExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQVectorExp");

	UPwndUtil_GetQVectorExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVectorExp != nullptr)
		*QVectorExp = params.QVectorExp;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQVector2DExp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQVector2DExp           QVector2DExp                   (Parm, OutParm, ReferenceParm)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UPwndUtil::STATIC_GetQVector2DExp(struct FQVector2DExp* QVector2DExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQVector2DExp");

	UPwndUtil_GetQVector2DExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVector2DExp != nullptr)
		*QVector2DExp = params.QVector2DExp;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQVector2D
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQVector2D              QVector2D                      (Parm, OutParm, ReferenceParm)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UPwndUtil::STATIC_GetQVector2D(struct FQVector2D* QVector2D)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQVector2D");

	UPwndUtil_GetQVector2D_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVector2D != nullptr)
		*QVector2D = params.QVector2D;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQVector
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQVector                QVector                        (Parm, OutParm, ReferenceParm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_GetQVector(struct FQVector* QVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQVector");

	UPwndUtil_GetQVector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QVector != nullptr)
		*QVector = params.QVector;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQRotatorExp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQRotatorExp            QRotatorExp                    (Parm, OutParm, ReferenceParm)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndUtil::STATIC_GetQRotatorExp(struct FQRotatorExp* QRotatorExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQRotatorExp");

	UPwndUtil_GetQRotatorExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QRotatorExp != nullptr)
		*QRotatorExp = params.QRotatorExp;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQRotator
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQRotator               QRotator                       (Parm, OutParm, ReferenceParm)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndUtil::STATIC_GetQRotator(struct FQRotator* QRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQRotator");

	UPwndUtil_GetQRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QRotator != nullptr)
		*QRotator = params.QRotator;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQIntExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQIntExp                QIntExp                        (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GetQIntExp(struct FQIntExp* QIntExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQIntExp");

	UPwndUtil_GetQIntExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QIntExp != nullptr)
		*QIntExp = params.QIntExp;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQInt
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQInt                   QInt                           (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GetQInt(struct FQInt* QInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQInt");

	UPwndUtil_GetQInt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QInt != nullptr)
		*QInt = params.QInt;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQFloatExp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQFloatExp              QFloatExp                      (Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_GetQFloatExp(struct FQFloatExp* QFloatExp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQFloatExp");

	UPwndUtil_GetQFloatExp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QFloatExp != nullptr)
		*QFloatExp = params.QFloatExp;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetQFloat
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FQFloat                 QFloat                         (Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_GetQFloat(struct FQFloat* QFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetQFloat");

	UPwndUtil_GetQFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (QFloat != nullptr)
		*QFloat = params.QFloat;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPwndDmgWeaponArchetype
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndDamageEvent        PwndDamageEvent                (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndUtil::STATIC_GetPwndDmgWeaponArchetype(const struct FPwndDamageEvent& PwndDamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPwndDmgWeaponArchetype");

	UPwndUtil_GetPwndDmgWeaponArchetype_Params params;
	params.PwndDamageEvent = PwndDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPwndDmgWeapon
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndDamageEvent        PwndDamageEvent                (ConstParm, Parm, OutParm, ReferenceParm)
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* UPwndUtil::STATIC_GetPwndDmgWeapon(const struct FPwndDamageEvent& PwndDamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPwndDmgWeapon");

	UPwndUtil_GetPwndDmgWeapon_Params params;
	params.PwndDamageEvent = PwndDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPwndDmgProjectile
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndDamageEvent        PwndDamageEvent                (ConstParm, Parm, OutParm, ReferenceParm)
// class APwndProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectile* UPwndUtil::STATIC_GetPwndDmgProjectile(const struct FPwndDamageEvent& PwndDamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPwndDmgProjectile");

	UPwndUtil_GetPwndDmgProjectile_Params params;
	params.PwndDamageEvent = PwndDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPwndDmgDefender
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndDamageEvent        PwndDamageEvent                (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetPwndDmgDefender(const struct FPwndDamageEvent& PwndDamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPwndDmgDefender");

	UPwndUtil_GetPwndDmgDefender_Params params;
	params.PwndDamageEvent = PwndDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPwndDmgAttacker
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndDamageEvent        PwndDamageEvent                (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetPwndDmgAttacker(const struct FPwndDamageEvent& PwndDamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPwndDmgAttacker");

	UPwndUtil_GetPwndDmgAttacker_Params params;
	params.PwndDamageEvent = PwndDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* UPwndUtil::STATIC_GetPS(class UObject* Obj, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPS");

	UPwndUtil_GetPS_Params params;
	params.Obj = Obj;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerController* UPwndUtil::STATIC_GetPC(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPC");

	UPwndUtil_GetPC_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UPwndUtil::STATIC_GetPawn(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetPawn");

	UPwndUtil_GetPawn_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetNextGuidFiltered
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FGuid>           Guids                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Current                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<struct FGuid>           FilterArray                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndUtil::STATIC_GetNextGuidFiltered(TArray<struct FGuid> Guids, int Dir, const struct FGuid& Current, TArray<struct FGuid> FilterArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetNextGuidFiltered");

	UPwndUtil_GetNextGuidFiltered_Params params;
	params.Guids = Guids;
	params.Dir = Dir;
	params.Current = Current;
	params.FilterArray = FilterArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetNextGuid
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FGuid>           Guids                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            Dir                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Current                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FGuid UPwndUtil::STATIC_GetNextGuid(TArray<struct FGuid> Guids, int Dir, const struct FGuid& Current)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetNextGuid");

	UPwndUtil_GetNextGuid_Params params;
	params.Guids = Guids;
	params.Dir = Dir;
	params.Current = Current;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetNearestSurface
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutSurface                     (Parm, OutParm, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// struct FVector                 BaseVector                     (Parm, IsPlainOldData)
// struct FVector                 Axis                           (Parm, IsPlainOldData)
// int                            NumChecks                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            NumRings                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_GetNearestSurface(class UObject* WorldContextObject, TEnumAsByte<ECollisionChannel> TraceChannel, TArray<class AActor*> ActorsToIgnore, const struct FVector& Origin, float Distance, const struct FVector& Extent, const struct FVector& BaseVector, const struct FVector& Axis, int NumChecks, int NumRings, struct FHitResult* OutSurface)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetNearestSurface");

	UPwndUtil_GetNearestSurface_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TraceChannel = TraceChannel;
	params.ActorsToIgnore = ActorsToIgnore;
	params.Origin = Origin;
	params.Distance = Distance;
	params.Extent = Extent;
	params.BaseVector = BaseVector;
	params.Axis = Axis;
	params.NumChecks = NumChecks;
	params.NumRings = NumRings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutSurface != nullptr)
		*OutSurface = params.OutSurface;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetLocalTeamNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UPwndUtil::STATIC_GetLocalTeamNum(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetLocalTeamNum");

	UPwndUtil_GetLocalTeamNum_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetLocalTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* UPwndUtil::STATIC_GetLocalTeam(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetLocalTeam");

	UPwndUtil_GetLocalTeam_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetLocalPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* UPwndUtil::STATIC_GetLocalPS(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetLocalPS");

	UPwndUtil_GetLocalPS_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ULocalPlayer*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULocalPlayer* UPwndUtil::STATIC_GetLocalPlayer(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetLocalPlayer");

	UPwndUtil_GetLocalPlayer_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetLocalPC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerController* UPwndUtil::STATIC_GetLocalPC(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetLocalPC");

	UPwndUtil_GetLocalPC_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetLocalPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UPwndUtil::STATIC_GetLocalPawn(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetLocalPawn");

	UPwndUtil_GetLocalPawn_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetLoadoutGuids
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPwndLoadout            Loadout                        (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<struct FGuid>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FGuid> UPwndUtil::STATIC_GetLoadoutGuids(const struct FPwndLoadout& Loadout)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetLoadoutGuids");

	UPwndUtil_GetLoadoutGuids_Params params;
	params.Loadout = Loadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetItemRarityEnumDisplayText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeItemRarity>      Rarity                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetItemRarityEnumDisplayText(TEnumAsByte<EeItemRarity> Rarity)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetItemRarityEnumDisplayText");

	UPwndUtil_GetItemRarityEnumDisplayText_Params params;
	params.Rarity = Rarity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetItemRarity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeItemRarity>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EeItemRarity> UPwndUtil::STATIC_GetItemRarity(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetItemRarity");

	UPwndUtil_GetItemRarity_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHumanReadableTextClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetHumanReadableTextClass(class UClass* Class, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHumanReadableTextClass");

	UPwndUtil_GetHumanReadableTextClass_Params params;
	params.Class = Class;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHumanReadableTextByGUID
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetHumanReadableTextByGUID(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHumanReadableTextByGUID");

	UPwndUtil_GetHumanReadableTextByGUID_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHumanReadableText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetHumanReadableText(class UObject* Obj, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHumanReadableText");

	UPwndUtil_GetHumanReadableText_Params params;
	params.Obj = Obj;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHumanReadableNameClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndUtil::STATIC_GetHumanReadableNameClass(class UClass* Class, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHumanReadableNameClass");

	UPwndUtil_GetHumanReadableNameClass_Params params;
	params.Class = Class;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHumanReadableNameByGUID
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndUtil::STATIC_GetHumanReadableNameByGUID(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHumanReadableNameByGUID");

	UPwndUtil_GetHumanReadableNameByGUID_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHumanReadableName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPwndUtil::STATIC_GetHumanReadableName(class UObject* Obj, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHumanReadableName");

	UPwndUtil_GetHumanReadableName_Params params;
	params.Obj = Obj;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHudTeamNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UPwndUtil::STATIC_GetHudTeamNum(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHudTeamNum");

	UPwndUtil_GetHudTeamNum_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHudTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* UPwndUtil::STATIC_GetHudTeam(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHudTeam");

	UPwndUtil_GetHudTeam_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHudPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* UPwndUtil::STATIC_GetHudPS(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHudPS");

	UPwndUtil_GetHudPS_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetHudPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UPwndUtil::STATIC_GetHudPawn(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetHudPawn");

	UPwndUtil_GetHudPawn_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetGuidReferences
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FName                   Type                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TArray<struct FGuid>           GuidRefs                       (Parm, OutParm, ZeroConstructor)
// bool                           bMustAllowSelection            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GetGuidReferences(const struct FGuid& Guid, const struct FName& Type, bool bMustAllowSelection, bool bMustBeEnabledForPlay, TArray<struct FGuid>* GuidRefs)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetGuidReferences");

	UPwndUtil_GetGuidReferences_Params params;
	params.Guid = Guid;
	params.Type = Type;
	params.bMustAllowSelection = bMustAllowSelection;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (GuidRefs != nullptr)
		*GuidRefs = params.GuidRefs;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetGround
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutGround                      (Parm, OutParm, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_GetGround(class UObject* WorldContextObject, TEnumAsByte<ECollisionChannel> TraceChannel, TArray<class AActor*> ActorsToIgnore, const struct FVector& Origin, float Distance, const struct FVector& Extent, struct FHitResult* OutGround)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetGround");

	UPwndUtil_GetGround_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TraceChannel = TraceChannel;
	params.ActorsToIgnore = ActorsToIgnore;
	params.Origin = Origin;
	params.Distance = Distance;
	params.Extent = Extent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutGround != nullptr)
		*OutGround = params.OutGround;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetGameInstanceFromContextObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UGameInstance*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGameInstance* UPwndUtil::STATIC_GetGameInstanceFromContextObject(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetGameInstanceFromContextObject");

	UPwndUtil_GetGameInstanceFromContextObject_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetExportGUID
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData)

struct FGuid UPwndUtil::STATIC_GetExportGUID(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetExportGUID");

	UPwndUtil_GetExportGUID_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetEnemyTeams
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APwndTeamInfo*>   EnemyTeams                     (Parm, OutParm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GetEnemyTeams(class UObject* Obj, TArray<class APwndTeamInfo*>* EnemyTeams)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetEnemyTeams");

	UPwndUtil_GetEnemyTeams_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (EnemyTeams != nullptr)
		*EnemyTeams = params.EnemyTeams;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetEnemyTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseHighestScore               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludePotentialScore         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseChargingScore              (Parm, ZeroConstructor, IsPlainOldData)
// class APwndTeamInfo*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndTeamInfo* UPwndUtil::STATIC_GetEnemyTeam(class UObject* Obj, bool bUseHighestScore, bool bIncludePotentialScore, bool bUseChargingScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetEnemyTeam");

	UPwndUtil_GetEnemyTeam_Params params;
	params.Obj = Obj;
	params.bUseHighestScore = bUseHighestScore;
	params.bIncludePotentialScore = bIncludePotentialScore;
	params.bUseChargingScore = bUseChargingScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDmgWeaponArchetype
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPwndUtil::STATIC_GetDmgWeaponArchetype(const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDmgWeaponArchetype");

	UPwndUtil_GetDmgWeaponArchetype_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDmgWeapon
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class APwndWeapon*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndWeapon* UPwndUtil::STATIC_GetDmgWeapon(const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDmgWeapon");

	UPwndUtil_GetDmgWeapon_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDmgProjectile
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class APwndProjectile*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APwndProjectile* UPwndUtil::STATIC_GetDmgProjectile(const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDmgProjectile");

	UPwndUtil_GetDmgProjectile_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDmgDefender
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetDmgDefender(const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDmgDefender");

	UPwndUtil_GetDmgDefender_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDmgAttacker
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetDmgAttacker(const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDmgAttacker");

	UPwndUtil_GetDmgAttacker_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDisplayTextClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetDisplayTextClass(class UClass* Class)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDisplayTextClass");

	UPwndUtil_GetDisplayTextClass_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDisplayText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetDisplayText(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDisplayText");

	UPwndUtil_GetDisplayText_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDisplayDescriptionClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetDisplayDescriptionClass(class UClass* Class)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDisplayDescriptionClass");

	UPwndUtil_GetDisplayDescriptionClass_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDisplayDescription
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPwndUtil::STATIC_GetDisplayDescription(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDisplayDescription");

	UPwndUtil_GetDisplayDescription_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDefender
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetDefender(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDefender");

	UPwndUtil_GetDefender_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDefaultObjectFromClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetDefaultObjectFromClass(class UClass* Class)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDefaultObjectFromClass");

	UPwndUtil_GetDefaultObjectFromClass_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetDamageHistoryComp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// class UPwndDamageHistoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPwndDamageHistoryComponent* UPwndUtil::STATIC_GetDamageHistoryComp(class UObject* Obj, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetDamageHistoryComp");

	UPwndUtil_GetDamageHistoryComp_Params params;
	params.Obj = Obj;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowOwnedAI                  (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* UPwndUtil::STATIC_GetController(class UObject* Obj, bool bAllowOwnedAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetController");

	UPwndUtil_GetController_Params params;
	params.Obj = Obj;
	params.bAllowOwnedAI = bAllowOwnedAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetClassExportGUID
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData)

struct FGuid UPwndUtil::STATIC_GetClassExportGUID(class UClass* Class)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetClassExportGUID");

	UPwndUtil_GetClassExportGUID_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetAxis
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMatrix                 Mat                            (Parm, OutParm, IsPlainOldData)
// int                            I                              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_GetAxis(int I, struct FMatrix* Mat)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetAxis");

	UPwndUtil_GetAxis_Params params;
	params.I = I;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Mat != nullptr)
		*Mat = params.Mat;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetAxes
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                A                              (Parm, IsPlainOldData)
// struct FVector                 X                              (Parm, OutParm, IsPlainOldData)
// struct FVector                 Y                              (Parm, OutParm, IsPlainOldData)
// struct FVector                 Z                              (Parm, OutParm, IsPlainOldData)

void UPwndUtil::STATIC_GetAxes(const struct FRotator& A, struct FVector* X, struct FVector* Y, struct FVector* Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetAxes");

	UPwndUtil_GetAxes_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (X != nullptr)
		*X = params.X;
	if (Y != nullptr)
		*Y = params.Y;
	if (Z != nullptr)
		*Z = params.Z;
}


// Function PWND.PwndUtil.GetAttacker
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UPwndUtil::STATIC_GetAttacker(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetAttacker");

	UPwndUtil_GetAttacker_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetAssetDatabase
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPwndAssetDatabase*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPwndAssetDatabase* UPwndUtil::STATIC_GetAssetDatabase()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetAssetDatabase");

	UPwndUtil_GetAssetDatabase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetAllPawns
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APawn*>           OutPawns                       (Parm, OutParm, ZeroConstructor)

void UPwndUtil::STATIC_GetAllPawns(class UObject* WorldContextObject, TArray<class APawn*>* OutPawns)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetAllPawns");

	UPwndUtil_GetAllPawns_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPawns != nullptr)
		*OutPawns = params.OutPawns;
}


// Function PWND.PwndUtil.GetAllAvailableCharacters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIncludeNonEnabledForPlay      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FGuid>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FGuid> UPwndUtil::STATIC_GetAllAvailableCharacters(bool bIncludeNonEnabledForPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetAllAvailableCharacters");

	UPwndUtil_GetAllAvailableCharacters_Params params;
	params.bIncludeNonEnabledForPlay = bIncludeNonEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetAllAssetGuids
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FGuid>           Guids                          (Parm, OutParm, ZeroConstructor)
// class UClass*                  ClassFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMustAllowSelection            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMustBeEnabledForPlay          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GetAllAssetGuids(class UClass* ClassFilter, bool bMustAllowSelection, bool bMustBeEnabledForPlay, TArray<struct FGuid>* Guids)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetAllAssetGuids");

	UPwndUtil_GetAllAssetGuids_Params params;
	params.ClassFilter = ClassFilter;
	params.bMustAllowSelection = bMustAllowSelection;
	params.bMustBeEnabledForPlay = bMustBeEnabledForPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Guids != nullptr)
		*Guids = params.Guids;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GetActorSpawnLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 DesiredPos                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bIncludePawnCollision          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_GetActorSpawnLocation(class UObject* WorldContextObject, class UClass* ActorClass, const struct FVector& DesiredPos, bool bIncludePawnCollision)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GetActorSpawnLocation");

	UPwndUtil_GetActorSpawnLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ActorClass = ActorClass;
	params.DesiredPos = DesiredPos;
	params.bIncludePawnCollision = bIncludePawnCollision;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.GeneratePointCloud
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FVector>         Points                         (Parm, OutParm, ZeroConstructor)
// struct FVector                 SearchCenter                   (Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Resolution                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_GeneratePointCloud(const struct FVector& SearchCenter, float Radius, float Resolution, TArray<struct FVector>* Points)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.GeneratePointCloud");

	UPwndUtil_GeneratePointCloud_Params params;
	params.SearchCenter = SearchCenter;
	params.Radius = Radius;
	params.Resolution = Resolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Points != nullptr)
		*Points = params.Points;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.FindClassMatch
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  SearchClass                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ClassArr                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bExact                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_FindClassMatch(class UClass* SearchClass, TArray<class UClass*> ClassArr, bool bExact)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.FindClassMatch");

	UPwndUtil_FindClassMatch_Params params;
	params.SearchClass = SearchClass;
	params.ClassArr = ClassArr;
	params.bExact = bExact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.EnabledForPlay
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_EnabledForPlay(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.EnabledForPlay");

	UPwndUtil_EnabledForPlay_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.CreateLookatRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Direction                      (Parm, IsPlainOldData)
// struct FRotator                CurrentRotation                (Parm, IsPlainOldData)
// struct FVector                 UpHint                         (Parm, IsPlainOldData)
// bool                           bForceUp                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UPwndUtil::STATIC_CreateLookatRotation(const struct FVector& Direction, const struct FRotator& CurrentRotation, const struct FVector& UpHint, bool bForceUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.CreateLookatRotation");

	UPwndUtil_CreateLookatRotation_Params params;
	params.Direction = Direction;
	params.CurrentRotation = CurrentRotation;
	params.UpHint = UpHint;
	params.bForceUp = bForceUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.CreateEventTriggerPost
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Trig                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          TrigCount                      (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other1                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other2                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other3                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other4                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other5                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPostedEventTrigger     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPostedEventTrigger UPwndUtil::STATIC_CreateEventTriggerPost(TEnumAsByte<EeEventTrigger> Trig, float TrigCount, class UObject* Other1, class UObject* Other2, class UObject* Other3, class UObject* Other4, class UObject* Other5)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.CreateEventTriggerPost");

	UPwndUtil_CreateEventTriggerPost_Params params;
	params.Trig = Trig;
	params.TrigCount = TrigCount;
	params.Other1 = Other1;
	params.Other2 = Other2;
	params.Other3 = Other3;
	params.Other4 = Other4;
	params.Other5 = Other5;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ConvertTriangleToCircleTimer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          InTime                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_ConvertTriangleToCircleTimer(float InTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ConvertTriangleToCircleTimer");

	UPwndUtil_ConvertTriangleToCircleTimer_Params params;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ComputeWrapAroundDistance
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  SearchActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SearchCenter                   (Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          WrapAroundGridRadius           (Parm, ZeroConstructor, IsPlainOldData)
// float                          OutWrapAroundDist              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ComputeWrapAroundDistance(class AActor* Target, class AActor* SearchActor, const struct FVector& SearchCenter, float Radius, float WrapAroundGridRadius, float* OutWrapAroundDist)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ComputeWrapAroundDistance");

	UPwndUtil_ComputeWrapAroundDistance_Params params;
	params.Target = Target;
	params.SearchActor = SearchActor;
	params.SearchCenter = SearchCenter;
	params.Radius = Radius;
	params.WrapAroundGridRadius = WrapAroundGridRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWrapAroundDist != nullptr)
		*OutWrapAroundDist = params.OutWrapAroundDist;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ComputeTargetStrength
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Act                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartTrace                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                AimRot                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                AngleExtents                   (Parm, IsPlainOldData)
// struct FVector2D               NearExtents                    (Parm, IsPlainOldData)
// bool                           bAllowEnemies                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowAllies                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowCrawling                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowCloak                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireLOS                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeMathOperation>   CombineMathOp                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndUtil::STATIC_ComputeTargetStrength(class AActor* Instigator, class AActor* Act, const struct FVector& StartTrace, const struct FRotator& AimRot, float MaxDistance, const struct FRotator& AngleExtents, const struct FVector2D& NearExtents, bool bAllowEnemies, bool bAllowAllies, bool bAllowCrawling, bool bAllowCloak, bool bRequireLOS, TEnumAsByte<EeMathOperation> CombineMathOp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ComputeTargetStrength");

	UPwndUtil_ComputeTargetStrength_Params params;
	params.Instigator = Instigator;
	params.Act = Act;
	params.StartTrace = StartTrace;
	params.AimRot = AimRot;
	params.MaxDistance = MaxDistance;
	params.AngleExtents = AngleExtents;
	params.NearExtents = NearExtents;
	params.bAllowEnemies = bAllowEnemies;
	params.bAllowAllies = bAllowAllies;
	params.bAllowCrawling = bAllowCrawling;
	params.bAllowCloak = bAllowCloak;
	params.bRequireLOS = bRequireLOS;
	params.CombineMathOp = CombineMathOp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ComputeTargets
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartTrace                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                AimRot                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                AngleExtents                   (Parm, IsPlainOldData)
// struct FVector2D               NearExtents                    (Parm, IsPlainOldData)
// bool                           bAllowEnemies                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowAllies                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowCrawling                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowCloak                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireLOS                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EeMathOperation>   CombineMathOp                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AActor*> UPwndUtil::STATIC_ComputeTargets(class AActor* Instigator, const struct FVector& StartTrace, const struct FRotator& AimRot, float MaxDistance, const struct FRotator& AngleExtents, const struct FVector2D& NearExtents, bool bAllowEnemies, bool bAllowAllies, bool bAllowCrawling, bool bAllowCloak, bool bRequireLOS, TEnumAsByte<EeMathOperation> CombineMathOp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ComputeTargets");

	UPwndUtil_ComputeTargets_Params params;
	params.Instigator = Instigator;
	params.StartTrace = StartTrace;
	params.AimRot = AimRot;
	params.MaxDistance = MaxDistance;
	params.AngleExtents = AngleExtents;
	params.NearExtents = NearExtents;
	params.bAllowEnemies = bAllowEnemies;
	params.bAllowAllies = bAllowAllies;
	params.bAllowCrawling = bAllowCrawling;
	params.bAllowCloak = bAllowCloak;
	params.bRequireLOS = bRequireLOS;
	params.CombineMathOp = CombineMathOp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ComputeSplashDamageTargets
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FPwndSplashDamageTarget> SplashDamageTargets            (Parm, OutParm, ZeroConstructor)
// class AActor*                  SearchActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SearchCenter                   (Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<class AActor*>          IgnoredActors                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          WrapAroundGridRadius           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireLOS                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowWrapAround               (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndUtil::STATIC_ComputeSplashDamageTargets(class AActor* SearchActor, const struct FVector& SearchCenter, float Radius, const struct FHitResult& HitInfo, TArray<class AActor*> IgnoredActors, float WrapAroundGridRadius, bool bRequireLOS, bool bAllowWrapAround, TArray<struct FPwndSplashDamageTarget>* SplashDamageTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ComputeSplashDamageTargets");

	UPwndUtil_ComputeSplashDamageTargets_Params params;
	params.SearchActor = SearchActor;
	params.SearchCenter = SearchCenter;
	params.Radius = Radius;
	params.HitInfo = HitInfo;
	params.IgnoredActors = IgnoredActors;
	params.WrapAroundGridRadius = WrapAroundGridRadius;
	params.bRequireLOS = bRequireLOS;
	params.bAllowWrapAround = bAllowWrapAround;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SplashDamageTargets != nullptr)
		*SplashDamageTargets = params.SplashDamageTargets;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ClosestPointOnPrimitiveCollision
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     Comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 SearchPoint                    (Parm, IsPlainOldData)
// struct FVector                 OutPoint                       (Parm, OutParm, IsPlainOldData)
// bool                           bClampToOutside                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ClosestPointOnPrimitiveCollision(class UPrimitiveComponent* Comp, const struct FVector& SearchPoint, bool bClampToOutside, struct FVector* OutPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ClosestPointOnPrimitiveCollision");

	UPwndUtil_ClosestPointOnPrimitiveCollision_Params params;
	params.Comp = Comp;
	params.SearchPoint = SearchPoint;
	params.bClampToOutside = bClampToOutside;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPoint != nullptr)
		*OutPoint = params.OutPoint;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ClosestPointOnActorCollision
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SearchPoint                    (Parm, IsPlainOldData)
// struct FVector                 OutPoint                       (Parm, OutParm, IsPlainOldData)
// class UPrimitiveComponent*     OutComp                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bClampToOutside                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_ClosestPointOnActorCollision(class AActor* Target, const struct FVector& SearchPoint, bool bClampToOutside, struct FVector* OutPoint, class UPrimitiveComponent** OutComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ClosestPointOnActorCollision");

	UPwndUtil_ClosestPointOnActorCollision_Params params;
	params.Target = Target;
	params.SearchPoint = SearchPoint;
	params.bClampToOutside = bClampToOutside;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPoint != nullptr)
		*OutPoint = params.OutPoint;
	if (OutComp != nullptr)
		*OutComp = params.OutComp;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.CheckObjectIsA
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FObjectIsA              ObjIsA                         (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_CheckObjectIsA(const struct FObjectIsA& ObjIsA, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.CheckObjectIsA");

	UPwndUtil_CheckObjectIsA_Params params;
	params.ObjIsA = ObjIsA;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.CheckEventTriggerStateIsA
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 Other                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FEventTriggerStateIsA   ObjIsA                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_CheckEventTriggerStateIsA(class UObject* Other, const struct FEventTriggerStateIsA& ObjIsA)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.CheckEventTriggerStateIsA");

	UPwndUtil_CheckEventTriggerStateIsA_Params params;
	params.Other = Other;
	params.ObjIsA = ObjIsA;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.CheckAnyObjectIsA
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FObjectIsA>      ArrObjIsA                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_CheckAnyObjectIsA(TArray<struct FObjectIsA> ArrObjIsA, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.CheckAnyObjectIsA");

	UPwndUtil_CheckAnyObjectIsA_Params params;
	params.ArrObjIsA = ArrObjIsA;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.CheckAllObjectIsA
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FObjectIsA>      ArrObjIsA                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_CheckAllObjectIsA(TArray<struct FObjectIsA> ArrObjIsA, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.CheckAllObjectIsA");

	UPwndUtil_CheckAllObjectIsA_Params params;
	params.ArrObjIsA = ArrObjIsA;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ChangeLocalization
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Target                         (Parm, ZeroConstructor)

void UPwndUtil::STATIC_ChangeLocalization(const struct FString& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ChangeLocalization");

	UPwndUtil_ChangeLocalization_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndUtil.BroadcastEventTriggerInline
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EeEventTrigger>    Trig                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          TrigCount                      (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other1                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other2                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other3                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other4                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Other5                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_BroadcastEventTriggerInline(TEnumAsByte<EeEventTrigger> Trig, float TrigCount, class UObject* Other1, class UObject* Other2, class UObject* Other3, class UObject* Other4, class UObject* Other5)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.BroadcastEventTriggerInline");

	UPwndUtil_BroadcastEventTriggerInline_Params params;
	params.Trig = Trig;
	params.TrigCount = TrigCount;
	params.Other1 = Other1;
	params.Other2 = Other2;
	params.Other3 = Other3;
	params.Other4 = Other4;
	params.Other5 = Other5;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.BroadcastEventTrigger
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPostedEventTrigger     Trig                           (ConstParm, Parm, OutParm, ReferenceParm)
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndUtil::STATIC_BroadcastEventTrigger(const struct FPostedEventTrigger& Trig, class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.BroadcastEventTrigger");

	UPwndUtil_BroadcastEventTrigger_Params params;
	params.Trig = Trig;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ApplyVelocityInheritance
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EeVelocityInheritance> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 InheritVelocity                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPwndUtil::STATIC_ApplyVelocityInheritance(TEnumAsByte<EeVelocityInheritance> Type, const struct FVector& Velocity, const struct FVector& InheritVelocity, float Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ApplyVelocityInheritance");

	UPwndUtil_ApplyVelocityInheritance_Params params;
	params.Type = Type;
	params.Velocity = Velocity;
	params.InheritVelocity = InheritVelocity;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndUtil.ApplyClientPhysicsImpulse
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  SearchActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SearchCenter                   (Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Strength                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoredActors                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<ERadialImpulseFalloff> Falloff                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bVelChange                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireLOS                    (Parm, ZeroConstructor, IsPlainOldData)

void UPwndUtil::STATIC_ApplyClientPhysicsImpulse(class AActor* SearchActor, const struct FVector& SearchCenter, float Radius, float Strength, TArray<class AActor*> IgnoredActors, TEnumAsByte<ERadialImpulseFalloff> Falloff, bool bVelChange, bool bRequireLOS)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndUtil.ApplyClientPhysicsImpulse");

	UPwndUtil_ApplyClientPhysicsImpulse_Params params;
	params.SearchActor = SearchActor;
	params.SearchCenter = SearchCenter;
	params.Radius = Radius;
	params.Strength = Strength;
	params.IgnoredActors = IgnoredActors;
	params.Falloff = Falloff;
	params.bVelChange = bVelChange;
	params.bRequireLOS = bRequireLOS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.StopVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicateToAll                (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::StopVO(const struct FName& VoiceOverID, bool bReplicateToAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.StopVO");

	UPwndVoiceBoxComponent_StopVO_Params params;
	params.VoiceOverID = VoiceOverID;
	params.bReplicateToAll = bReplicateToAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.StopCustomVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicateToAll                (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::StopCustomVO(class USoundBase* customVO, bool bReplicateToAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.StopCustomVO");

	UPwndVoiceBoxComponent_StopCustomVO_Params params;
	params.customVO = customVO;
	params.bReplicateToAll = bReplicateToAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.PlayVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicateToAll                (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::PlayVO(const struct FName& VoiceOverID, bool bInterrupt, bool bReplicateToAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.PlayVO");

	UPwndVoiceBoxComponent_PlayVO_Params params;
	params.VoiceOverID = VoiceOverID;
	params.bInterrupt = bInterrupt;
	params.bReplicateToAll = bReplicateToAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.PlayCustomVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReplicateToAll                (Parm, ZeroConstructor, IsPlainOldData)
// int                            VOPriority                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::PlayCustomVO(class USoundBase* customVO, bool bInterrupt, bool bReplicateToAll, int VOPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.PlayCustomVO");

	UPwndVoiceBoxComponent_PlayCustomVO_Params params;
	params.customVO = customVO;
	params.bInterrupt = bInterrupt;
	params.bReplicateToAll = bReplicateToAll;
	params.VOPriority = VOPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.OnAudioFinishedCallback
// (Final, Native, Protected)

void UPwndVoiceBoxComponent::OnAudioFinishedCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.OnAudioFinishedCallback");

	UPwndVoiceBoxComponent_OnAudioFinishedCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.MulticastStopVO
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::MulticastStopVO(const struct FName& VoiceOverID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.MulticastStopVO");

	UPwndVoiceBoxComponent_MulticastStopVO_Params params;
	params.VoiceOverID = VoiceOverID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.MulticastStopCustomVO
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::MulticastStopCustomVO(class USoundBase* customVO)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.MulticastStopCustomVO");

	UPwndVoiceBoxComponent_MulticastStopCustomVO_Params params;
	params.customVO = customVO;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.MulticastPlayVO
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::MulticastPlayVO(const struct FName& VoiceOverID, bool bInterrupt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.MulticastPlayVO");

	UPwndVoiceBoxComponent_MulticastPlayVO_Params params;
	params.VoiceOverID = VoiceOverID;
	params.bInterrupt = bInterrupt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.MulticastPlayCustomVO
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            VOPriority                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::MulticastPlayCustomVO(class USoundBase* customVO, bool bInterrupt, int VOPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.MulticastPlayCustomVO");

	UPwndVoiceBoxComponent_MulticastPlayCustomVO_Params params;
	params.customVO = customVO;
	params.bInterrupt = bInterrupt;
	params.VOPriority = VOPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.HasVO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndVoiceBoxComponent::HasVO(const struct FName& VoiceOverID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.HasVO");

	UPwndVoiceBoxComponent_HasVO_Params params;
	params.VoiceOverID = VoiceOverID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndVoiceBoxComponent.GetServerTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPwndVoiceBoxComponent::GetServerTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.GetServerTimeStamp");

	UPwndVoiceBoxComponent_GetServerTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndVoiceBoxComponent.ClientStopVO
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::ClientStopVO(const struct FName& VoiceOverID)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.ClientStopVO");

	UPwndVoiceBoxComponent_ClientStopVO_Params params;
	params.VoiceOverID = VoiceOverID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.ClientStopCustomVO
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::ClientStopCustomVO(class USoundBase* customVO)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.ClientStopCustomVO");

	UPwndVoiceBoxComponent_ClientStopCustomVO_Params params;
	params.customVO = customVO;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.ClientPlayVO
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FName                   VoiceOverID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::ClientPlayVO(const struct FName& VoiceOverID, bool bInterrupt)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.ClientPlayVO");

	UPwndVoiceBoxComponent_ClientPlayVO_Params params;
	params.VoiceOverID = VoiceOverID;
	params.bInterrupt = bInterrupt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.ClientPlayCustomVO
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class USoundBase*              customVO                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupt                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            VOPriority                     (Parm, ZeroConstructor, IsPlainOldData)

void UPwndVoiceBoxComponent::ClientPlayCustomVO(class USoundBase* customVO, bool bInterrupt, int VOPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.ClientPlayCustomVO");

	UPwndVoiceBoxComponent_ClientPlayCustomVO_Params params;
	params.customVO = customVO;
	params.bInterrupt = bInterrupt;
	params.VOPriority = VOPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndVoiceBoxComponent.CanSpeak
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndVoiceBoxComponent::CanSpeak()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndVoiceBoxComponent.CanSpeak");

	UPwndVoiceBoxComponent_CanSpeak_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWidgetInterfaceManager.UnBindUINavigationInputActions
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::UnBindUINavigationInputActions()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.UnBindUINavigationInputActions");

	UPwndWidgetInterfaceManager_UnBindUINavigationInputActions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.StoreCurrentMatchGUID
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::StoreCurrentMatchGUID()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.StoreCurrentMatchGUID");

	UPwndWidgetInterfaceManager_StoreCurrentMatchGUID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.ShowMainUI
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::ShowMainUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.ShowMainUI");

	UPwndWidgetInterfaceManager_ShowMainUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.SetToBeTrainingLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           isTrainingLevel                (Parm, ZeroConstructor, IsPlainOldData)

void UPwndWidgetInterfaceManager::SetToBeTrainingLevel(bool isTrainingLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.SetToBeTrainingLevel");

	UPwndWidgetInterfaceManager_SetToBeTrainingLevel_Params params;
	params.isTrainingLevel = isTrainingLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.SetToBeChallengeLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsChallengeLevel               (Parm, ZeroConstructor, IsPlainOldData)

void UPwndWidgetInterfaceManager::SetToBeChallengeLevel(bool IsChallengeLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.SetToBeChallengeLevel");

	UPwndWidgetInterfaceManager_SetToBeChallengeLevel_Params params;
	params.IsChallengeLevel = IsChallengeLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.RequestPostMatchScreen
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::RequestPostMatchScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.RequestPostMatchScreen");

	UPwndWidgetInterfaceManager_RequestPostMatchScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.OnTrainingEscapeMenuRequested
// (Event, Public, BlueprintEvent)

void UPwndWidgetInterfaceManager::OnTrainingEscapeMenuRequested()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.OnTrainingEscapeMenuRequested");

	UPwndWidgetInterfaceManager_OnTrainingEscapeMenuRequested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.OnEscapePressed
// (Event, Public, BlueprintEvent)

void UPwndWidgetInterfaceManager::OnEscapePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.OnEscapePressed");

	UPwndWidgetInterfaceManager_OnEscapePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.OnEscapeMenuRequested
// (Event, Public, BlueprintEvent)

void UPwndWidgetInterfaceManager::OnEscapeMenuRequested()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.OnEscapeMenuRequested");

	UPwndWidgetInterfaceManager_OnEscapeMenuRequested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.OnEscapeMenuCleared
// (Event, Public, BlueprintEvent)

void UPwndWidgetInterfaceManager::OnEscapeMenuCleared()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.OnEscapeMenuCleared");

	UPwndWidgetInterfaceManager_OnEscapeMenuCleared_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.IsSafeToExitWithoutPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndWidgetInterfaceManager::IsSafeToExitWithoutPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.IsSafeToExitWithoutPenalty");

	UPwndWidgetInterfaceManager_IsSafeToExitWithoutPenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWidgetInterfaceManager.IsOnlineMatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndWidgetInterfaceManager::IsOnlineMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.IsOnlineMatch");

	UPwndWidgetInterfaceManager_IsOnlineMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWidgetInterfaceManager.IsChallengeLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPwndWidgetInterfaceManager::IsChallengeLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.IsChallengeLevel");

	UPwndWidgetInterfaceManager_IsChallengeLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWidgetInterfaceManager.HideMainUI
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::HideMainUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.HideMainUI");

	UPwndWidgetInterfaceManager_HideMainUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.GoToLobbyScreen
// (Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::GoToLobbyScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.GoToLobbyScreen");

	UPwndWidgetInterfaceManager_GoToLobbyScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.GoToDebugLoadoutScreen
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::GoToDebugLoadoutScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.GoToDebugLoadoutScreen");

	UPwndWidgetInterfaceManager_GoToDebugLoadoutScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.GetNextMatchMakingPenaltyTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPwndWidgetInterfaceManager::GetNextMatchMakingPenaltyTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.GetNextMatchMakingPenaltyTime");

	UPwndWidgetInterfaceManager_GetNextMatchMakingPenaltyTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.PwndWidgetInterfaceManager.ExitMatch
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::ExitMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.ExitMatch");

	UPwndWidgetInterfaceManager_ExitMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.ClearUIScreens
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::ClearUIScreens()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.ClearUIScreens");

	UPwndWidgetInterfaceManager_ClearUIScreens_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.PwndWidgetInterfaceManager.BindUINavigationInputActions
// (Final, Native, Public, BlueprintCallable)

void UPwndWidgetInterfaceManager::BindUINavigationInputActions()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.PwndWidgetInterfaceManager.BindUINavigationInputActions");

	UPwndWidgetInterfaceManager_BindUINavigationInputActions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_ButtonHint.OnHintClicked
// (Final, Native, Public)

void UUI_ButtonHint::OnHintClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_ButtonHint.OnHintClicked");

	UUI_ButtonHint_OnHintClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_ChatWidget.SendMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EChatChannelType               Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Message                        (Parm, ZeroConstructor)

void UUI_ChatWidget::SendMessage(EChatChannelType Channel, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_ChatWidget.SendMessage");

	UUI_ChatWidget_SendMessage_Params params;
	params.Channel = Channel;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_ChatWidget.OnSystemMessagesRecieved
// (Final, Native, Public)
// Parameters:
// TArray<struct FString>         messages                       (ConstParm, Parm, ZeroConstructor)

void UUI_ChatWidget::OnSystemMessagesRecieved(TArray<struct FString> messages)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_ChatWidget.OnSystemMessagesRecieved");

	UUI_ChatWidget_OnSystemMessagesRecieved_Params params;
	params.messages = messages;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_ChatWidget.OnMessageRecieved
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FChatMessageStruct      ChatMessage                    (ConstParm, Parm, OutParm, ReferenceParm)

void UUI_ChatWidget::OnMessageRecieved(const struct FChatMessageStruct& ChatMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_ChatWidget.OnMessageRecieved");

	UUI_ChatWidget_OnMessageRecieved_Params params;
	params.ChatMessage = ChatMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_ChatWidget.OnAnnoucementsRecieved
// (Final, Native, Public)
// Parameters:
// TArray<struct FString>         messages                       (ConstParm, Parm, ZeroConstructor)

void UUI_ChatWidget::OnAnnoucementsRecieved(TArray<struct FString> messages)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_ChatWidget.OnAnnoucementsRecieved");

	UUI_ChatWidget_OnAnnoucementsRecieved_Params params;
	params.messages = messages;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownBase.ToggleDropDownCallable
// (Final, Native, Public, BlueprintCallable)

void UUI_DropDownBase::ToggleDropDownCallable()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownBase.ToggleDropDownCallable");

	UUI_DropDownBase_ToggleDropDownCallable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownBase.ToggleDropDown
// (Event, Public, BlueprintEvent)

void UUI_DropDownBase::ToggleDropDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownBase.ToggleDropDown");

	UUI_DropDownBase_ToggleDropDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownBase.SetInitialFocusWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             DropDownButton                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_DropDownBase::SetInitialFocusWidget(class UUserWidget* DropDownButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownBase.SetInitialFocusWidget");

	UUI_DropDownBase_SetInitialFocusWidget_Params params;
	params.DropDownButton = DropDownButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownBase.ListUpdated
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FText>           UpdatedList                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FString                 IndexString                    (Parm, ZeroConstructor)

void UUI_DropDownBase::ListUpdated(TArray<struct FText> UpdatedList, const struct FString& IndexString)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownBase.ListUpdated");

	UUI_DropDownBase_ListUpdated_Params params;
	params.UpdatedList = UpdatedList;
	params.IndexString = IndexString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownBase.ClearDropDownWidgetList
// (Final, Native, Public, BlueprintCallable)

void UUI_DropDownBase::ClearDropDownWidgetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownBase.ClearDropDownWidgetList");

	UUI_DropDownBase_ClearDropDownWidgetList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownBase.AddDropDownWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_DropDownButton*      DropDownButton                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_DropDownBase::AddDropDownWidget(class UUI_DropDownButton* DropDownButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownBase.AddDropDownWidget");

	UUI_DropDownBase_AddDropDownWidget_Params params;
	params.DropDownButton = DropDownButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.SetText
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   newText                        (ConstParm, Parm, OutParm, ReferenceParm)

void UUI_GeneralUseCaseButton::SetText(const struct FText& newText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.SetText");

	UUI_GeneralUseCaseButton_SetText_Params params;
	params.newText = newText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.SetDisabledState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           disable                        (Parm, ZeroConstructor, IsPlainOldData)

void UUI_GeneralUseCaseButton::SetDisabledState(bool disable)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.SetDisabledState");

	UUI_GeneralUseCaseButton_SetDisabledState_Params params;
	params.disable = disable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.RegisterPressedAnimState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GeneralUseCaseButton::RegisterPressedAnimState(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.RegisterPressedAnimState");

	UUI_GeneralUseCaseButton_RegisterPressedAnimState_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.RegisterNormalToPressedAnimState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GeneralUseCaseButton::RegisterNormalToPressedAnimState(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.RegisterNormalToPressedAnimState");

	UUI_GeneralUseCaseButton_RegisterNormalToPressedAnimState_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.RegisterNormalAnimState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*        pWidgetAnimation               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GeneralUseCaseButton::RegisterNormalAnimState(class UWidgetAnimation* pWidgetAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.RegisterNormalAnimState");

	UUI_GeneralUseCaseButton_RegisterNormalAnimState_Params params;
	params.pWidgetAnimation = pWidgetAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.PassTextReferenceToCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextBlock*              pTextReference                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GeneralUseCaseButton::PassTextReferenceToCode(class UTextBlock* pTextReference)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.PassTextReferenceToCode");

	UUI_GeneralUseCaseButton_PassTextReferenceToCode_Params params;
	params.pTextReference = pTextReference;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.PassImageReferenceToCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UImage*                  pImageReference                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GeneralUseCaseButton::PassImageReferenceToCode(class UImage* pImageReference)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.PassImageReferenceToCode");

	UUI_GeneralUseCaseButton_PassImageReferenceToCode_Params params;
	params.pImageReference = pImageReference;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.PassButtonReferenceToCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UButton*                 pButtonReference               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GeneralUseCaseButton::PassButtonReferenceToCode(class UButton* pButtonReference)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.PassButtonReferenceToCode");

	UUI_GeneralUseCaseButton_PassButtonReferenceToCode_Params params;
	params.pButtonReference = pButtonReference;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.PassBorderReferenceToCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBorder*                 pBorderReference               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GeneralUseCaseButton::PassBorderReferenceToCode(class UBorder* pBorderReference)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.PassBorderReferenceToCode");

	UUI_GeneralUseCaseButton_PassBorderReferenceToCode_Params params;
	params.pBorderReference = pBorderReference;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.OnRightPressed_Local
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::OnRightPressed_Local()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.OnRightPressed_Local");

	UUI_GeneralUseCaseButton_OnRightPressed_Local_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.OnMouseUnHovered
// (Final, Native, Public)

void UUI_GeneralUseCaseButton::OnMouseUnHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.OnMouseUnHovered");

	UUI_GeneralUseCaseButton_OnMouseUnHovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.OnMouseReleased
// (Final, Native, Public)

void UUI_GeneralUseCaseButton::OnMouseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.OnMouseReleased");

	UUI_GeneralUseCaseButton_OnMouseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.OnMousePressedDown
// (Final, Native, Public)

void UUI_GeneralUseCaseButton::OnMousePressedDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.OnMousePressedDown");

	UUI_GeneralUseCaseButton_OnMousePressedDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.OnMouseHovered
// (Final, Native, Public)

void UUI_GeneralUseCaseButton::OnMouseHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.OnMouseHovered");

	UUI_GeneralUseCaseButton_OnMouseHovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.OnLeftPressed_Local
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::OnLeftPressed_Local()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.OnLeftPressed_Local");

	UUI_GeneralUseCaseButton_OnLeftPressed_Local_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.OnButtonPressed_Local
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::OnButtonPressed_Local()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.OnButtonPressed_Local");

	UUI_GeneralUseCaseButton_OnButtonPressed_Local_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.IsButtonDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUI_GeneralUseCaseButton::IsButtonDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.IsButtonDisabled");

	UUI_GeneralUseCaseButton_IsButtonDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.UI_GeneralUseCaseButton.Cosmetic_SelectedStateSet
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::Cosmetic_SelectedStateSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.Cosmetic_SelectedStateSet");

	UUI_GeneralUseCaseButton_Cosmetic_SelectedStateSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.Cosmetic_SelectedHoverStateSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bWasMouse                      (Parm, ZeroConstructor, IsPlainOldData)

void UUI_GeneralUseCaseButton::Cosmetic_SelectedHoverStateSet(bool bWasMouse)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.Cosmetic_SelectedHoverStateSet");

	UUI_GeneralUseCaseButton_Cosmetic_SelectedHoverStateSet_Params params;
	params.bWasMouse = bWasMouse;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.Cosmetic_PressedStateSet
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::Cosmetic_PressedStateSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.Cosmetic_PressedStateSet");

	UUI_GeneralUseCaseButton_Cosmetic_PressedStateSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.Cosmetic_NormalStateSet
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::Cosmetic_NormalStateSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.Cosmetic_NormalStateSet");

	UUI_GeneralUseCaseButton_Cosmetic_NormalStateSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.Cosmetic_HoverStateSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bWasMouse                      (Parm, ZeroConstructor, IsPlainOldData)

void UUI_GeneralUseCaseButton::Cosmetic_HoverStateSet(bool bWasMouse)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.Cosmetic_HoverStateSet");

	UUI_GeneralUseCaseButton_Cosmetic_HoverStateSet_Params params;
	params.bWasMouse = bWasMouse;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.Cosmetic_DisabledStateSet
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::Cosmetic_DisabledStateSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.Cosmetic_DisabledStateSet");

	UUI_GeneralUseCaseButton_Cosmetic_DisabledStateSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GeneralUseCaseButton.Cosmetic_DisabledHoverStateSet
// (Event, Public, BlueprintEvent)

void UUI_GeneralUseCaseButton::Cosmetic_DisabledHoverStateSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GeneralUseCaseButton.Cosmetic_DisabledHoverStateSet");

	UUI_GeneralUseCaseButton_Cosmetic_DisabledHoverStateSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.ToggleList
// (Final, Native, Public, BlueprintCallable)

void UUI_DropDownScalable::ToggleList()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.ToggleList");

	UUI_DropDownScalable_ToggleList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.SetupSelectionGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_SelectableGroup*     pSelectionGroup                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_DropDownScalable::SetupSelectionGroup(class UUI_SelectableGroup* pSelectionGroup)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.SetupSelectionGroup");

	UUI_DropDownScalable_SetupSelectionGroup_Params params;
	params.pSelectionGroup = pSelectionGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.RegisterForNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFrontEnd_BaseScreen*    pScreen                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_DropDownScalable::RegisterForNavigation(class UFrontEnd_BaseScreen* pScreen)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.RegisterForNavigation");

	UUI_DropDownScalable_RegisterForNavigation_Params params;
	params.pScreen = pScreen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.PassVerticalBoxReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UVerticalBox*            pVerBoxRef                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_DropDownScalable::PassVerticalBoxReference(class UVerticalBox* pVerBoxRef)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.PassVerticalBoxReference");

	UUI_DropDownScalable_PassVerticalBoxReference_Params params;
	params.pVerBoxRef = pVerBoxRef;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.OpenList
// (Final, Native, Public, BlueprintCallable)

void UUI_DropDownScalable::OpenList()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.OpenList");

	UUI_DropDownScalable_OpenList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.OnListElementSelected
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDropDownElement        SelectedListItem               (ConstParm, Parm, OutParm, ReferenceParm)

void UUI_DropDownScalable::OnListElementSelected(const struct FDropDownElement& SelectedListItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.OnListElementSelected");

	UUI_DropDownScalable_OnListElementSelected_Params params;
	params.SelectedListItem = SelectedListItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.IsOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUI_DropDownScalable::IsOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.IsOpen");

	UUI_DropDownScalable_IsOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.UI_DropDownScalable.GetElementText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUI_DropDownScalable::GetElementText(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.GetElementText");

	UUI_DropDownScalable_GetElementText_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.UI_DropDownScalable.GetElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UUI_DropDownScalable::GetElement(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.GetElement");

	UUI_DropDownScalable_GetElement_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.UI_DropDownScalable.CloseList
// (Final, Native, Public, BlueprintCallable)

void UUI_DropDownScalable::CloseList()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.CloseList");

	UUI_DropDownScalable_CloseList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.BuildListFromTextArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FText>           textArray                      (Parm, ZeroConstructor)

void UUI_DropDownScalable::BuildListFromTextArray(TArray<struct FText> textArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.BuildListFromTextArray");

	UUI_DropDownScalable_BuildListFromTextArray_Params params;
	params.textArray = textArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_DropDownScalable.BuildListFromStringArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FString>         stringArray                    (Parm, ZeroConstructor)

void UUI_DropDownScalable::BuildListFromStringArray(TArray<struct FString> stringArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_DropDownScalable.BuildListFromStringArray");

	UUI_DropDownScalable_BuildListFromStringArray_Params params;
	params.stringArray = stringArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EndOfMatchLoadout.OnUnHoveredByMouseRight
// (Native, Public)

void UUI_EndOfMatchLoadout::OnUnHoveredByMouseRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EndOfMatchLoadout.OnUnHoveredByMouseRight");

	UUI_EndOfMatchLoadout_OnUnHoveredByMouseRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EndOfMatchLoadout.OnUnHoveredByMouseLeft
// (Native, Public)

void UUI_EndOfMatchLoadout::OnUnHoveredByMouseLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EndOfMatchLoadout.OnUnHoveredByMouseLeft");

	UUI_EndOfMatchLoadout_OnUnHoveredByMouseLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EndOfMatchLoadout.OnUnHoveredByMouseCenter
// (Native, Public)

void UUI_EndOfMatchLoadout::OnUnHoveredByMouseCenter()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EndOfMatchLoadout.OnUnHoveredByMouseCenter");

	UUI_EndOfMatchLoadout_OnUnHoveredByMouseCenter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EndOfMatchLoadout.OnHoveredByMouseRight
// (Native, Public)

void UUI_EndOfMatchLoadout::OnHoveredByMouseRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EndOfMatchLoadout.OnHoveredByMouseRight");

	UUI_EndOfMatchLoadout_OnHoveredByMouseRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EndOfMatchLoadout.OnHoveredByMouseLeft
// (Native, Public)

void UUI_EndOfMatchLoadout::OnHoveredByMouseLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EndOfMatchLoadout.OnHoveredByMouseLeft");

	UUI_EndOfMatchLoadout_OnHoveredByMouseLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EndOfMatchLoadout.OnHoveredByMouseCenter
// (Native, Public)

void UUI_EndOfMatchLoadout::OnHoveredByMouseCenter()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EndOfMatchLoadout.OnHoveredByMouseCenter");

	UUI_EndOfMatchLoadout_OnHoveredByMouseCenter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EscapeMenu.SpawnAreYouSureYouWantToLeavePopUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_GenericPopUp*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUI_GenericPopUp* UUI_EscapeMenu::SpawnAreYouSureYouWantToLeavePopUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EscapeMenu.SpawnAreYouSureYouWantToLeavePopUp");

	UUI_EscapeMenu_SpawnAreYouSureYouWantToLeavePopUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.UI_EscapeMenu.RequestClose
// (Final, Native, Public, BlueprintCallable)

void UUI_EscapeMenu::RequestClose()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EscapeMenu.RequestClose");

	UUI_EscapeMenu_RequestClose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_EscapeMenu.GetPlayersInVoipChannel
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FPlayerVoipInfo> playersInVoipChannel           (Parm, OutParm, ZeroConstructor)

void UUI_EscapeMenu::GetPlayersInVoipChannel(TArray<struct FPlayerVoipInfo>* playersInVoipChannel)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_EscapeMenu.GetPlayersInVoipChannel");

	UUI_EscapeMenu_GetPlayersInVoipChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (playersInVoipChannel != nullptr)
		*playersInVoipChannel = params.playersInVoipChannel;
}


// Function PWND.UI_GenericPopUp.UpdateTextBody
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   Text                           (ConstParm, Parm, OutParm, ReferenceParm)

void UUI_GenericPopUp::UpdateTextBody(const struct FText& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.UpdateTextBody");

	UUI_GenericPopUp_UpdateTextBody_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.PassTitleTextBlockReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextBlock*              pTitleText                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GenericPopUp::PassTitleTextBlockReference(class UTextBlock* pTitleText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.PassTitleTextBlockReference");

	UUI_GenericPopUp_PassTitleTextBlockReference_Params params;
	params.pTitleText = pTitleText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.PassOkayButtonReference_Custom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_GeneralUseCaseButton* pButton                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GenericPopUp::PassOkayButtonReference_Custom(class UUI_GeneralUseCaseButton* pButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.PassOkayButtonReference_Custom");

	UUI_GenericPopUp_PassOkayButtonReference_Custom_Params params;
	params.pButton = pButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.PassOkayButtonReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UButton*                 pButton                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GenericPopUp::PassOkayButtonReference(class UButton* pButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.PassOkayButtonReference");

	UUI_GenericPopUp_PassOkayButtonReference_Params params;
	params.pButton = pButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.PassCancelButtonReference_Custom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_GeneralUseCaseButton* pButton                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GenericPopUp::PassCancelButtonReference_Custom(class UUI_GeneralUseCaseButton* pButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.PassCancelButtonReference_Custom");

	UUI_GenericPopUp_PassCancelButtonReference_Custom_Params params;
	params.pButton = pButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.PassCancelButtonReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UButton*                 pButton                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GenericPopUp::PassCancelButtonReference(class UButton* pButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.PassCancelButtonReference");

	UUI_GenericPopUp_PassCancelButtonReference_Params params;
	params.pButton = pButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.PassBodyTextBlockReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextBlock*              pBodyText                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_GenericPopUp::PassBodyTextBlockReference(class UTextBlock* pBodyText)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.PassBodyTextBlockReference");

	UUI_GenericPopUp_PassBodyTextBlockReference_Params params;
	params.pBodyText = pBodyText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.OnOkayButtonPressed
// (Final, Native, Private)

void UUI_GenericPopUp::OnOkayButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.OnOkayButtonPressed");

	UUI_GenericPopUp_OnOkayButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.OnCloseRequested
// (Event, Public, BlueprintEvent)

void UUI_GenericPopUp::OnCloseRequested()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.OnCloseRequested");

	UUI_GenericPopUp_OnCloseRequested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.OnCancelButtonPressed
// (Final, Native, Private)

void UUI_GenericPopUp::OnCancelButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.OnCancelButtonPressed");

	UUI_GenericPopUp_OnCancelButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.Close
// (Final, Native, Public, BlueprintCallable)

void UUI_GenericPopUp::Close()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.Close");

	UUI_GenericPopUp_Close_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_GenericPopUp.ClearPopUp
// (Final, Native, Private)

void UUI_GenericPopUp::ClearPopUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_GenericPopUp.ClearPopUp");

	UUI_GenericPopUp_ClearPopUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_MutePlayerButton.ToggleMutePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 PlayerName                     (Parm, ZeroConstructor)
// bool                           mute                           (Parm, ZeroConstructor, IsPlainOldData)

void UUI_MutePlayerButton::ToggleMutePlayer(const struct FString& PlayerName, bool mute)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_MutePlayerButton.ToggleMutePlayer");

	UUI_MutePlayerButton_ToggleMutePlayer_Params params;
	params.PlayerName = PlayerName;
	params.mute = mute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_OptionButton.SetOptionsScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFrontEnd_OptionsScreen* Screen                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_OptionButton::SetOptionsScreen(class UFrontEnd_OptionsScreen* Screen)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_OptionButton.SetOptionsScreen");

	UUI_OptionButton_SetOptionsScreen_Params params;
	params.Screen = Screen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_OptionToggle.ActivateToggle
// (Event, Public, BlueprintEvent)

void UUI_OptionToggle::ActivateToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_OptionToggle.ActivateToggle");

	UUI_OptionToggle_ActivateToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_PenaltyWidget.UpdateMessage
// (Final, Native, Public)
// Parameters:
// int64_t                        secondsLeft                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UUI_PenaltyWidget::UpdateMessage(int64_t secondsLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_PenaltyWidget.UpdateMessage");

	UUI_PenaltyWidget_UpdateMessage_Params params;
	params.secondsLeft = secondsLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_PenaltyWidget.Initialize
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUI_PenaltyWidget::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_PenaltyWidget.Initialize");

	UUI_PenaltyWidget_Initialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.UI_SelectableGroup.SelectNewSelectable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_MenuNavigable*       pNewlySelected                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_SelectableGroup::SelectNewSelectable(class UUI_MenuNavigable* pNewlySelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_SelectableGroup.SelectNewSelectable");

	UUI_SelectableGroup_SelectNewSelectable_Params params;
	params.pNewlySelected = pNewlySelected;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_SelectableGroup.GiveGroupReferenceToButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_MenuNavigable*       MenuNavigable                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_SelectableGroup::GiveGroupReferenceToButton(class UUI_MenuNavigable* MenuNavigable)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_SelectableGroup.GiveGroupReferenceToButton");

	UUI_SelectableGroup_GiveGroupReferenceToButton_Params params;
	params.MenuNavigable = MenuNavigable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_SelectableGroup.GetCurrentlySelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_MenuNavigable*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUI_MenuNavigable* UUI_SelectableGroup::GetCurrentlySelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_SelectableGroup.GetCurrentlySelected");

	UUI_SelectableGroup_GetCurrentlySelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function PWND.UI_SelectionHighlighter.SetSelectionToRegisteredButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pItemToHighlight               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_SelectionHighlighter::SetSelectionToRegisteredButton(class UUserWidget* pItemToHighlight)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_SelectionHighlighter.SetSelectionToRegisteredButton");

	UUI_SelectionHighlighter_SetSelectionToRegisteredButton_Params params;
	params.pItemToHighlight = pItemToHighlight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_SelectionHighlighter.RegisterButtonToHighlight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             pFrontEndButtonWidget          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUI_SelectionHighlighter::RegisterButtonToHighlight(class UUserWidget* pFrontEndButtonWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_SelectionHighlighter.RegisterButtonToHighlight");

	UUI_SelectionHighlighter_RegisterButtonToHighlight_Params params;
	params.pFrontEndButtonWidget = pFrontEndButtonWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_SelectionHighlighter.ClearButtonRegistrations
// (Final, Native, Public, BlueprintCallable)

void UUI_SelectionHighlighter::ClearButtonRegistrations()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_SelectionHighlighter.ClearButtonRegistrations");

	UUI_SelectionHighlighter_ClearButtonRegistrations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_TextureSwapButton.OnUnHovered
// (Final, Native, Public)

void UUI_TextureSwapButton::OnUnHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_TextureSwapButton.OnUnHovered");

	UUI_TextureSwapButton_OnUnHovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_TextureSwapButton.OnHoveredByMouse
// (Final, Native, Public)

void UUI_TextureSwapButton::OnHoveredByMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_TextureSwapButton.OnHoveredByMouse");

	UUI_TextureSwapButton_OnHoveredByMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_TextureSwapButton.OnClickedButton
// (Final, Native, Public)

void UUI_TextureSwapButton::OnClickedButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_TextureSwapButton.OnClickedButton");

	UUI_TextureSwapButton_OnClickedButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function PWND.UI_VerticalBarGraph.OnBarAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUserWidget*             newBarWidget                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            teamAffiliationIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UUI_VerticalBarGraph::OnBarAdded(class UUserWidget* newBarWidget, int teamAffiliationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function PWND.UI_VerticalBarGraph.OnBarAdded");

	UUI_VerticalBarGraph_OnBarAdded_Params params;
	params.newBarWidget = newBarWidget;
	params.teamAffiliationIndex = teamAffiliationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
